//
// Generated by JavaToPas v1.5 20171018 - 171019
////////////////////////////////////////////////////////////////////////////////
unit android.icu.math.BigDecimal;

interface

uses
  AndroidAPI.JNIBridge,
  Androidapi.JNI.JavaTypes,
  java.math.BigDecimal,
  java.math.BigInteger,
  android.icu.math.MathContext;

type
  JBigDecimal = interface;

  JBigDecimalClass = interface(JObjectClass)
    ['{C2064796-856A-43AB-A485-78CBFD1E8310}']
    function _GetONE : JBigDecimal; cdecl;                                      //  A: $19
    function _GetROUND_CEILING : Integer; cdecl;                                //  A: $19
    function _GetROUND_DOWN : Integer; cdecl;                                   //  A: $19
    function _GetROUND_FLOOR : Integer; cdecl;                                  //  A: $19
    function _GetROUND_HALF_DOWN : Integer; cdecl;                              //  A: $19
    function _GetROUND_HALF_EVEN : Integer; cdecl;                              //  A: $19
    function _GetROUND_HALF_UP : Integer; cdecl;                                //  A: $19
    function _GetROUND_UNNECESSARY : Integer; cdecl;                            //  A: $19
    function _GetROUND_UP : Integer; cdecl;                                     //  A: $19
    function _GetTEN : JBigDecimal; cdecl;                                      //  A: $19
    function _GetZERO : JBigDecimal; cdecl;                                     //  A: $19
    function abs : JBigDecimal; cdecl; overload;                                // ()Landroid/icu/math/BigDecimal; A: $1
    function abs(&set : JMathContext) : JBigDecimal; cdecl; overload;           // (Landroid/icu/math/MathContext;)Landroid/icu/math/BigDecimal; A: $1
    function add(rhs : JBigDecimal) : JBigDecimal; cdecl; overload;             // (Landroid/icu/math/BigDecimal;)Landroid/icu/math/BigDecimal; A: $1
    function add(rhs : JBigDecimal; &set : JMathContext) : JBigDecimal; cdecl; overload;// (Landroid/icu/math/BigDecimal;Landroid/icu/math/MathContext;)Landroid/icu/math/BigDecimal; A: $1
    function byteValueExact : Byte; cdecl;                                      // ()B A: $1
    function compareTo(rhs : JBigDecimal) : Integer; cdecl; overload;           // (Landroid/icu/math/BigDecimal;)I A: $1
    function compareTo(rhs : JBigDecimal; &set : JMathContext) : Integer; cdecl; overload;// (Landroid/icu/math/BigDecimal;Landroid/icu/math/MathContext;)I A: $1
    function divide(rhs : JBigDecimal) : JBigDecimal; cdecl; overload;          // (Landroid/icu/math/BigDecimal;)Landroid/icu/math/BigDecimal; A: $1
    function divide(rhs : JBigDecimal; &set : JMathContext) : JBigDecimal; cdecl; overload;// (Landroid/icu/math/BigDecimal;Landroid/icu/math/MathContext;)Landroid/icu/math/BigDecimal; A: $1
    function divide(rhs : JBigDecimal; round : Integer) : JBigDecimal; cdecl; overload;// (Landroid/icu/math/BigDecimal;I)Landroid/icu/math/BigDecimal; A: $1
    function divide(rhs : JBigDecimal; scale : Integer; round : Integer) : JBigDecimal; cdecl; overload;// (Landroid/icu/math/BigDecimal;II)Landroid/icu/math/BigDecimal; A: $1
    function divideInteger(rhs : JBigDecimal) : JBigDecimal; cdecl; overload;   // (Landroid/icu/math/BigDecimal;)Landroid/icu/math/BigDecimal; A: $1
    function divideInteger(rhs : JBigDecimal; &set : JMathContext) : JBigDecimal; cdecl; overload;// (Landroid/icu/math/BigDecimal;Landroid/icu/math/MathContext;)Landroid/icu/math/BigDecimal; A: $1
    function doubleValue : Double; cdecl;                                       // ()D A: $1
    function equals(obj : JObject) : boolean; cdecl;                            // (Ljava/lang/Object;)Z A: $1
    function floatValue : Single; cdecl;                                        // ()F A: $1
    function format(before : Integer; after : Integer) : JString; cdecl; overload;// (II)Ljava/lang/String; A: $1
    function format(before : Integer; after : Integer; explaces : Integer; exdigits : Integer; exformint : Integer; exround : Integer) : JString; cdecl; overload;// (IIIIII)Ljava/lang/String; A: $1
    function hashCode : Integer; cdecl;                                         // ()I A: $1
    function init(&string : JString) : JBigDecimal; cdecl; overload;            // (Ljava/lang/String;)V A: $1
    function init(bd : JBigDecimal) : JBigDecimal; cdecl; overload;             // (Ljava/math/BigDecimal;)V A: $1
    function init(bi : JBigInteger) : JBigDecimal; cdecl; overload;             // (Ljava/math/BigInteger;)V A: $1
    function init(bi : JBigInteger; scale : Integer) : JBigDecimal; cdecl; overload;// (Ljava/math/BigInteger;I)V A: $1
    function init(inchars : TJavaArray<Char>) : JBigDecimal; cdecl; overload;   // ([C)V A: $1
    function init(inchars : TJavaArray<Char>; offset : Integer; length : Integer) : JBigDecimal; cdecl; overload;// ([CII)V A: $1
    function init(num : Double) : JBigDecimal; cdecl; overload;                 // (D)V A: $1
    function init(num : Int64) : JBigDecimal; cdecl; overload;                  // (J)V A: $1
    function init(num : Integer) : JBigDecimal; cdecl; overload;                // (I)V A: $1
    function intValue : Integer; cdecl;                                         // ()I A: $1
    function intValueExact : Integer; cdecl;                                    // ()I A: $1
    function longValue : Int64; cdecl;                                          // ()J A: $1
    function longValueExact : Int64; cdecl;                                     // ()J A: $1
    function max(rhs : JBigDecimal) : JBigDecimal; cdecl; overload;             // (Landroid/icu/math/BigDecimal;)Landroid/icu/math/BigDecimal; A: $1
    function max(rhs : JBigDecimal; &set : JMathContext) : JBigDecimal; cdecl; overload;// (Landroid/icu/math/BigDecimal;Landroid/icu/math/MathContext;)Landroid/icu/math/BigDecimal; A: $1
    function min(rhs : JBigDecimal) : JBigDecimal; cdecl; overload;             // (Landroid/icu/math/BigDecimal;)Landroid/icu/math/BigDecimal; A: $1
    function min(rhs : JBigDecimal; &set : JMathContext) : JBigDecimal; cdecl; overload;// (Landroid/icu/math/BigDecimal;Landroid/icu/math/MathContext;)Landroid/icu/math/BigDecimal; A: $1
    function movePointLeft(n : Integer) : JBigDecimal; cdecl;                   // (I)Landroid/icu/math/BigDecimal; A: $1
    function movePointRight(n : Integer) : JBigDecimal; cdecl;                  // (I)Landroid/icu/math/BigDecimal; A: $1
    function multiply(rhs : JBigDecimal) : JBigDecimal; cdecl; overload;        // (Landroid/icu/math/BigDecimal;)Landroid/icu/math/BigDecimal; A: $1
    function multiply(rhs : JBigDecimal; &set : JMathContext) : JBigDecimal; cdecl; overload;// (Landroid/icu/math/BigDecimal;Landroid/icu/math/MathContext;)Landroid/icu/math/BigDecimal; A: $1
    function negate : JBigDecimal; cdecl; overload;                             // ()Landroid/icu/math/BigDecimal; A: $1
    function negate(&set : JMathContext) : JBigDecimal; cdecl; overload;        // (Landroid/icu/math/MathContext;)Landroid/icu/math/BigDecimal; A: $1
    function plus : JBigDecimal; cdecl; overload;                               // ()Landroid/icu/math/BigDecimal; A: $1
    function plus(&set : JMathContext) : JBigDecimal; cdecl; overload;          // (Landroid/icu/math/MathContext;)Landroid/icu/math/BigDecimal; A: $1
    function pow(rhs : JBigDecimal) : JBigDecimal; cdecl; overload;             // (Landroid/icu/math/BigDecimal;)Landroid/icu/math/BigDecimal; A: $1
    function pow(rhs : JBigDecimal; &set : JMathContext) : JBigDecimal; cdecl; overload;// (Landroid/icu/math/BigDecimal;Landroid/icu/math/MathContext;)Landroid/icu/math/BigDecimal; A: $1
    function remainder(rhs : JBigDecimal) : JBigDecimal; cdecl; overload;       // (Landroid/icu/math/BigDecimal;)Landroid/icu/math/BigDecimal; A: $1
    function remainder(rhs : JBigDecimal; &set : JMathContext) : JBigDecimal; cdecl; overload;// (Landroid/icu/math/BigDecimal;Landroid/icu/math/MathContext;)Landroid/icu/math/BigDecimal; A: $1
    function scale : Integer; cdecl;                                            // ()I A: $1
    function setScale(scale : Integer) : JBigDecimal; cdecl; overload;          // (I)Landroid/icu/math/BigDecimal; A: $1
    function setScale(scale : Integer; round : Integer) : JBigDecimal; cdecl; overload;// (II)Landroid/icu/math/BigDecimal; A: $1
    function shortValueExact : SmallInt; cdecl;                                 // ()S A: $1
    function signum : Integer; cdecl;                                           // ()I A: $1
    function subtract(rhs : JBigDecimal) : JBigDecimal; cdecl; overload;        // (Landroid/icu/math/BigDecimal;)Landroid/icu/math/BigDecimal; A: $1
    function subtract(rhs : JBigDecimal; &set : JMathContext) : JBigDecimal; cdecl; overload;// (Landroid/icu/math/BigDecimal;Landroid/icu/math/MathContext;)Landroid/icu/math/BigDecimal; A: $1
    function toBigDecimal : JBigDecimal; cdecl;                                 // ()Ljava/math/BigDecimal; A: $1
    function toBigInteger : JBigInteger; cdecl;                                 // ()Ljava/math/BigInteger; A: $1
    function toBigIntegerExact : JBigInteger; cdecl;                            // ()Ljava/math/BigInteger; A: $1
    function toCharArray : TJavaArray<Char>; cdecl;                             // ()[C A: $1
    function toString : JString; cdecl;                                         // ()Ljava/lang/String; A: $1
    function unscaledValue : JBigInteger; cdecl;                                // ()Ljava/math/BigInteger; A: $1
    function valueOf(dub : Double) : JBigDecimal; cdecl; overload;              // (D)Landroid/icu/math/BigDecimal; A: $9
    function valueOf(lint : Int64) : JBigDecimal; cdecl; overload;              // (J)Landroid/icu/math/BigDecimal; A: $9
    function valueOf(lint : Int64; scale : Integer) : JBigDecimal; cdecl; overload;// (JI)Landroid/icu/math/BigDecimal; A: $9
    property ONE : JBigDecimal read _GetONE;                                    // Landroid/icu/math/BigDecimal; A: $19
    property ROUND_CEILING : Integer read _GetROUND_CEILING;                    // I A: $19
    property ROUND_DOWN : Integer read _GetROUND_DOWN;                          // I A: $19
    property ROUND_FLOOR : Integer read _GetROUND_FLOOR;                        // I A: $19
    property ROUND_HALF_DOWN : Integer read _GetROUND_HALF_DOWN;                // I A: $19
    property ROUND_HALF_EVEN : Integer read _GetROUND_HALF_EVEN;                // I A: $19
    property ROUND_HALF_UP : Integer read _GetROUND_HALF_UP;                    // I A: $19
    property ROUND_UNNECESSARY : Integer read _GetROUND_UNNECESSARY;            // I A: $19
    property ROUND_UP : Integer read _GetROUND_UP;                              // I A: $19
    property TEN : JBigDecimal read _GetTEN;                                    // Landroid/icu/math/BigDecimal; A: $19
    property ZERO : JBigDecimal read _GetZERO;                                  // Landroid/icu/math/BigDecimal; A: $19
  end;

  [JavaSignature('android/icu/math/BigDecimal')]
  JBigDecimal = interface(JObject)
    ['{A63CEF48-04B5-4C74-B6BA-193C7D045306}']
    function abs : JBigDecimal; cdecl; overload;                                // ()Landroid/icu/math/BigDecimal; A: $1
    function abs(&set : JMathContext) : JBigDecimal; cdecl; overload;           // (Landroid/icu/math/MathContext;)Landroid/icu/math/BigDecimal; A: $1
    function add(rhs : JBigDecimal) : JBigDecimal; cdecl; overload;             // (Landroid/icu/math/BigDecimal;)Landroid/icu/math/BigDecimal; A: $1
    function add(rhs : JBigDecimal; &set : JMathContext) : JBigDecimal; cdecl; overload;// (Landroid/icu/math/BigDecimal;Landroid/icu/math/MathContext;)Landroid/icu/math/BigDecimal; A: $1
    function byteValueExact : Byte; cdecl;                                      // ()B A: $1
    function compareTo(rhs : JBigDecimal) : Integer; cdecl; overload;           // (Landroid/icu/math/BigDecimal;)I A: $1
    function compareTo(rhs : JBigDecimal; &set : JMathContext) : Integer; cdecl; overload;// (Landroid/icu/math/BigDecimal;Landroid/icu/math/MathContext;)I A: $1
    function divide(rhs : JBigDecimal) : JBigDecimal; cdecl; overload;          // (Landroid/icu/math/BigDecimal;)Landroid/icu/math/BigDecimal; A: $1
    function divide(rhs : JBigDecimal; &set : JMathContext) : JBigDecimal; cdecl; overload;// (Landroid/icu/math/BigDecimal;Landroid/icu/math/MathContext;)Landroid/icu/math/BigDecimal; A: $1
    function divide(rhs : JBigDecimal; round : Integer) : JBigDecimal; cdecl; overload;// (Landroid/icu/math/BigDecimal;I)Landroid/icu/math/BigDecimal; A: $1
    function divide(rhs : JBigDecimal; scale : Integer; round : Integer) : JBigDecimal; cdecl; overload;// (Landroid/icu/math/BigDecimal;II)Landroid/icu/math/BigDecimal; A: $1
    function divideInteger(rhs : JBigDecimal) : JBigDecimal; cdecl; overload;   // (Landroid/icu/math/BigDecimal;)Landroid/icu/math/BigDecimal; A: $1
    function divideInteger(rhs : JBigDecimal; &set : JMathContext) : JBigDecimal; cdecl; overload;// (Landroid/icu/math/BigDecimal;Landroid/icu/math/MathContext;)Landroid/icu/math/BigDecimal; A: $1
    function doubleValue : Double; cdecl;                                       // ()D A: $1
    function equals(obj : JObject) : boolean; cdecl;                            // (Ljava/lang/Object;)Z A: $1
    function floatValue : Single; cdecl;                                        // ()F A: $1
    function format(before : Integer; after : Integer) : JString; cdecl; overload;// (II)Ljava/lang/String; A: $1
    function format(before : Integer; after : Integer; explaces : Integer; exdigits : Integer; exformint : Integer; exround : Integer) : JString; cdecl; overload;// (IIIIII)Ljava/lang/String; A: $1
    function hashCode : Integer; cdecl;                                         // ()I A: $1
    function intValue : Integer; cdecl;                                         // ()I A: $1
    function intValueExact : Integer; cdecl;                                    // ()I A: $1
    function longValue : Int64; cdecl;                                          // ()J A: $1
    function longValueExact : Int64; cdecl;                                     // ()J A: $1
    function max(rhs : JBigDecimal) : JBigDecimal; cdecl; overload;             // (Landroid/icu/math/BigDecimal;)Landroid/icu/math/BigDecimal; A: $1
    function max(rhs : JBigDecimal; &set : JMathContext) : JBigDecimal; cdecl; overload;// (Landroid/icu/math/BigDecimal;Landroid/icu/math/MathContext;)Landroid/icu/math/BigDecimal; A: $1
    function min(rhs : JBigDecimal) : JBigDecimal; cdecl; overload;             // (Landroid/icu/math/BigDecimal;)Landroid/icu/math/BigDecimal; A: $1
    function min(rhs : JBigDecimal; &set : JMathContext) : JBigDecimal; cdecl; overload;// (Landroid/icu/math/BigDecimal;Landroid/icu/math/MathContext;)Landroid/icu/math/BigDecimal; A: $1
    function movePointLeft(n : Integer) : JBigDecimal; cdecl;                   // (I)Landroid/icu/math/BigDecimal; A: $1
    function movePointRight(n : Integer) : JBigDecimal; cdecl;                  // (I)Landroid/icu/math/BigDecimal; A: $1
    function multiply(rhs : JBigDecimal) : JBigDecimal; cdecl; overload;        // (Landroid/icu/math/BigDecimal;)Landroid/icu/math/BigDecimal; A: $1
    function multiply(rhs : JBigDecimal; &set : JMathContext) : JBigDecimal; cdecl; overload;// (Landroid/icu/math/BigDecimal;Landroid/icu/math/MathContext;)Landroid/icu/math/BigDecimal; A: $1
    function negate : JBigDecimal; cdecl; overload;                             // ()Landroid/icu/math/BigDecimal; A: $1
    function negate(&set : JMathContext) : JBigDecimal; cdecl; overload;        // (Landroid/icu/math/MathContext;)Landroid/icu/math/BigDecimal; A: $1
    function plus : JBigDecimal; cdecl; overload;                               // ()Landroid/icu/math/BigDecimal; A: $1
    function plus(&set : JMathContext) : JBigDecimal; cdecl; overload;          // (Landroid/icu/math/MathContext;)Landroid/icu/math/BigDecimal; A: $1
    function pow(rhs : JBigDecimal) : JBigDecimal; cdecl; overload;             // (Landroid/icu/math/BigDecimal;)Landroid/icu/math/BigDecimal; A: $1
    function pow(rhs : JBigDecimal; &set : JMathContext) : JBigDecimal; cdecl; overload;// (Landroid/icu/math/BigDecimal;Landroid/icu/math/MathContext;)Landroid/icu/math/BigDecimal; A: $1
    function remainder(rhs : JBigDecimal) : JBigDecimal; cdecl; overload;       // (Landroid/icu/math/BigDecimal;)Landroid/icu/math/BigDecimal; A: $1
    function remainder(rhs : JBigDecimal; &set : JMathContext) : JBigDecimal; cdecl; overload;// (Landroid/icu/math/BigDecimal;Landroid/icu/math/MathContext;)Landroid/icu/math/BigDecimal; A: $1
    function scale : Integer; cdecl;                                            // ()I A: $1
    function setScale(scale : Integer) : JBigDecimal; cdecl; overload;          // (I)Landroid/icu/math/BigDecimal; A: $1
    function setScale(scale : Integer; round : Integer) : JBigDecimal; cdecl; overload;// (II)Landroid/icu/math/BigDecimal; A: $1
    function shortValueExact : SmallInt; cdecl;                                 // ()S A: $1
    function signum : Integer; cdecl;                                           // ()I A: $1
    function subtract(rhs : JBigDecimal) : JBigDecimal; cdecl; overload;        // (Landroid/icu/math/BigDecimal;)Landroid/icu/math/BigDecimal; A: $1
    function subtract(rhs : JBigDecimal; &set : JMathContext) : JBigDecimal; cdecl; overload;// (Landroid/icu/math/BigDecimal;Landroid/icu/math/MathContext;)Landroid/icu/math/BigDecimal; A: $1
    function toBigDecimal : JBigDecimal; cdecl;                                 // ()Ljava/math/BigDecimal; A: $1
    function toBigInteger : JBigInteger; cdecl;                                 // ()Ljava/math/BigInteger; A: $1
    function toBigIntegerExact : JBigInteger; cdecl;                            // ()Ljava/math/BigInteger; A: $1
    function toCharArray : TJavaArray<Char>; cdecl;                             // ()[C A: $1
    function toString : JString; cdecl;                                         // ()Ljava/lang/String; A: $1
    function unscaledValue : JBigInteger; cdecl;                                // ()Ljava/math/BigInteger; A: $1
  end;

  TJBigDecimal = class(TJavaGenericImport<JBigDecimalClass, JBigDecimal>)
  end;

const
  TJBigDecimalROUND_CEILING = 2;
  TJBigDecimalROUND_DOWN = 1;
  TJBigDecimalROUND_FLOOR = 3;
  TJBigDecimalROUND_HALF_DOWN = 5;
  TJBigDecimalROUND_HALF_EVEN = 6;
  TJBigDecimalROUND_HALF_UP = 4;
  TJBigDecimalROUND_UNNECESSARY = 7;
  TJBigDecimalROUND_UP = 0;

implementation

end.
