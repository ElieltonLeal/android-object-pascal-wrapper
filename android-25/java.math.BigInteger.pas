//
// Generated by JavaToPas v1.5 20171018 - 170914
////////////////////////////////////////////////////////////////////////////////
unit java.math.BigInteger;

interface

uses
  AndroidAPI.JNIBridge,
  Androidapi.JNI.JavaTypes;

type
  JBigInteger = interface;

  JBigIntegerClass = interface(JObjectClass)
    ['{391A2696-380F-4419-982D-4440CF9BF11D}']
    function &and(value : JBigInteger) : JBigInteger; cdecl;                    // (Ljava/math/BigInteger;)Ljava/math/BigInteger; A: $1
    function &mod(m : JBigInteger) : JBigInteger; cdecl;                        // (Ljava/math/BigInteger;)Ljava/math/BigInteger; A: $1
    function &not : JBigInteger; cdecl;                                         // ()Ljava/math/BigInteger; A: $1
    function &or(value : JBigInteger) : JBigInteger; cdecl;                     // (Ljava/math/BigInteger;)Ljava/math/BigInteger; A: $1
    function &xor(value : JBigInteger) : JBigInteger; cdecl;                    // (Ljava/math/BigInteger;)Ljava/math/BigInteger; A: $1
    function _GetONE : JBigInteger; cdecl;                                      //  A: $19
    function _GetTEN : JBigInteger; cdecl;                                      //  A: $19
    function _GetZERO : JBigInteger; cdecl;                                     //  A: $19
    function abs : JBigInteger; cdecl;                                          // ()Ljava/math/BigInteger; A: $1
    function add(value : JBigInteger) : JBigInteger; cdecl;                     // (Ljava/math/BigInteger;)Ljava/math/BigInteger; A: $1
    function andNot(value : JBigInteger) : JBigInteger; cdecl;                  // (Ljava/math/BigInteger;)Ljava/math/BigInteger; A: $1
    function bitCount : Integer; cdecl;                                         // ()I A: $1
    function bitLength : Integer; cdecl;                                        // ()I A: $1
    function clearBit(n : Integer) : JBigInteger; cdecl;                        // (I)Ljava/math/BigInteger; A: $1
    function compareTo(value : JBigInteger) : Integer; cdecl;                   // (Ljava/math/BigInteger;)I A: $1
    function divide(divisor : JBigInteger) : JBigInteger; cdecl;                // (Ljava/math/BigInteger;)Ljava/math/BigInteger; A: $1
    function divideAndRemainder(divisor : JBigInteger) : TJavaArray<JBigInteger>; cdecl;// (Ljava/math/BigInteger;)[Ljava/math/BigInteger; A: $1
    function doubleValue : Double; cdecl;                                       // ()D A: $1
    function equals(x : JObject) : boolean; cdecl;                              // (Ljava/lang/Object;)Z A: $1
    function flipBit(n : Integer) : JBigInteger; cdecl;                         // (I)Ljava/math/BigInteger; A: $1
    function floatValue : Single; cdecl;                                        // ()F A: $1
    function gcd(value : JBigInteger) : JBigInteger; cdecl;                     // (Ljava/math/BigInteger;)Ljava/math/BigInteger; A: $1
    function getLowestSetBit : Integer; cdecl;                                  // ()I A: $1
    function hashCode : Integer; cdecl;                                         // ()I A: $1
    function init(bitLength : Integer; certainty : Integer; random : JRandom) : JBigInteger; cdecl; overload;// (IILjava/util/Random;)V A: $1
    function init(numBits : Integer; random : JRandom) : JBigInteger; cdecl; overload;// (ILjava/util/Random;)V A: $1
    function init(signum : Integer; magnitude : TJavaArray<Byte>) : JBigInteger; cdecl; overload;// (I[B)V A: $1
    function init(value : JString) : JBigInteger; cdecl; overload;              // (Ljava/lang/String;)V A: $1
    function init(value : JString; radix : Integer) : JBigInteger; cdecl; overload;// (Ljava/lang/String;I)V A: $1
    function init(value : TJavaArray<Byte>) : JBigInteger; cdecl; overload;     // ([B)V A: $1
    function intValue : Integer; cdecl;                                         // ()I A: $1
    function isProbablePrime(certainty : Integer) : boolean; cdecl;             // (I)Z A: $1
    function longValue : Int64; cdecl;                                          // ()J A: $1
    function max(value : JBigInteger) : JBigInteger; cdecl;                     // (Ljava/math/BigInteger;)Ljava/math/BigInteger; A: $1
    function min(value : JBigInteger) : JBigInteger; cdecl;                     // (Ljava/math/BigInteger;)Ljava/math/BigInteger; A: $1
    function modInverse(m : JBigInteger) : JBigInteger; cdecl;                  // (Ljava/math/BigInteger;)Ljava/math/BigInteger; A: $1
    function modPow(exponent : JBigInteger; modulus : JBigInteger) : JBigInteger; cdecl;// (Ljava/math/BigInteger;Ljava/math/BigInteger;)Ljava/math/BigInteger; A: $1
    function multiply(value : JBigInteger) : JBigInteger; cdecl;                // (Ljava/math/BigInteger;)Ljava/math/BigInteger; A: $1
    function negate : JBigInteger; cdecl;                                       // ()Ljava/math/BigInteger; A: $1
    function nextProbablePrime : JBigInteger; cdecl;                            // ()Ljava/math/BigInteger; A: $1
    function pow(exp : Integer) : JBigInteger; cdecl;                           // (I)Ljava/math/BigInteger; A: $1
    function probablePrime(bitLength : Integer; random : JRandom) : JBigInteger; cdecl;// (ILjava/util/Random;)Ljava/math/BigInteger; A: $9
    function remainder(divisor : JBigInteger) : JBigInteger; cdecl;             // (Ljava/math/BigInteger;)Ljava/math/BigInteger; A: $1
    function setBit(n : Integer) : JBigInteger; cdecl;                          // (I)Ljava/math/BigInteger; A: $1
    function shiftLeft(n : Integer) : JBigInteger; cdecl;                       // (I)Ljava/math/BigInteger; A: $1
    function shiftRight(n : Integer) : JBigInteger; cdecl;                      // (I)Ljava/math/BigInteger; A: $1
    function signum : Integer; cdecl;                                           // ()I A: $1
    function subtract(value : JBigInteger) : JBigInteger; cdecl;                // (Ljava/math/BigInteger;)Ljava/math/BigInteger; A: $1
    function testBit(n : Integer) : boolean; cdecl;                             // (I)Z A: $1
    function toByteArray : TJavaArray<Byte>; cdecl;                             // ()[B A: $1
    function toString : JString; cdecl; overload;                               // ()Ljava/lang/String; A: $1
    function toString(radix : Integer) : JString; cdecl; overload;              // (I)Ljava/lang/String; A: $1
    function valueOf(value : Int64) : JBigInteger; cdecl;                       // (J)Ljava/math/BigInteger; A: $9
    property ONE : JBigInteger read _GetONE;                                    // Ljava/math/BigInteger; A: $19
    property TEN : JBigInteger read _GetTEN;                                    // Ljava/math/BigInteger; A: $19
    property ZERO : JBigInteger read _GetZERO;                                  // Ljava/math/BigInteger; A: $19
  end;

  [JavaSignature('java/math/BigInteger')]
  JBigInteger = interface(JObject)
    ['{8527FC28-8B46-4DCA-93FC-770DD997E197}']
    function &and(value : JBigInteger) : JBigInteger; cdecl;                    // (Ljava/math/BigInteger;)Ljava/math/BigInteger; A: $1
    function &mod(m : JBigInteger) : JBigInteger; cdecl;                        // (Ljava/math/BigInteger;)Ljava/math/BigInteger; A: $1
    function &not : JBigInteger; cdecl;                                         // ()Ljava/math/BigInteger; A: $1
    function &or(value : JBigInteger) : JBigInteger; cdecl;                     // (Ljava/math/BigInteger;)Ljava/math/BigInteger; A: $1
    function &xor(value : JBigInteger) : JBigInteger; cdecl;                    // (Ljava/math/BigInteger;)Ljava/math/BigInteger; A: $1
    function abs : JBigInteger; cdecl;                                          // ()Ljava/math/BigInteger; A: $1
    function add(value : JBigInteger) : JBigInteger; cdecl;                     // (Ljava/math/BigInteger;)Ljava/math/BigInteger; A: $1
    function andNot(value : JBigInteger) : JBigInteger; cdecl;                  // (Ljava/math/BigInteger;)Ljava/math/BigInteger; A: $1
    function bitCount : Integer; cdecl;                                         // ()I A: $1
    function bitLength : Integer; cdecl;                                        // ()I A: $1
    function clearBit(n : Integer) : JBigInteger; cdecl;                        // (I)Ljava/math/BigInteger; A: $1
    function compareTo(value : JBigInteger) : Integer; cdecl;                   // (Ljava/math/BigInteger;)I A: $1
    function divide(divisor : JBigInteger) : JBigInteger; cdecl;                // (Ljava/math/BigInteger;)Ljava/math/BigInteger; A: $1
    function divideAndRemainder(divisor : JBigInteger) : TJavaArray<JBigInteger>; cdecl;// (Ljava/math/BigInteger;)[Ljava/math/BigInteger; A: $1
    function doubleValue : Double; cdecl;                                       // ()D A: $1
    function equals(x : JObject) : boolean; cdecl;                              // (Ljava/lang/Object;)Z A: $1
    function flipBit(n : Integer) : JBigInteger; cdecl;                         // (I)Ljava/math/BigInteger; A: $1
    function floatValue : Single; cdecl;                                        // ()F A: $1
    function gcd(value : JBigInteger) : JBigInteger; cdecl;                     // (Ljava/math/BigInteger;)Ljava/math/BigInteger; A: $1
    function getLowestSetBit : Integer; cdecl;                                  // ()I A: $1
    function hashCode : Integer; cdecl;                                         // ()I A: $1
    function intValue : Integer; cdecl;                                         // ()I A: $1
    function isProbablePrime(certainty : Integer) : boolean; cdecl;             // (I)Z A: $1
    function longValue : Int64; cdecl;                                          // ()J A: $1
    function max(value : JBigInteger) : JBigInteger; cdecl;                     // (Ljava/math/BigInteger;)Ljava/math/BigInteger; A: $1
    function min(value : JBigInteger) : JBigInteger; cdecl;                     // (Ljava/math/BigInteger;)Ljava/math/BigInteger; A: $1
    function modInverse(m : JBigInteger) : JBigInteger; cdecl;                  // (Ljava/math/BigInteger;)Ljava/math/BigInteger; A: $1
    function modPow(exponent : JBigInteger; modulus : JBigInteger) : JBigInteger; cdecl;// (Ljava/math/BigInteger;Ljava/math/BigInteger;)Ljava/math/BigInteger; A: $1
    function multiply(value : JBigInteger) : JBigInteger; cdecl;                // (Ljava/math/BigInteger;)Ljava/math/BigInteger; A: $1
    function negate : JBigInteger; cdecl;                                       // ()Ljava/math/BigInteger; A: $1
    function nextProbablePrime : JBigInteger; cdecl;                            // ()Ljava/math/BigInteger; A: $1
    function pow(exp : Integer) : JBigInteger; cdecl;                           // (I)Ljava/math/BigInteger; A: $1
    function remainder(divisor : JBigInteger) : JBigInteger; cdecl;             // (Ljava/math/BigInteger;)Ljava/math/BigInteger; A: $1
    function setBit(n : Integer) : JBigInteger; cdecl;                          // (I)Ljava/math/BigInteger; A: $1
    function shiftLeft(n : Integer) : JBigInteger; cdecl;                       // (I)Ljava/math/BigInteger; A: $1
    function shiftRight(n : Integer) : JBigInteger; cdecl;                      // (I)Ljava/math/BigInteger; A: $1
    function signum : Integer; cdecl;                                           // ()I A: $1
    function subtract(value : JBigInteger) : JBigInteger; cdecl;                // (Ljava/math/BigInteger;)Ljava/math/BigInteger; A: $1
    function testBit(n : Integer) : boolean; cdecl;                             // (I)Z A: $1
    function toByteArray : TJavaArray<Byte>; cdecl;                             // ()[B A: $1
    function toString : JString; cdecl; overload;                               // ()Ljava/lang/String; A: $1
    function toString(radix : Integer) : JString; cdecl; overload;              // (I)Ljava/lang/String; A: $1
  end;

  TJBigInteger = class(TJavaGenericImport<JBigIntegerClass, JBigInteger>)
  end;

implementation

end.
