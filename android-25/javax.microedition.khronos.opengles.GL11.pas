//
// Generated by JavaToPas v1.5 20171018 - 171044
////////////////////////////////////////////////////////////////////////////////
unit javax.microedition.khronos.opengles.GL11;

interface

uses
  AndroidAPI.JNIBridge,
  Androidapi.JNI.JavaTypes,
  java.nio.Buffer,
  java.nio.FloatBuffer,
  java.nio.IntBuffer;

type
  JGL11 = interface;

  JGL11Class = interface(JObjectClass)
    ['{90B7CE87-F0D8-4E80-BD1C-45529F133F0E}']
    function _GetGL_ACTIVE_TEXTURE : Integer; cdecl;                            //  A: $19
    function _GetGL_ADD_SIGNED : Integer; cdecl;                                //  A: $19
    function _GetGL_ALPHA_SCALE : Integer; cdecl;                               //  A: $19
    function _GetGL_ALPHA_TEST_FUNC : Integer; cdecl;                           //  A: $19
    function _GetGL_ALPHA_TEST_REF : Integer; cdecl;                            //  A: $19
    function _GetGL_ARRAY_BUFFER : Integer; cdecl;                              //  A: $19
    function _GetGL_ARRAY_BUFFER_BINDING : Integer; cdecl;                      //  A: $19
    function _GetGL_BLEND_DST : Integer; cdecl;                                 //  A: $19
    function _GetGL_BLEND_SRC : Integer; cdecl;                                 //  A: $19
    function _GetGL_BUFFER_ACCESS : Integer; cdecl;                             //  A: $19
    function _GetGL_BUFFER_SIZE : Integer; cdecl;                               //  A: $19
    function _GetGL_BUFFER_USAGE : Integer; cdecl;                              //  A: $19
    function _GetGL_CLIENT_ACTIVE_TEXTURE : Integer; cdecl;                     //  A: $19
    function _GetGL_CLIP_PLANE0 : Integer; cdecl;                               //  A: $19
    function _GetGL_CLIP_PLANE1 : Integer; cdecl;                               //  A: $19
    function _GetGL_CLIP_PLANE2 : Integer; cdecl;                               //  A: $19
    function _GetGL_CLIP_PLANE3 : Integer; cdecl;                               //  A: $19
    function _GetGL_CLIP_PLANE4 : Integer; cdecl;                               //  A: $19
    function _GetGL_CLIP_PLANE5 : Integer; cdecl;                               //  A: $19
    function _GetGL_COLOR_ARRAY_BUFFER_BINDING : Integer; cdecl;                //  A: $19
    function _GetGL_COLOR_ARRAY_POINTER : Integer; cdecl;                       //  A: $19
    function _GetGL_COLOR_ARRAY_SIZE : Integer; cdecl;                          //  A: $19
    function _GetGL_COLOR_ARRAY_STRIDE : Integer; cdecl;                        //  A: $19
    function _GetGL_COLOR_ARRAY_TYPE : Integer; cdecl;                          //  A: $19
    function _GetGL_COLOR_CLEAR_VALUE : Integer; cdecl;                         //  A: $19
    function _GetGL_COLOR_WRITEMASK : Integer; cdecl;                           //  A: $19
    function _GetGL_COMBINE : Integer; cdecl;                                   //  A: $19
    function _GetGL_COMBINE_ALPHA : Integer; cdecl;                             //  A: $19
    function _GetGL_COMBINE_RGB : Integer; cdecl;                               //  A: $19
    function _GetGL_CONSTANT : Integer; cdecl;                                  //  A: $19
    function _GetGL_COORD_REPLACE_OES : Integer; cdecl;                         //  A: $19
    function _GetGL_CULL_FACE_MODE : Integer; cdecl;                            //  A: $19
    function _GetGL_CURRENT_COLOR : Integer; cdecl;                             //  A: $19
    function _GetGL_CURRENT_NORMAL : Integer; cdecl;                            //  A: $19
    function _GetGL_CURRENT_TEXTURE_COORDS : Integer; cdecl;                    //  A: $19
    function _GetGL_DEPTH_CLEAR_VALUE : Integer; cdecl;                         //  A: $19
    function _GetGL_DEPTH_FUNC : Integer; cdecl;                                //  A: $19
    function _GetGL_DEPTH_RANGE : Integer; cdecl;                               //  A: $19
    function _GetGL_DEPTH_WRITEMASK : Integer; cdecl;                           //  A: $19
    function _GetGL_DOT3_RGB : Integer; cdecl;                                  //  A: $19
    function _GetGL_DOT3_RGBA : Integer; cdecl;                                 //  A: $19
    function _GetGL_DYNAMIC_DRAW : Integer; cdecl;                              //  A: $19
    function _GetGL_ELEMENT_ARRAY_BUFFER : Integer; cdecl;                      //  A: $19
    function _GetGL_ELEMENT_ARRAY_BUFFER_BINDING : Integer; cdecl;              //  A: $19
    function _GetGL_FRONT_FACE : Integer; cdecl;                                //  A: $19
    function _GetGL_GENERATE_MIPMAP : Integer; cdecl;                           //  A: $19
    function _GetGL_GENERATE_MIPMAP_HINT : Integer; cdecl;                      //  A: $19
    function _GetGL_INTERPOLATE : Integer; cdecl;                               //  A: $19
    function _GetGL_LINE_WIDTH : Integer; cdecl;                                //  A: $19
    function _GetGL_LOGIC_OP_MODE : Integer; cdecl;                             //  A: $19
    function _GetGL_MATRIX_MODE : Integer; cdecl;                               //  A: $19
    function _GetGL_MAX_CLIP_PLANES : Integer; cdecl;                           //  A: $19
    function _GetGL_MODELVIEW_MATRIX : Integer; cdecl;                          //  A: $19
    function _GetGL_MODELVIEW_MATRIX_FLOAT_AS_INT_BITS_OES : Integer; cdecl;    //  A: $19
    function _GetGL_MODELVIEW_STACK_DEPTH : Integer; cdecl;                     //  A: $19
    function _GetGL_NORMAL_ARRAY_BUFFER_BINDING : Integer; cdecl;               //  A: $19
    function _GetGL_NORMAL_ARRAY_POINTER : Integer; cdecl;                      //  A: $19
    function _GetGL_NORMAL_ARRAY_STRIDE : Integer; cdecl;                       //  A: $19
    function _GetGL_NORMAL_ARRAY_TYPE : Integer; cdecl;                         //  A: $19
    function _GetGL_OPERAND0_ALPHA : Integer; cdecl;                            //  A: $19
    function _GetGL_OPERAND0_RGB : Integer; cdecl;                              //  A: $19
    function _GetGL_OPERAND1_ALPHA : Integer; cdecl;                            //  A: $19
    function _GetGL_OPERAND1_RGB : Integer; cdecl;                              //  A: $19
    function _GetGL_OPERAND2_ALPHA : Integer; cdecl;                            //  A: $19
    function _GetGL_OPERAND2_RGB : Integer; cdecl;                              //  A: $19
    function _GetGL_POINT_DISTANCE_ATTENUATION : Integer; cdecl;                //  A: $19
    function _GetGL_POINT_FADE_THRESHOLD_SIZE : Integer; cdecl;                 //  A: $19
    function _GetGL_POINT_SIZE : Integer; cdecl;                                //  A: $19
    function _GetGL_POINT_SIZE_ARRAY_BUFFER_BINDING_OES : Integer; cdecl;       //  A: $19
    function _GetGL_POINT_SIZE_ARRAY_OES : Integer; cdecl;                      //  A: $19
    function _GetGL_POINT_SIZE_ARRAY_POINTER_OES : Integer; cdecl;              //  A: $19
    function _GetGL_POINT_SIZE_ARRAY_STRIDE_OES : Integer; cdecl;               //  A: $19
    function _GetGL_POINT_SIZE_ARRAY_TYPE_OES : Integer; cdecl;                 //  A: $19
    function _GetGL_POINT_SIZE_MAX : Integer; cdecl;                            //  A: $19
    function _GetGL_POINT_SIZE_MIN : Integer; cdecl;                            //  A: $19
    function _GetGL_POINT_SPRITE_OES : Integer; cdecl;                          //  A: $19
    function _GetGL_POLYGON_OFFSET_FACTOR : Integer; cdecl;                     //  A: $19
    function _GetGL_POLYGON_OFFSET_UNITS : Integer; cdecl;                      //  A: $19
    function _GetGL_PREVIOUS : Integer; cdecl;                                  //  A: $19
    function _GetGL_PRIMARY_COLOR : Integer; cdecl;                             //  A: $19
    function _GetGL_PROJECTION_MATRIX : Integer; cdecl;                         //  A: $19
    function _GetGL_PROJECTION_MATRIX_FLOAT_AS_INT_BITS_OES : Integer; cdecl;   //  A: $19
    function _GetGL_PROJECTION_STACK_DEPTH : Integer; cdecl;                    //  A: $19
    function _GetGL_RGB_SCALE : Integer; cdecl;                                 //  A: $19
    function _GetGL_SAMPLES : Integer; cdecl;                                   //  A: $19
    function _GetGL_SAMPLE_BUFFERS : Integer; cdecl;                            //  A: $19
    function _GetGL_SAMPLE_COVERAGE_INVERT : Integer; cdecl;                    //  A: $19
    function _GetGL_SAMPLE_COVERAGE_VALUE : Integer; cdecl;                     //  A: $19
    function _GetGL_SCISSOR_BOX : Integer; cdecl;                               //  A: $19
    function _GetGL_SHADE_MODEL : Integer; cdecl;                               //  A: $19
    function _GetGL_SRC0_ALPHA : Integer; cdecl;                                //  A: $19
    function _GetGL_SRC0_RGB : Integer; cdecl;                                  //  A: $19
    function _GetGL_SRC1_ALPHA : Integer; cdecl;                                //  A: $19
    function _GetGL_SRC1_RGB : Integer; cdecl;                                  //  A: $19
    function _GetGL_SRC2_ALPHA : Integer; cdecl;                                //  A: $19
    function _GetGL_SRC2_RGB : Integer; cdecl;                                  //  A: $19
    function _GetGL_STATIC_DRAW : Integer; cdecl;                               //  A: $19
    function _GetGL_STENCIL_CLEAR_VALUE : Integer; cdecl;                       //  A: $19
    function _GetGL_STENCIL_FAIL : Integer; cdecl;                              //  A: $19
    function _GetGL_STENCIL_FUNC : Integer; cdecl;                              //  A: $19
    function _GetGL_STENCIL_PASS_DEPTH_FAIL : Integer; cdecl;                   //  A: $19
    function _GetGL_STENCIL_PASS_DEPTH_PASS : Integer; cdecl;                   //  A: $19
    function _GetGL_STENCIL_REF : Integer; cdecl;                               //  A: $19
    function _GetGL_STENCIL_VALUE_MASK : Integer; cdecl;                        //  A: $19
    function _GetGL_STENCIL_WRITEMASK : Integer; cdecl;                         //  A: $19
    function _GetGL_SUBTRACT : Integer; cdecl;                                  //  A: $19
    function _GetGL_TEXTURE_BINDING_2D : Integer; cdecl;                        //  A: $19
    function _GetGL_TEXTURE_COORD_ARRAY_BUFFER_BINDING : Integer; cdecl;        //  A: $19
    function _GetGL_TEXTURE_COORD_ARRAY_POINTER : Integer; cdecl;               //  A: $19
    function _GetGL_TEXTURE_COORD_ARRAY_SIZE : Integer; cdecl;                  //  A: $19
    function _GetGL_TEXTURE_COORD_ARRAY_STRIDE : Integer; cdecl;                //  A: $19
    function _GetGL_TEXTURE_COORD_ARRAY_TYPE : Integer; cdecl;                  //  A: $19
    function _GetGL_TEXTURE_MATRIX : Integer; cdecl;                            //  A: $19
    function _GetGL_TEXTURE_MATRIX_FLOAT_AS_INT_BITS_OES : Integer; cdecl;      //  A: $19
    function _GetGL_TEXTURE_STACK_DEPTH : Integer; cdecl;                       //  A: $19
    function _GetGL_VERTEX_ARRAY_BUFFER_BINDING : Integer; cdecl;               //  A: $19
    function _GetGL_VERTEX_ARRAY_POINTER : Integer; cdecl;                      //  A: $19
    function _GetGL_VERTEX_ARRAY_SIZE : Integer; cdecl;                         //  A: $19
    function _GetGL_VERTEX_ARRAY_STRIDE : Integer; cdecl;                       //  A: $19
    function _GetGL_VERTEX_ARRAY_TYPE : Integer; cdecl;                         //  A: $19
    function _GetGL_VIEWPORT : Integer; cdecl;                                  //  A: $19
    function _GetGL_WRITE_ONLY : Integer; cdecl;                                //  A: $19
    function glIsBuffer(Integerparam0 : Integer) : boolean; cdecl;              // (I)Z A: $401
    function glIsEnabled(Integerparam0 : Integer) : boolean; cdecl;             // (I)Z A: $401
    function glIsTexture(Integerparam0 : Integer) : boolean; cdecl;             // (I)Z A: $401
    procedure glBindBuffer(Integerparam0 : Integer; Integerparam1 : Integer) ; cdecl;// (II)V A: $401
    procedure glBufferData(Integerparam0 : Integer; Integerparam1 : Integer; JBufferparam2 : JBuffer; Integerparam3 : Integer) ; cdecl;// (IILjava/nio/Buffer;I)V A: $401
    procedure glBufferSubData(Integerparam0 : Integer; Integerparam1 : Integer; Integerparam2 : Integer; JBufferparam3 : JBuffer) ; cdecl;// (IIILjava/nio/Buffer;)V A: $401
    procedure glClipPlanef(Integerparam0 : Integer; JFloatBufferparam1 : JFloatBuffer) ; cdecl; overload;// (ILjava/nio/FloatBuffer;)V A: $401
    procedure glClipPlanef(Integerparam0 : Integer; TJavaArraySingleparam1 : TJavaArray<Single>; Integerparam2 : Integer) ; cdecl; overload;// (I[FI)V A: $401
    procedure glClipPlanex(Integerparam0 : Integer; JIntBufferparam1 : JIntBuffer) ; cdecl; overload;// (ILjava/nio/IntBuffer;)V A: $401
    procedure glClipPlanex(Integerparam0 : Integer; TJavaArrayIntegerparam1 : TJavaArray<Integer>; Integerparam2 : Integer) ; cdecl; overload;// (I[II)V A: $401
    procedure glColor4ub(Byteparam0 : Byte; Byteparam1 : Byte; Byteparam2 : Byte; Byteparam3 : Byte) ; cdecl;// (BBBB)V A: $401
    procedure glColorPointer(Integerparam0 : Integer; Integerparam1 : Integer; Integerparam2 : Integer; Integerparam3 : Integer) ; cdecl;// (IIII)V A: $401
    procedure glDeleteBuffers(Integerparam0 : Integer; JIntBufferparam1 : JIntBuffer) ; cdecl; overload;// (ILjava/nio/IntBuffer;)V A: $401
    procedure glDeleteBuffers(Integerparam0 : Integer; TJavaArrayIntegerparam1 : TJavaArray<Integer>; Integerparam2 : Integer) ; cdecl; overload;// (I[II)V A: $401
    procedure glDrawElements(Integerparam0 : Integer; Integerparam1 : Integer; Integerparam2 : Integer; Integerparam3 : Integer) ; cdecl;// (IIII)V A: $401
    procedure glGenBuffers(Integerparam0 : Integer; JIntBufferparam1 : JIntBuffer) ; cdecl; overload;// (ILjava/nio/IntBuffer;)V A: $401
    procedure glGenBuffers(Integerparam0 : Integer; TJavaArrayIntegerparam1 : TJavaArray<Integer>; Integerparam2 : Integer) ; cdecl; overload;// (I[II)V A: $401
    procedure glGetBooleanv(Integerparam0 : Integer; JIntBufferparam1 : JIntBuffer) ; cdecl; overload;// (ILjava/nio/IntBuffer;)V A: $401
    procedure glGetBooleanv(Integerparam0 : Integer; TJavaArraybooleanparam1 : TJavaArray<boolean>; Integerparam2 : Integer) ; cdecl; overload;// (I[ZI)V A: $401
    procedure glGetBufferParameteriv(Integerparam0 : Integer; Integerparam1 : Integer; JIntBufferparam2 : JIntBuffer) ; cdecl; overload;// (IILjava/nio/IntBuffer;)V A: $401
    procedure glGetBufferParameteriv(Integerparam0 : Integer; Integerparam1 : Integer; TJavaArrayIntegerparam2 : TJavaArray<Integer>; Integerparam3 : Integer) ; cdecl; overload;// (II[II)V A: $401
    procedure glGetClipPlanef(Integerparam0 : Integer; JFloatBufferparam1 : JFloatBuffer) ; cdecl; overload;// (ILjava/nio/FloatBuffer;)V A: $401
    procedure glGetClipPlanef(Integerparam0 : Integer; TJavaArraySingleparam1 : TJavaArray<Single>; Integerparam2 : Integer) ; cdecl; overload;// (I[FI)V A: $401
    procedure glGetClipPlanex(Integerparam0 : Integer; JIntBufferparam1 : JIntBuffer) ; cdecl; overload;// (ILjava/nio/IntBuffer;)V A: $401
    procedure glGetClipPlanex(Integerparam0 : Integer; TJavaArrayIntegerparam1 : TJavaArray<Integer>; Integerparam2 : Integer) ; cdecl; overload;// (I[II)V A: $401
    procedure glGetFixedv(Integerparam0 : Integer; JIntBufferparam1 : JIntBuffer) ; cdecl; overload;// (ILjava/nio/IntBuffer;)V A: $401
    procedure glGetFixedv(Integerparam0 : Integer; TJavaArrayIntegerparam1 : TJavaArray<Integer>; Integerparam2 : Integer) ; cdecl; overload;// (I[II)V A: $401
    procedure glGetFloatv(Integerparam0 : Integer; JFloatBufferparam1 : JFloatBuffer) ; cdecl; overload;// (ILjava/nio/FloatBuffer;)V A: $401
    procedure glGetFloatv(Integerparam0 : Integer; TJavaArraySingleparam1 : TJavaArray<Single>; Integerparam2 : Integer) ; cdecl; overload;// (I[FI)V A: $401
    procedure glGetLightfv(Integerparam0 : Integer; Integerparam1 : Integer; JFloatBufferparam2 : JFloatBuffer) ; cdecl; overload;// (IILjava/nio/FloatBuffer;)V A: $401
    procedure glGetLightfv(Integerparam0 : Integer; Integerparam1 : Integer; TJavaArraySingleparam2 : TJavaArray<Single>; Integerparam3 : Integer) ; cdecl; overload;// (II[FI)V A: $401
    procedure glGetLightxv(Integerparam0 : Integer; Integerparam1 : Integer; JIntBufferparam2 : JIntBuffer) ; cdecl; overload;// (IILjava/nio/IntBuffer;)V A: $401
    procedure glGetLightxv(Integerparam0 : Integer; Integerparam1 : Integer; TJavaArrayIntegerparam2 : TJavaArray<Integer>; Integerparam3 : Integer) ; cdecl; overload;// (II[II)V A: $401
    procedure glGetMaterialfv(Integerparam0 : Integer; Integerparam1 : Integer; JFloatBufferparam2 : JFloatBuffer) ; cdecl; overload;// (IILjava/nio/FloatBuffer;)V A: $401
    procedure glGetMaterialfv(Integerparam0 : Integer; Integerparam1 : Integer; TJavaArraySingleparam2 : TJavaArray<Single>; Integerparam3 : Integer) ; cdecl; overload;// (II[FI)V A: $401
    procedure glGetMaterialxv(Integerparam0 : Integer; Integerparam1 : Integer; JIntBufferparam2 : JIntBuffer) ; cdecl; overload;// (IILjava/nio/IntBuffer;)V A: $401
    procedure glGetMaterialxv(Integerparam0 : Integer; Integerparam1 : Integer; TJavaArrayIntegerparam2 : TJavaArray<Integer>; Integerparam3 : Integer) ; cdecl; overload;// (II[II)V A: $401
    procedure glGetPointerv(Integerparam0 : Integer; TJavaArrayJBufferparam1 : TJavaArray<JBuffer>) ; cdecl;// (I[Ljava/nio/Buffer;)V A: $401
    procedure glGetTexEnviv(Integerparam0 : Integer; Integerparam1 : Integer; JIntBufferparam2 : JIntBuffer) ; cdecl; overload;// (IILjava/nio/IntBuffer;)V A: $401
    procedure glGetTexEnviv(Integerparam0 : Integer; Integerparam1 : Integer; TJavaArrayIntegerparam2 : TJavaArray<Integer>; Integerparam3 : Integer) ; cdecl; overload;// (II[II)V A: $401
    procedure glGetTexEnvxv(Integerparam0 : Integer; Integerparam1 : Integer; JIntBufferparam2 : JIntBuffer) ; cdecl; overload;// (IILjava/nio/IntBuffer;)V A: $401
    procedure glGetTexEnvxv(Integerparam0 : Integer; Integerparam1 : Integer; TJavaArrayIntegerparam2 : TJavaArray<Integer>; Integerparam3 : Integer) ; cdecl; overload;// (II[II)V A: $401
    procedure glGetTexParameterfv(Integerparam0 : Integer; Integerparam1 : Integer; JFloatBufferparam2 : JFloatBuffer) ; cdecl; overload;// (IILjava/nio/FloatBuffer;)V A: $401
    procedure glGetTexParameterfv(Integerparam0 : Integer; Integerparam1 : Integer; TJavaArraySingleparam2 : TJavaArray<Single>; Integerparam3 : Integer) ; cdecl; overload;// (II[FI)V A: $401
    procedure glGetTexParameteriv(Integerparam0 : Integer; Integerparam1 : Integer; JIntBufferparam2 : JIntBuffer) ; cdecl; overload;// (IILjava/nio/IntBuffer;)V A: $401
    procedure glGetTexParameteriv(Integerparam0 : Integer; Integerparam1 : Integer; TJavaArrayIntegerparam2 : TJavaArray<Integer>; Integerparam3 : Integer) ; cdecl; overload;// (II[II)V A: $401
    procedure glGetTexParameterxv(Integerparam0 : Integer; Integerparam1 : Integer; JIntBufferparam2 : JIntBuffer) ; cdecl; overload;// (IILjava/nio/IntBuffer;)V A: $401
    procedure glGetTexParameterxv(Integerparam0 : Integer; Integerparam1 : Integer; TJavaArrayIntegerparam2 : TJavaArray<Integer>; Integerparam3 : Integer) ; cdecl; overload;// (II[II)V A: $401
    procedure glNormalPointer(Integerparam0 : Integer; Integerparam1 : Integer; Integerparam2 : Integer) ; cdecl;// (III)V A: $401
    procedure glPointParameterf(Integerparam0 : Integer; Singleparam1 : Single) ; cdecl;// (IF)V A: $401
    procedure glPointParameterfv(Integerparam0 : Integer; JFloatBufferparam1 : JFloatBuffer) ; cdecl; overload;// (ILjava/nio/FloatBuffer;)V A: $401
    procedure glPointParameterfv(Integerparam0 : Integer; TJavaArraySingleparam1 : TJavaArray<Single>; Integerparam2 : Integer) ; cdecl; overload;// (I[FI)V A: $401
    procedure glPointParameterx(Integerparam0 : Integer; Integerparam1 : Integer) ; cdecl;// (II)V A: $401
    procedure glPointParameterxv(Integerparam0 : Integer; JIntBufferparam1 : JIntBuffer) ; cdecl; overload;// (ILjava/nio/IntBuffer;)V A: $401
    procedure glPointParameterxv(Integerparam0 : Integer; TJavaArrayIntegerparam1 : TJavaArray<Integer>; Integerparam2 : Integer) ; cdecl; overload;// (I[II)V A: $401
    procedure glPointSizePointerOES(Integerparam0 : Integer; Integerparam1 : Integer; JBufferparam2 : JBuffer) ; cdecl;// (IILjava/nio/Buffer;)V A: $401
    procedure glTexCoordPointer(Integerparam0 : Integer; Integerparam1 : Integer; Integerparam2 : Integer; Integerparam3 : Integer) ; cdecl;// (IIII)V A: $401
    procedure glTexEnvi(Integerparam0 : Integer; Integerparam1 : Integer; Integerparam2 : Integer) ; cdecl;// (III)V A: $401
    procedure glTexEnviv(Integerparam0 : Integer; Integerparam1 : Integer; JIntBufferparam2 : JIntBuffer) ; cdecl; overload;// (IILjava/nio/IntBuffer;)V A: $401
    procedure glTexEnviv(Integerparam0 : Integer; Integerparam1 : Integer; TJavaArrayIntegerparam2 : TJavaArray<Integer>; Integerparam3 : Integer) ; cdecl; overload;// (II[II)V A: $401
    procedure glTexParameterfv(Integerparam0 : Integer; Integerparam1 : Integer; JFloatBufferparam2 : JFloatBuffer) ; cdecl; overload;// (IILjava/nio/FloatBuffer;)V A: $401
    procedure glTexParameterfv(Integerparam0 : Integer; Integerparam1 : Integer; TJavaArraySingleparam2 : TJavaArray<Single>; Integerparam3 : Integer) ; cdecl; overload;// (II[FI)V A: $401
    procedure glTexParameteri(Integerparam0 : Integer; Integerparam1 : Integer; Integerparam2 : Integer) ; cdecl;// (III)V A: $401
    procedure glTexParameteriv(Integerparam0 : Integer; Integerparam1 : Integer; JIntBufferparam2 : JIntBuffer) ; cdecl; overload;// (IILjava/nio/IntBuffer;)V A: $401
    procedure glTexParameteriv(Integerparam0 : Integer; Integerparam1 : Integer; TJavaArrayIntegerparam2 : TJavaArray<Integer>; Integerparam3 : Integer) ; cdecl; overload;// (II[II)V A: $401
    procedure glTexParameterxv(Integerparam0 : Integer; Integerparam1 : Integer; JIntBufferparam2 : JIntBuffer) ; cdecl; overload;// (IILjava/nio/IntBuffer;)V A: $401
    procedure glTexParameterxv(Integerparam0 : Integer; Integerparam1 : Integer; TJavaArrayIntegerparam2 : TJavaArray<Integer>; Integerparam3 : Integer) ; cdecl; overload;// (II[II)V A: $401
    procedure glVertexPointer(Integerparam0 : Integer; Integerparam1 : Integer; Integerparam2 : Integer; Integerparam3 : Integer) ; cdecl;// (IIII)V A: $401
    property GL_ACTIVE_TEXTURE : Integer read _GetGL_ACTIVE_TEXTURE;            // I A: $19
    property GL_ADD_SIGNED : Integer read _GetGL_ADD_SIGNED;                    // I A: $19
    property GL_ALPHA_SCALE : Integer read _GetGL_ALPHA_SCALE;                  // I A: $19
    property GL_ALPHA_TEST_FUNC : Integer read _GetGL_ALPHA_TEST_FUNC;          // I A: $19
    property GL_ALPHA_TEST_REF : Integer read _GetGL_ALPHA_TEST_REF;            // I A: $19
    property GL_ARRAY_BUFFER : Integer read _GetGL_ARRAY_BUFFER;                // I A: $19
    property GL_ARRAY_BUFFER_BINDING : Integer read _GetGL_ARRAY_BUFFER_BINDING;// I A: $19
    property GL_BLEND_DST : Integer read _GetGL_BLEND_DST;                      // I A: $19
    property GL_BLEND_SRC : Integer read _GetGL_BLEND_SRC;                      // I A: $19
    property GL_BUFFER_ACCESS : Integer read _GetGL_BUFFER_ACCESS;              // I A: $19
    property GL_BUFFER_SIZE : Integer read _GetGL_BUFFER_SIZE;                  // I A: $19
    property GL_BUFFER_USAGE : Integer read _GetGL_BUFFER_USAGE;                // I A: $19
    property GL_CLIENT_ACTIVE_TEXTURE : Integer read _GetGL_CLIENT_ACTIVE_TEXTURE;// I A: $19
    property GL_CLIP_PLANE0 : Integer read _GetGL_CLIP_PLANE0;                  // I A: $19
    property GL_CLIP_PLANE1 : Integer read _GetGL_CLIP_PLANE1;                  // I A: $19
    property GL_CLIP_PLANE2 : Integer read _GetGL_CLIP_PLANE2;                  // I A: $19
    property GL_CLIP_PLANE3 : Integer read _GetGL_CLIP_PLANE3;                  // I A: $19
    property GL_CLIP_PLANE4 : Integer read _GetGL_CLIP_PLANE4;                  // I A: $19
    property GL_CLIP_PLANE5 : Integer read _GetGL_CLIP_PLANE5;                  // I A: $19
    property GL_COLOR_ARRAY_BUFFER_BINDING : Integer read _GetGL_COLOR_ARRAY_BUFFER_BINDING;// I A: $19
    property GL_COLOR_ARRAY_POINTER : Integer read _GetGL_COLOR_ARRAY_POINTER;  // I A: $19
    property GL_COLOR_ARRAY_SIZE : Integer read _GetGL_COLOR_ARRAY_SIZE;        // I A: $19
    property GL_COLOR_ARRAY_STRIDE : Integer read _GetGL_COLOR_ARRAY_STRIDE;    // I A: $19
    property GL_COLOR_ARRAY_TYPE : Integer read _GetGL_COLOR_ARRAY_TYPE;        // I A: $19
    property GL_COLOR_CLEAR_VALUE : Integer read _GetGL_COLOR_CLEAR_VALUE;      // I A: $19
    property GL_COLOR_WRITEMASK : Integer read _GetGL_COLOR_WRITEMASK;          // I A: $19
    property GL_COMBINE : Integer read _GetGL_COMBINE;                          // I A: $19
    property GL_COMBINE_ALPHA : Integer read _GetGL_COMBINE_ALPHA;              // I A: $19
    property GL_COMBINE_RGB : Integer read _GetGL_COMBINE_RGB;                  // I A: $19
    property GL_CONSTANT : Integer read _GetGL_CONSTANT;                        // I A: $19
    property GL_COORD_REPLACE_OES : Integer read _GetGL_COORD_REPLACE_OES;      // I A: $19
    property GL_CULL_FACE_MODE : Integer read _GetGL_CULL_FACE_MODE;            // I A: $19
    property GL_CURRENT_COLOR : Integer read _GetGL_CURRENT_COLOR;              // I A: $19
    property GL_CURRENT_NORMAL : Integer read _GetGL_CURRENT_NORMAL;            // I A: $19
    property GL_CURRENT_TEXTURE_COORDS : Integer read _GetGL_CURRENT_TEXTURE_COORDS;// I A: $19
    property GL_DEPTH_CLEAR_VALUE : Integer read _GetGL_DEPTH_CLEAR_VALUE;      // I A: $19
    property GL_DEPTH_FUNC : Integer read _GetGL_DEPTH_FUNC;                    // I A: $19
    property GL_DEPTH_RANGE : Integer read _GetGL_DEPTH_RANGE;                  // I A: $19
    property GL_DEPTH_WRITEMASK : Integer read _GetGL_DEPTH_WRITEMASK;          // I A: $19
    property GL_DOT3_RGB : Integer read _GetGL_DOT3_RGB;                        // I A: $19
    property GL_DOT3_RGBA : Integer read _GetGL_DOT3_RGBA;                      // I A: $19
    property GL_DYNAMIC_DRAW : Integer read _GetGL_DYNAMIC_DRAW;                // I A: $19
    property GL_ELEMENT_ARRAY_BUFFER : Integer read _GetGL_ELEMENT_ARRAY_BUFFER;// I A: $19
    property GL_ELEMENT_ARRAY_BUFFER_BINDING : Integer read _GetGL_ELEMENT_ARRAY_BUFFER_BINDING;// I A: $19
    property GL_FRONT_FACE : Integer read _GetGL_FRONT_FACE;                    // I A: $19
    property GL_GENERATE_MIPMAP : Integer read _GetGL_GENERATE_MIPMAP;          // I A: $19
    property GL_GENERATE_MIPMAP_HINT : Integer read _GetGL_GENERATE_MIPMAP_HINT;// I A: $19
    property GL_INTERPOLATE : Integer read _GetGL_INTERPOLATE;                  // I A: $19
    property GL_LINE_WIDTH : Integer read _GetGL_LINE_WIDTH;                    // I A: $19
    property GL_LOGIC_OP_MODE : Integer read _GetGL_LOGIC_OP_MODE;              // I A: $19
    property GL_MATRIX_MODE : Integer read _GetGL_MATRIX_MODE;                  // I A: $19
    property GL_MAX_CLIP_PLANES : Integer read _GetGL_MAX_CLIP_PLANES;          // I A: $19
    property GL_MODELVIEW_MATRIX : Integer read _GetGL_MODELVIEW_MATRIX;        // I A: $19
    property GL_MODELVIEW_MATRIX_FLOAT_AS_INT_BITS_OES : Integer read _GetGL_MODELVIEW_MATRIX_FLOAT_AS_INT_BITS_OES;// I A: $19
    property GL_MODELVIEW_STACK_DEPTH : Integer read _GetGL_MODELVIEW_STACK_DEPTH;// I A: $19
    property GL_NORMAL_ARRAY_BUFFER_BINDING : Integer read _GetGL_NORMAL_ARRAY_BUFFER_BINDING;// I A: $19
    property GL_NORMAL_ARRAY_POINTER : Integer read _GetGL_NORMAL_ARRAY_POINTER;// I A: $19
    property GL_NORMAL_ARRAY_STRIDE : Integer read _GetGL_NORMAL_ARRAY_STRIDE;  // I A: $19
    property GL_NORMAL_ARRAY_TYPE : Integer read _GetGL_NORMAL_ARRAY_TYPE;      // I A: $19
    property GL_OPERAND0_ALPHA : Integer read _GetGL_OPERAND0_ALPHA;            // I A: $19
    property GL_OPERAND0_RGB : Integer read _GetGL_OPERAND0_RGB;                // I A: $19
    property GL_OPERAND1_ALPHA : Integer read _GetGL_OPERAND1_ALPHA;            // I A: $19
    property GL_OPERAND1_RGB : Integer read _GetGL_OPERAND1_RGB;                // I A: $19
    property GL_OPERAND2_ALPHA : Integer read _GetGL_OPERAND2_ALPHA;            // I A: $19
    property GL_OPERAND2_RGB : Integer read _GetGL_OPERAND2_RGB;                // I A: $19
    property GL_POINT_DISTANCE_ATTENUATION : Integer read _GetGL_POINT_DISTANCE_ATTENUATION;// I A: $19
    property GL_POINT_FADE_THRESHOLD_SIZE : Integer read _GetGL_POINT_FADE_THRESHOLD_SIZE;// I A: $19
    property GL_POINT_SIZE : Integer read _GetGL_POINT_SIZE;                    // I A: $19
    property GL_POINT_SIZE_ARRAY_BUFFER_BINDING_OES : Integer read _GetGL_POINT_SIZE_ARRAY_BUFFER_BINDING_OES;// I A: $19
    property GL_POINT_SIZE_ARRAY_OES : Integer read _GetGL_POINT_SIZE_ARRAY_OES;// I A: $19
    property GL_POINT_SIZE_ARRAY_POINTER_OES : Integer read _GetGL_POINT_SIZE_ARRAY_POINTER_OES;// I A: $19
    property GL_POINT_SIZE_ARRAY_STRIDE_OES : Integer read _GetGL_POINT_SIZE_ARRAY_STRIDE_OES;// I A: $19
    property GL_POINT_SIZE_ARRAY_TYPE_OES : Integer read _GetGL_POINT_SIZE_ARRAY_TYPE_OES;// I A: $19
    property GL_POINT_SIZE_MAX : Integer read _GetGL_POINT_SIZE_MAX;            // I A: $19
    property GL_POINT_SIZE_MIN : Integer read _GetGL_POINT_SIZE_MIN;            // I A: $19
    property GL_POINT_SPRITE_OES : Integer read _GetGL_POINT_SPRITE_OES;        // I A: $19
    property GL_POLYGON_OFFSET_FACTOR : Integer read _GetGL_POLYGON_OFFSET_FACTOR;// I A: $19
    property GL_POLYGON_OFFSET_UNITS : Integer read _GetGL_POLYGON_OFFSET_UNITS;// I A: $19
    property GL_PREVIOUS : Integer read _GetGL_PREVIOUS;                        // I A: $19
    property GL_PRIMARY_COLOR : Integer read _GetGL_PRIMARY_COLOR;              // I A: $19
    property GL_PROJECTION_MATRIX : Integer read _GetGL_PROJECTION_MATRIX;      // I A: $19
    property GL_PROJECTION_MATRIX_FLOAT_AS_INT_BITS_OES : Integer read _GetGL_PROJECTION_MATRIX_FLOAT_AS_INT_BITS_OES;// I A: $19
    property GL_PROJECTION_STACK_DEPTH : Integer read _GetGL_PROJECTION_STACK_DEPTH;// I A: $19
    property GL_RGB_SCALE : Integer read _GetGL_RGB_SCALE;                      // I A: $19
    property GL_SAMPLES : Integer read _GetGL_SAMPLES;                          // I A: $19
    property GL_SAMPLE_BUFFERS : Integer read _GetGL_SAMPLE_BUFFERS;            // I A: $19
    property GL_SAMPLE_COVERAGE_INVERT : Integer read _GetGL_SAMPLE_COVERAGE_INVERT;// I A: $19
    property GL_SAMPLE_COVERAGE_VALUE : Integer read _GetGL_SAMPLE_COVERAGE_VALUE;// I A: $19
    property GL_SCISSOR_BOX : Integer read _GetGL_SCISSOR_BOX;                  // I A: $19
    property GL_SHADE_MODEL : Integer read _GetGL_SHADE_MODEL;                  // I A: $19
    property GL_SRC0_ALPHA : Integer read _GetGL_SRC0_ALPHA;                    // I A: $19
    property GL_SRC0_RGB : Integer read _GetGL_SRC0_RGB;                        // I A: $19
    property GL_SRC1_ALPHA : Integer read _GetGL_SRC1_ALPHA;                    // I A: $19
    property GL_SRC1_RGB : Integer read _GetGL_SRC1_RGB;                        // I A: $19
    property GL_SRC2_ALPHA : Integer read _GetGL_SRC2_ALPHA;                    // I A: $19
    property GL_SRC2_RGB : Integer read _GetGL_SRC2_RGB;                        // I A: $19
    property GL_STATIC_DRAW : Integer read _GetGL_STATIC_DRAW;                  // I A: $19
    property GL_STENCIL_CLEAR_VALUE : Integer read _GetGL_STENCIL_CLEAR_VALUE;  // I A: $19
    property GL_STENCIL_FAIL : Integer read _GetGL_STENCIL_FAIL;                // I A: $19
    property GL_STENCIL_FUNC : Integer read _GetGL_STENCIL_FUNC;                // I A: $19
    property GL_STENCIL_PASS_DEPTH_FAIL : Integer read _GetGL_STENCIL_PASS_DEPTH_FAIL;// I A: $19
    property GL_STENCIL_PASS_DEPTH_PASS : Integer read _GetGL_STENCIL_PASS_DEPTH_PASS;// I A: $19
    property GL_STENCIL_REF : Integer read _GetGL_STENCIL_REF;                  // I A: $19
    property GL_STENCIL_VALUE_MASK : Integer read _GetGL_STENCIL_VALUE_MASK;    // I A: $19
    property GL_STENCIL_WRITEMASK : Integer read _GetGL_STENCIL_WRITEMASK;      // I A: $19
    property GL_SUBTRACT : Integer read _GetGL_SUBTRACT;                        // I A: $19
    property GL_TEXTURE_BINDING_2D : Integer read _GetGL_TEXTURE_BINDING_2D;    // I A: $19
    property GL_TEXTURE_COORD_ARRAY_BUFFER_BINDING : Integer read _GetGL_TEXTURE_COORD_ARRAY_BUFFER_BINDING;// I A: $19
    property GL_TEXTURE_COORD_ARRAY_POINTER : Integer read _GetGL_TEXTURE_COORD_ARRAY_POINTER;// I A: $19
    property GL_TEXTURE_COORD_ARRAY_SIZE : Integer read _GetGL_TEXTURE_COORD_ARRAY_SIZE;// I A: $19
    property GL_TEXTURE_COORD_ARRAY_STRIDE : Integer read _GetGL_TEXTURE_COORD_ARRAY_STRIDE;// I A: $19
    property GL_TEXTURE_COORD_ARRAY_TYPE : Integer read _GetGL_TEXTURE_COORD_ARRAY_TYPE;// I A: $19
    property GL_TEXTURE_MATRIX : Integer read _GetGL_TEXTURE_MATRIX;            // I A: $19
    property GL_TEXTURE_MATRIX_FLOAT_AS_INT_BITS_OES : Integer read _GetGL_TEXTURE_MATRIX_FLOAT_AS_INT_BITS_OES;// I A: $19
    property GL_TEXTURE_STACK_DEPTH : Integer read _GetGL_TEXTURE_STACK_DEPTH;  // I A: $19
    property GL_VERTEX_ARRAY_BUFFER_BINDING : Integer read _GetGL_VERTEX_ARRAY_BUFFER_BINDING;// I A: $19
    property GL_VERTEX_ARRAY_POINTER : Integer read _GetGL_VERTEX_ARRAY_POINTER;// I A: $19
    property GL_VERTEX_ARRAY_SIZE : Integer read _GetGL_VERTEX_ARRAY_SIZE;      // I A: $19
    property GL_VERTEX_ARRAY_STRIDE : Integer read _GetGL_VERTEX_ARRAY_STRIDE;  // I A: $19
    property GL_VERTEX_ARRAY_TYPE : Integer read _GetGL_VERTEX_ARRAY_TYPE;      // I A: $19
    property GL_VIEWPORT : Integer read _GetGL_VIEWPORT;                        // I A: $19
    property GL_WRITE_ONLY : Integer read _GetGL_WRITE_ONLY;                    // I A: $19
  end;

  [JavaSignature('javax/microedition/khronos/opengles/GL11')]
  JGL11 = interface(JObject)
    ['{AE23B484-7936-4C4E-BE95-8A910E94DFFD}']
    function glIsBuffer(Integerparam0 : Integer) : boolean; cdecl;              // (I)Z A: $401
    function glIsEnabled(Integerparam0 : Integer) : boolean; cdecl;             // (I)Z A: $401
    function glIsTexture(Integerparam0 : Integer) : boolean; cdecl;             // (I)Z A: $401
    procedure glBindBuffer(Integerparam0 : Integer; Integerparam1 : Integer) ; cdecl;// (II)V A: $401
    procedure glBufferData(Integerparam0 : Integer; Integerparam1 : Integer; JBufferparam2 : JBuffer; Integerparam3 : Integer) ; cdecl;// (IILjava/nio/Buffer;I)V A: $401
    procedure glBufferSubData(Integerparam0 : Integer; Integerparam1 : Integer; Integerparam2 : Integer; JBufferparam3 : JBuffer) ; cdecl;// (IIILjava/nio/Buffer;)V A: $401
    procedure glClipPlanef(Integerparam0 : Integer; JFloatBufferparam1 : JFloatBuffer) ; cdecl; overload;// (ILjava/nio/FloatBuffer;)V A: $401
    procedure glClipPlanef(Integerparam0 : Integer; TJavaArraySingleparam1 : TJavaArray<Single>; Integerparam2 : Integer) ; cdecl; overload;// (I[FI)V A: $401
    procedure glClipPlanex(Integerparam0 : Integer; JIntBufferparam1 : JIntBuffer) ; cdecl; overload;// (ILjava/nio/IntBuffer;)V A: $401
    procedure glClipPlanex(Integerparam0 : Integer; TJavaArrayIntegerparam1 : TJavaArray<Integer>; Integerparam2 : Integer) ; cdecl; overload;// (I[II)V A: $401
    procedure glColor4ub(Byteparam0 : Byte; Byteparam1 : Byte; Byteparam2 : Byte; Byteparam3 : Byte) ; cdecl;// (BBBB)V A: $401
    procedure glColorPointer(Integerparam0 : Integer; Integerparam1 : Integer; Integerparam2 : Integer; Integerparam3 : Integer) ; cdecl;// (IIII)V A: $401
    procedure glDeleteBuffers(Integerparam0 : Integer; JIntBufferparam1 : JIntBuffer) ; cdecl; overload;// (ILjava/nio/IntBuffer;)V A: $401
    procedure glDeleteBuffers(Integerparam0 : Integer; TJavaArrayIntegerparam1 : TJavaArray<Integer>; Integerparam2 : Integer) ; cdecl; overload;// (I[II)V A: $401
    procedure glDrawElements(Integerparam0 : Integer; Integerparam1 : Integer; Integerparam2 : Integer; Integerparam3 : Integer) ; cdecl;// (IIII)V A: $401
    procedure glGenBuffers(Integerparam0 : Integer; JIntBufferparam1 : JIntBuffer) ; cdecl; overload;// (ILjava/nio/IntBuffer;)V A: $401
    procedure glGenBuffers(Integerparam0 : Integer; TJavaArrayIntegerparam1 : TJavaArray<Integer>; Integerparam2 : Integer) ; cdecl; overload;// (I[II)V A: $401
    procedure glGetBooleanv(Integerparam0 : Integer; JIntBufferparam1 : JIntBuffer) ; cdecl; overload;// (ILjava/nio/IntBuffer;)V A: $401
    procedure glGetBooleanv(Integerparam0 : Integer; TJavaArraybooleanparam1 : TJavaArray<boolean>; Integerparam2 : Integer) ; cdecl; overload;// (I[ZI)V A: $401
    procedure glGetBufferParameteriv(Integerparam0 : Integer; Integerparam1 : Integer; JIntBufferparam2 : JIntBuffer) ; cdecl; overload;// (IILjava/nio/IntBuffer;)V A: $401
    procedure glGetBufferParameteriv(Integerparam0 : Integer; Integerparam1 : Integer; TJavaArrayIntegerparam2 : TJavaArray<Integer>; Integerparam3 : Integer) ; cdecl; overload;// (II[II)V A: $401
    procedure glGetClipPlanef(Integerparam0 : Integer; JFloatBufferparam1 : JFloatBuffer) ; cdecl; overload;// (ILjava/nio/FloatBuffer;)V A: $401
    procedure glGetClipPlanef(Integerparam0 : Integer; TJavaArraySingleparam1 : TJavaArray<Single>; Integerparam2 : Integer) ; cdecl; overload;// (I[FI)V A: $401
    procedure glGetClipPlanex(Integerparam0 : Integer; JIntBufferparam1 : JIntBuffer) ; cdecl; overload;// (ILjava/nio/IntBuffer;)V A: $401
    procedure glGetClipPlanex(Integerparam0 : Integer; TJavaArrayIntegerparam1 : TJavaArray<Integer>; Integerparam2 : Integer) ; cdecl; overload;// (I[II)V A: $401
    procedure glGetFixedv(Integerparam0 : Integer; JIntBufferparam1 : JIntBuffer) ; cdecl; overload;// (ILjava/nio/IntBuffer;)V A: $401
    procedure glGetFixedv(Integerparam0 : Integer; TJavaArrayIntegerparam1 : TJavaArray<Integer>; Integerparam2 : Integer) ; cdecl; overload;// (I[II)V A: $401
    procedure glGetFloatv(Integerparam0 : Integer; JFloatBufferparam1 : JFloatBuffer) ; cdecl; overload;// (ILjava/nio/FloatBuffer;)V A: $401
    procedure glGetFloatv(Integerparam0 : Integer; TJavaArraySingleparam1 : TJavaArray<Single>; Integerparam2 : Integer) ; cdecl; overload;// (I[FI)V A: $401
    procedure glGetLightfv(Integerparam0 : Integer; Integerparam1 : Integer; JFloatBufferparam2 : JFloatBuffer) ; cdecl; overload;// (IILjava/nio/FloatBuffer;)V A: $401
    procedure glGetLightfv(Integerparam0 : Integer; Integerparam1 : Integer; TJavaArraySingleparam2 : TJavaArray<Single>; Integerparam3 : Integer) ; cdecl; overload;// (II[FI)V A: $401
    procedure glGetLightxv(Integerparam0 : Integer; Integerparam1 : Integer; JIntBufferparam2 : JIntBuffer) ; cdecl; overload;// (IILjava/nio/IntBuffer;)V A: $401
    procedure glGetLightxv(Integerparam0 : Integer; Integerparam1 : Integer; TJavaArrayIntegerparam2 : TJavaArray<Integer>; Integerparam3 : Integer) ; cdecl; overload;// (II[II)V A: $401
    procedure glGetMaterialfv(Integerparam0 : Integer; Integerparam1 : Integer; JFloatBufferparam2 : JFloatBuffer) ; cdecl; overload;// (IILjava/nio/FloatBuffer;)V A: $401
    procedure glGetMaterialfv(Integerparam0 : Integer; Integerparam1 : Integer; TJavaArraySingleparam2 : TJavaArray<Single>; Integerparam3 : Integer) ; cdecl; overload;// (II[FI)V A: $401
    procedure glGetMaterialxv(Integerparam0 : Integer; Integerparam1 : Integer; JIntBufferparam2 : JIntBuffer) ; cdecl; overload;// (IILjava/nio/IntBuffer;)V A: $401
    procedure glGetMaterialxv(Integerparam0 : Integer; Integerparam1 : Integer; TJavaArrayIntegerparam2 : TJavaArray<Integer>; Integerparam3 : Integer) ; cdecl; overload;// (II[II)V A: $401
    procedure glGetPointerv(Integerparam0 : Integer; TJavaArrayJBufferparam1 : TJavaArray<JBuffer>) ; cdecl;// (I[Ljava/nio/Buffer;)V A: $401
    procedure glGetTexEnviv(Integerparam0 : Integer; Integerparam1 : Integer; JIntBufferparam2 : JIntBuffer) ; cdecl; overload;// (IILjava/nio/IntBuffer;)V A: $401
    procedure glGetTexEnviv(Integerparam0 : Integer; Integerparam1 : Integer; TJavaArrayIntegerparam2 : TJavaArray<Integer>; Integerparam3 : Integer) ; cdecl; overload;// (II[II)V A: $401
    procedure glGetTexEnvxv(Integerparam0 : Integer; Integerparam1 : Integer; JIntBufferparam2 : JIntBuffer) ; cdecl; overload;// (IILjava/nio/IntBuffer;)V A: $401
    procedure glGetTexEnvxv(Integerparam0 : Integer; Integerparam1 : Integer; TJavaArrayIntegerparam2 : TJavaArray<Integer>; Integerparam3 : Integer) ; cdecl; overload;// (II[II)V A: $401
    procedure glGetTexParameterfv(Integerparam0 : Integer; Integerparam1 : Integer; JFloatBufferparam2 : JFloatBuffer) ; cdecl; overload;// (IILjava/nio/FloatBuffer;)V A: $401
    procedure glGetTexParameterfv(Integerparam0 : Integer; Integerparam1 : Integer; TJavaArraySingleparam2 : TJavaArray<Single>; Integerparam3 : Integer) ; cdecl; overload;// (II[FI)V A: $401
    procedure glGetTexParameteriv(Integerparam0 : Integer; Integerparam1 : Integer; JIntBufferparam2 : JIntBuffer) ; cdecl; overload;// (IILjava/nio/IntBuffer;)V A: $401
    procedure glGetTexParameteriv(Integerparam0 : Integer; Integerparam1 : Integer; TJavaArrayIntegerparam2 : TJavaArray<Integer>; Integerparam3 : Integer) ; cdecl; overload;// (II[II)V A: $401
    procedure glGetTexParameterxv(Integerparam0 : Integer; Integerparam1 : Integer; JIntBufferparam2 : JIntBuffer) ; cdecl; overload;// (IILjava/nio/IntBuffer;)V A: $401
    procedure glGetTexParameterxv(Integerparam0 : Integer; Integerparam1 : Integer; TJavaArrayIntegerparam2 : TJavaArray<Integer>; Integerparam3 : Integer) ; cdecl; overload;// (II[II)V A: $401
    procedure glNormalPointer(Integerparam0 : Integer; Integerparam1 : Integer; Integerparam2 : Integer) ; cdecl;// (III)V A: $401
    procedure glPointParameterf(Integerparam0 : Integer; Singleparam1 : Single) ; cdecl;// (IF)V A: $401
    procedure glPointParameterfv(Integerparam0 : Integer; JFloatBufferparam1 : JFloatBuffer) ; cdecl; overload;// (ILjava/nio/FloatBuffer;)V A: $401
    procedure glPointParameterfv(Integerparam0 : Integer; TJavaArraySingleparam1 : TJavaArray<Single>; Integerparam2 : Integer) ; cdecl; overload;// (I[FI)V A: $401
    procedure glPointParameterx(Integerparam0 : Integer; Integerparam1 : Integer) ; cdecl;// (II)V A: $401
    procedure glPointParameterxv(Integerparam0 : Integer; JIntBufferparam1 : JIntBuffer) ; cdecl; overload;// (ILjava/nio/IntBuffer;)V A: $401
    procedure glPointParameterxv(Integerparam0 : Integer; TJavaArrayIntegerparam1 : TJavaArray<Integer>; Integerparam2 : Integer) ; cdecl; overload;// (I[II)V A: $401
    procedure glPointSizePointerOES(Integerparam0 : Integer; Integerparam1 : Integer; JBufferparam2 : JBuffer) ; cdecl;// (IILjava/nio/Buffer;)V A: $401
    procedure glTexCoordPointer(Integerparam0 : Integer; Integerparam1 : Integer; Integerparam2 : Integer; Integerparam3 : Integer) ; cdecl;// (IIII)V A: $401
    procedure glTexEnvi(Integerparam0 : Integer; Integerparam1 : Integer; Integerparam2 : Integer) ; cdecl;// (III)V A: $401
    procedure glTexEnviv(Integerparam0 : Integer; Integerparam1 : Integer; JIntBufferparam2 : JIntBuffer) ; cdecl; overload;// (IILjava/nio/IntBuffer;)V A: $401
    procedure glTexEnviv(Integerparam0 : Integer; Integerparam1 : Integer; TJavaArrayIntegerparam2 : TJavaArray<Integer>; Integerparam3 : Integer) ; cdecl; overload;// (II[II)V A: $401
    procedure glTexParameterfv(Integerparam0 : Integer; Integerparam1 : Integer; JFloatBufferparam2 : JFloatBuffer) ; cdecl; overload;// (IILjava/nio/FloatBuffer;)V A: $401
    procedure glTexParameterfv(Integerparam0 : Integer; Integerparam1 : Integer; TJavaArraySingleparam2 : TJavaArray<Single>; Integerparam3 : Integer) ; cdecl; overload;// (II[FI)V A: $401
    procedure glTexParameteri(Integerparam0 : Integer; Integerparam1 : Integer; Integerparam2 : Integer) ; cdecl;// (III)V A: $401
    procedure glTexParameteriv(Integerparam0 : Integer; Integerparam1 : Integer; JIntBufferparam2 : JIntBuffer) ; cdecl; overload;// (IILjava/nio/IntBuffer;)V A: $401
    procedure glTexParameteriv(Integerparam0 : Integer; Integerparam1 : Integer; TJavaArrayIntegerparam2 : TJavaArray<Integer>; Integerparam3 : Integer) ; cdecl; overload;// (II[II)V A: $401
    procedure glTexParameterxv(Integerparam0 : Integer; Integerparam1 : Integer; JIntBufferparam2 : JIntBuffer) ; cdecl; overload;// (IILjava/nio/IntBuffer;)V A: $401
    procedure glTexParameterxv(Integerparam0 : Integer; Integerparam1 : Integer; TJavaArrayIntegerparam2 : TJavaArray<Integer>; Integerparam3 : Integer) ; cdecl; overload;// (II[II)V A: $401
    procedure glVertexPointer(Integerparam0 : Integer; Integerparam1 : Integer; Integerparam2 : Integer; Integerparam3 : Integer) ; cdecl;// (IIII)V A: $401
  end;

  TJGL11 = class(TJavaGenericImport<JGL11Class, JGL11>)
  end;

const
  TJGL11GL_ACTIVE_TEXTURE = 34016;
  TJGL11GL_ADD_SIGNED = 34164;
  TJGL11GL_ALPHA_SCALE = 3356;
  TJGL11GL_ALPHA_TEST_FUNC = 3009;
  TJGL11GL_ALPHA_TEST_REF = 3010;
  TJGL11GL_ARRAY_BUFFER = 34962;
  TJGL11GL_ARRAY_BUFFER_BINDING = 34964;
  TJGL11GL_BLEND_DST = 3040;
  TJGL11GL_BLEND_SRC = 3041;
  TJGL11GL_BUFFER_ACCESS = 35003;
  TJGL11GL_BUFFER_SIZE = 34660;
  TJGL11GL_BUFFER_USAGE = 34661;
  TJGL11GL_CLIENT_ACTIVE_TEXTURE = 34017;
  TJGL11GL_CLIP_PLANE0 = 12288;
  TJGL11GL_CLIP_PLANE1 = 12289;
  TJGL11GL_CLIP_PLANE2 = 12290;
  TJGL11GL_CLIP_PLANE3 = 12291;
  TJGL11GL_CLIP_PLANE4 = 12292;
  TJGL11GL_CLIP_PLANE5 = 12293;
  TJGL11GL_COLOR_ARRAY_BUFFER_BINDING = 34968;
  TJGL11GL_COLOR_ARRAY_POINTER = 32912;
  TJGL11GL_COLOR_ARRAY_SIZE = 32897;
  TJGL11GL_COLOR_ARRAY_STRIDE = 32899;
  TJGL11GL_COLOR_ARRAY_TYPE = 32898;
  TJGL11GL_COLOR_CLEAR_VALUE = 3106;
  TJGL11GL_COLOR_WRITEMASK = 3107;
  TJGL11GL_COMBINE = 34160;
  TJGL11GL_COMBINE_ALPHA = 34162;
  TJGL11GL_COMBINE_RGB = 34161;
  TJGL11GL_CONSTANT = 34166;
  TJGL11GL_COORD_REPLACE_OES = 34914;
  TJGL11GL_CULL_FACE_MODE = 2885;
  TJGL11GL_CURRENT_COLOR = 2816;
  TJGL11GL_CURRENT_NORMAL = 2818;
  TJGL11GL_CURRENT_TEXTURE_COORDS = 2819;
  TJGL11GL_DEPTH_CLEAR_VALUE = 2931;
  TJGL11GL_DEPTH_FUNC = 2932;
  TJGL11GL_DEPTH_RANGE = 2928;
  TJGL11GL_DEPTH_WRITEMASK = 2930;
  TJGL11GL_DOT3_RGB = 34478;
  TJGL11GL_DOT3_RGBA = 34479;
  TJGL11GL_DYNAMIC_DRAW = 35048;
  TJGL11GL_ELEMENT_ARRAY_BUFFER = 34963;
  TJGL11GL_ELEMENT_ARRAY_BUFFER_BINDING = 34965;
  TJGL11GL_FRONT_FACE = 2886;
  TJGL11GL_GENERATE_MIPMAP = 33169;
  TJGL11GL_GENERATE_MIPMAP_HINT = 33170;
  TJGL11GL_INTERPOLATE = 34165;
  TJGL11GL_LINE_WIDTH = 2849;
  TJGL11GL_LOGIC_OP_MODE = 3056;
  TJGL11GL_MATRIX_MODE = 2976;
  TJGL11GL_MAX_CLIP_PLANES = 3378;
  TJGL11GL_MODELVIEW_MATRIX = 2982;
  TJGL11GL_MODELVIEW_MATRIX_FLOAT_AS_INT_BITS_OES = 35213;
  TJGL11GL_MODELVIEW_STACK_DEPTH = 2979;
  TJGL11GL_NORMAL_ARRAY_BUFFER_BINDING = 34967;
  TJGL11GL_NORMAL_ARRAY_POINTER = 32911;
  TJGL11GL_NORMAL_ARRAY_STRIDE = 32895;
  TJGL11GL_NORMAL_ARRAY_TYPE = 32894;
  TJGL11GL_OPERAND0_ALPHA = 34200;
  TJGL11GL_OPERAND0_RGB = 34192;
  TJGL11GL_OPERAND1_ALPHA = 34201;
  TJGL11GL_OPERAND1_RGB = 34193;
  TJGL11GL_OPERAND2_ALPHA = 34202;
  TJGL11GL_OPERAND2_RGB = 34194;
  TJGL11GL_POINT_DISTANCE_ATTENUATION = 33065;
  TJGL11GL_POINT_FADE_THRESHOLD_SIZE = 33064;
  TJGL11GL_POINT_SIZE = 2833;
  TJGL11GL_POINT_SIZE_ARRAY_BUFFER_BINDING_OES = 35743;
  TJGL11GL_POINT_SIZE_ARRAY_OES = 35740;
  TJGL11GL_POINT_SIZE_ARRAY_POINTER_OES = 35212;
  TJGL11GL_POINT_SIZE_ARRAY_STRIDE_OES = 35211;
  TJGL11GL_POINT_SIZE_ARRAY_TYPE_OES = 35210;
  TJGL11GL_POINT_SIZE_MAX = 33063;
  TJGL11GL_POINT_SIZE_MIN = 33062;
  TJGL11GL_POINT_SPRITE_OES = 34913;
  TJGL11GL_POLYGON_OFFSET_FACTOR = 32824;
  TJGL11GL_POLYGON_OFFSET_UNITS = 10752;
  TJGL11GL_PREVIOUS = 34168;
  TJGL11GL_PRIMARY_COLOR = 34167;
  TJGL11GL_PROJECTION_MATRIX = 2983;
  TJGL11GL_PROJECTION_MATRIX_FLOAT_AS_INT_BITS_OES = 35214;
  TJGL11GL_PROJECTION_STACK_DEPTH = 2980;
  TJGL11GL_RGB_SCALE = 34163;
  TJGL11GL_SAMPLES = 32937;
  TJGL11GL_SAMPLE_BUFFERS = 32936;
  TJGL11GL_SAMPLE_COVERAGE_INVERT = 32939;
  TJGL11GL_SAMPLE_COVERAGE_VALUE = 32938;
  TJGL11GL_SCISSOR_BOX = 3088;
  TJGL11GL_SHADE_MODEL = 2900;
  TJGL11GL_SRC0_ALPHA = 34184;
  TJGL11GL_SRC0_RGB = 34176;
  TJGL11GL_SRC1_ALPHA = 34185;
  TJGL11GL_SRC1_RGB = 34177;
  TJGL11GL_SRC2_ALPHA = 34186;
  TJGL11GL_SRC2_RGB = 34178;
  TJGL11GL_STATIC_DRAW = 35044;
  TJGL11GL_STENCIL_CLEAR_VALUE = 2961;
  TJGL11GL_STENCIL_FAIL = 2964;
  TJGL11GL_STENCIL_FUNC = 2962;
  TJGL11GL_STENCIL_PASS_DEPTH_FAIL = 2965;
  TJGL11GL_STENCIL_PASS_DEPTH_PASS = 2966;
  TJGL11GL_STENCIL_REF = 2967;
  TJGL11GL_STENCIL_VALUE_MASK = 2963;
  TJGL11GL_STENCIL_WRITEMASK = 2968;
  TJGL11GL_SUBTRACT = 34023;
  TJGL11GL_TEXTURE_BINDING_2D = 32873;
  TJGL11GL_TEXTURE_COORD_ARRAY_BUFFER_BINDING = 34970;
  TJGL11GL_TEXTURE_COORD_ARRAY_POINTER = 32914;
  TJGL11GL_TEXTURE_COORD_ARRAY_SIZE = 32904;
  TJGL11GL_TEXTURE_COORD_ARRAY_STRIDE = 32906;
  TJGL11GL_TEXTURE_COORD_ARRAY_TYPE = 32905;
  TJGL11GL_TEXTURE_MATRIX = 2984;
  TJGL11GL_TEXTURE_MATRIX_FLOAT_AS_INT_BITS_OES = 35215;
  TJGL11GL_TEXTURE_STACK_DEPTH = 2981;
  TJGL11GL_VERTEX_ARRAY_BUFFER_BINDING = 34966;
  TJGL11GL_VERTEX_ARRAY_POINTER = 32910;
  TJGL11GL_VERTEX_ARRAY_SIZE = 32890;
  TJGL11GL_VERTEX_ARRAY_STRIDE = 32892;
  TJGL11GL_VERTEX_ARRAY_TYPE = 32891;
  TJGL11GL_VIEWPORT = 2978;
  TJGL11GL_WRITE_ONLY = 35001;

implementation

end.
