//
// Generated by JavaToPas v1.4 20140515 - 180758
////////////////////////////////////////////////////////////////////////////////
unit java.lang.Math;

interface

uses
  AndroidAPI.JNIBridge,
  Androidapi.JNI.JavaTypes;

type
  JMath = interface;

  JMathClass = interface(JObjectClass)
    ['{D86AA21D-3EBF-48F1-962A-AAE89C99E72E}']
    function IEEEremainder(Doubleparam0 : Double; Doubleparam1 : Double) : Double; cdecl;// (DD)D A: $109
    function _GetE : Double; cdecl;                                             //  A: $19
    function _GetPI : Double; cdecl;                                            //  A: $19
    function abs(d : Double) : Double; cdecl; overload;                         // (D)D A: $9
    function abs(f : Single) : Single; cdecl; overload;                         // (F)F A: $9
    function abs(i : Integer) : Integer; cdecl; overload;                       // (I)I A: $9
    function abs(l : Int64) : Int64; cdecl; overload;                           // (J)J A: $9
    function acos(Doubleparam0 : Double) : Double; cdecl;                       // (D)D A: $109
    function asin(Doubleparam0 : Double) : Double; cdecl;                       // (D)D A: $109
    function atan(Doubleparam0 : Double) : Double; cdecl;                       // (D)D A: $109
    function atan2(Doubleparam0 : Double; Doubleparam1 : Double) : Double; cdecl;// (DD)D A: $109
    function cbrt(Doubleparam0 : Double) : Double; cdecl;                       // (D)D A: $109
    function ceil(Doubleparam0 : Double) : Double; cdecl;                       // (D)D A: $109
    function cos(Doubleparam0 : Double) : Double; cdecl;                        // (D)D A: $109
    function cosh(Doubleparam0 : Double) : Double; cdecl;                       // (D)D A: $109
    function exp(Doubleparam0 : Double) : Double; cdecl;                        // (D)D A: $109
    function expm1(Doubleparam0 : Double) : Double; cdecl;                      // (D)D A: $109
    function floor(Doubleparam0 : Double) : Double; cdecl;                      // (D)D A: $109
    function hypot(Doubleparam0 : Double; Doubleparam1 : Double) : Double; cdecl;// (DD)D A: $109
    function log(Doubleparam0 : Double) : Double; cdecl;                        // (D)D A: $109
    function log10(Doubleparam0 : Double) : Double; cdecl;                      // (D)D A: $109
    function log1p(Doubleparam0 : Double) : Double; cdecl;                      // (D)D A: $109
    function max(d1 : Double; d2 : Double) : Double; cdecl; overload;           // (DD)D A: $9
    function max(f1 : Single; f2 : Single) : Single; cdecl; overload;           // (FF)F A: $9
    function max(i1 : Integer; i2 : Integer) : Integer; cdecl; overload;        // (II)I A: $9
    function max(l1 : Int64; l2 : Int64) : Int64; cdecl; overload;              // (JJ)J A: $9
    function min(d1 : Double; d2 : Double) : Double; cdecl; overload;           // (DD)D A: $9
    function min(f1 : Single; f2 : Single) : Single; cdecl; overload;           // (FF)F A: $9
    function min(i1 : Integer; i2 : Integer) : Integer; cdecl; overload;        // (II)I A: $9
    function min(l1 : Int64; l2 : Int64) : Int64; cdecl; overload;              // (JJ)J A: $9
    function pow(Doubleparam0 : Double; Doubleparam1 : Double) : Double; cdecl; // (DD)D A: $109
    function random : Double; cdecl;                                            // ()D A: $9
    function rint(Doubleparam0 : Double) : Double; cdecl;                       // (D)D A: $109
    function round(d : Double) : Int64; cdecl; overload;                        // (D)J A: $9
    function round(f : Single) : Integer; cdecl; overload;                      // (F)I A: $9
    function signum(d : Double) : Double; cdecl; overload;                      // (D)D A: $9
    function signum(f : Single) : Single; cdecl; overload;                      // (F)F A: $9
    function sin(Doubleparam0 : Double) : Double; cdecl;                        // (D)D A: $109
    function sinh(Doubleparam0 : Double) : Double; cdecl;                       // (D)D A: $109
    function sqrt(Doubleparam0 : Double) : Double; cdecl;                       // (D)D A: $109
    function tan(Doubleparam0 : Double) : Double; cdecl;                        // (D)D A: $109
    function tanh(Doubleparam0 : Double) : Double; cdecl;                       // (D)D A: $109
    function toDegrees(angrad : Double) : Double; cdecl;                        // (D)D A: $9
    function toRadians(angdeg : Double) : Double; cdecl;                        // (D)D A: $9
    function ulp(d : Double) : Double; cdecl; overload;                         // (D)D A: $9
    function ulp(f : Single) : Single; cdecl; overload;                         // (F)F A: $9
    property E : Double read _GetE;                                             // D A: $19
    property PI : Double read _GetPI;                                           // D A: $19
  end;

  [JavaSignature('java/lang/Math')]
  JMath = interface(JObject)
    ['{EDF5CB6D-D18C-49D3-B633-6C8C99066FAB}']
  end;

  TJMath = class(TJavaGenericImport<JMathClass, JMath>)
  end;

const
  TJMathE = 2.71828182845905;
  TJMathPI = 3.14159265358979;

implementation

end.
