//
// Generated by JavaToPas v1.4 20140515 - 180546
////////////////////////////////////////////////////////////////////////////////
unit org.apache.http.protocol.BasicHttpProcessor;

interface

uses
  AndroidAPI.JNIBridge,
  Androidapi.JNI.JavaTypes,
  org.apache.http.HttpRequestInterceptor,
  org.apache.http.HttpResponseInterceptor,
  org.apache.http.HttpRequest,
  org.apache.http.protocol.HttpContext,
  org.apache.http.HttpResponse;

type
  JBasicHttpProcessor = interface;

  JBasicHttpProcessorClass = interface(JObjectClass)
    ['{073802EE-32F5-48D8-B2FF-E20D1A4AF386}']
    function clone : JObject; cdecl;                                            // ()Ljava/lang/Object; A: $1
    function copy : JBasicHttpProcessor; cdecl;                                 // ()Lorg/apache/http/protocol/BasicHttpProcessor; A: $1
    function getRequestInterceptor(&index : Integer) : JHttpRequestInterceptor; cdecl;// (I)Lorg/apache/http/HttpRequestInterceptor; A: $1
    function getRequestInterceptorCount : Integer; cdecl;                       // ()I A: $1
    function getResponseInterceptor(&index : Integer) : JHttpResponseInterceptor; cdecl;// (I)Lorg/apache/http/HttpResponseInterceptor; A: $1
    function getResponseInterceptorCount : Integer; cdecl;                      // ()I A: $1
    function init : JBasicHttpProcessor; cdecl;                                 // ()V A: $1
    procedure addInterceptor(interceptor : JHttpRequestInterceptor) ; cdecl; overload;// (Lorg/apache/http/HttpRequestInterceptor;)V A: $11
    procedure addInterceptor(interceptor : JHttpRequestInterceptor; &index : Integer) ; cdecl; overload;// (Lorg/apache/http/HttpRequestInterceptor;I)V A: $11
    procedure addInterceptor(interceptor : JHttpResponseInterceptor) ; cdecl; overload;// (Lorg/apache/http/HttpResponseInterceptor;)V A: $11
    procedure addInterceptor(interceptor : JHttpResponseInterceptor; &index : Integer) ; cdecl; overload;// (Lorg/apache/http/HttpResponseInterceptor;I)V A: $11
    procedure addRequestInterceptor(itcp : JHttpRequestInterceptor) ; cdecl; overload;// (Lorg/apache/http/HttpRequestInterceptor;)V A: $1
    procedure addRequestInterceptor(itcp : JHttpRequestInterceptor; &index : Integer) ; cdecl; overload;// (Lorg/apache/http/HttpRequestInterceptor;I)V A: $1
    procedure addResponseInterceptor(itcp : JHttpResponseInterceptor) ; cdecl; overload;// (Lorg/apache/http/HttpResponseInterceptor;)V A: $1
    procedure addResponseInterceptor(itcp : JHttpResponseInterceptor; &index : Integer) ; cdecl; overload;// (Lorg/apache/http/HttpResponseInterceptor;I)V A: $1
    procedure clearInterceptors ; cdecl;                                        // ()V A: $1
    procedure clearRequestInterceptors ; cdecl;                                 // ()V A: $1
    procedure clearResponseInterceptors ; cdecl;                                // ()V A: $1
    procedure process(request : JHttpRequest; context : JHttpContext) ; cdecl; overload;// (Lorg/apache/http/HttpRequest;Lorg/apache/http/protocol/HttpContext;)V A: $1
    procedure process(response : JHttpResponse; context : JHttpContext) ; cdecl; overload;// (Lorg/apache/http/HttpResponse;Lorg/apache/http/protocol/HttpContext;)V A: $1
    procedure removeRequestInterceptorByClass(clazz : JClass) ; cdecl;          // (Ljava/lang/Class;)V A: $1
    procedure removeResponseInterceptorByClass(clazz : JClass) ; cdecl;         // (Ljava/lang/Class;)V A: $1
    procedure setInterceptors(list : JList) ; cdecl;                            // (Ljava/util/List;)V A: $1
  end;

  [JavaSignature('org/apache/http/protocol/BasicHttpProcessor')]
  JBasicHttpProcessor = interface(JObject)
    ['{BE9D44B9-4EDE-4AA3-B72D-828E6E120504}']
    function clone : JObject; cdecl;                                            // ()Ljava/lang/Object; A: $1
    function copy : JBasicHttpProcessor; cdecl;                                 // ()Lorg/apache/http/protocol/BasicHttpProcessor; A: $1
    function getRequestInterceptor(&index : Integer) : JHttpRequestInterceptor; cdecl;// (I)Lorg/apache/http/HttpRequestInterceptor; A: $1
    function getRequestInterceptorCount : Integer; cdecl;                       // ()I A: $1
    function getResponseInterceptor(&index : Integer) : JHttpResponseInterceptor; cdecl;// (I)Lorg/apache/http/HttpResponseInterceptor; A: $1
    function getResponseInterceptorCount : Integer; cdecl;                      // ()I A: $1
    procedure addRequestInterceptor(itcp : JHttpRequestInterceptor) ; cdecl; overload;// (Lorg/apache/http/HttpRequestInterceptor;)V A: $1
    procedure addRequestInterceptor(itcp : JHttpRequestInterceptor; &index : Integer) ; cdecl; overload;// (Lorg/apache/http/HttpRequestInterceptor;I)V A: $1
    procedure addResponseInterceptor(itcp : JHttpResponseInterceptor) ; cdecl; overload;// (Lorg/apache/http/HttpResponseInterceptor;)V A: $1
    procedure addResponseInterceptor(itcp : JHttpResponseInterceptor; &index : Integer) ; cdecl; overload;// (Lorg/apache/http/HttpResponseInterceptor;I)V A: $1
    procedure clearInterceptors ; cdecl;                                        // ()V A: $1
    procedure clearRequestInterceptors ; cdecl;                                 // ()V A: $1
    procedure clearResponseInterceptors ; cdecl;                                // ()V A: $1
    procedure process(request : JHttpRequest; context : JHttpContext) ; cdecl; overload;// (Lorg/apache/http/HttpRequest;Lorg/apache/http/protocol/HttpContext;)V A: $1
    procedure process(response : JHttpResponse; context : JHttpContext) ; cdecl; overload;// (Lorg/apache/http/HttpResponse;Lorg/apache/http/protocol/HttpContext;)V A: $1
    procedure removeRequestInterceptorByClass(clazz : JClass) ; cdecl;          // (Ljava/lang/Class;)V A: $1
    procedure removeResponseInterceptorByClass(clazz : JClass) ; cdecl;         // (Ljava/lang/Class;)V A: $1
    procedure setInterceptors(list : JList) ; cdecl;                            // (Ljava/util/List;)V A: $1
  end;

  TJBasicHttpProcessor = class(TJavaGenericImport<JBasicHttpProcessorClass, JBasicHttpProcessor>)
  end;

implementation

end.
