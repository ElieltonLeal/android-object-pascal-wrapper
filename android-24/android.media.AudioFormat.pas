//
// Generated by JavaToPas v1.5 20171018 - 170718
////////////////////////////////////////////////////////////////////////////////
unit android.media.AudioFormat;

interface

uses
  AndroidAPI.JNIBridge,
  Androidapi.JNI.JavaTypes,
  Androidapi.JNI.os;

type
  JAudioFormat = interface;

  JAudioFormatClass = interface(JObjectClass)
    ['{061FCBDD-1C8E-4D70-8428-715C019ADF5C}']
    function _GetCHANNEL_CONFIGURATION_DEFAULT : Integer; cdecl;                //  A: $19
    function _GetCHANNEL_CONFIGURATION_INVALID : Integer; cdecl;                //  A: $19
    function _GetCHANNEL_CONFIGURATION_MONO : Integer; cdecl;                   //  A: $19
    function _GetCHANNEL_CONFIGURATION_STEREO : Integer; cdecl;                 //  A: $19
    function _GetCHANNEL_INVALID : Integer; cdecl;                              //  A: $19
    function _GetCHANNEL_IN_BACK : Integer; cdecl;                              //  A: $19
    function _GetCHANNEL_IN_BACK_PROCESSED : Integer; cdecl;                    //  A: $19
    function _GetCHANNEL_IN_DEFAULT : Integer; cdecl;                           //  A: $19
    function _GetCHANNEL_IN_FRONT : Integer; cdecl;                             //  A: $19
    function _GetCHANNEL_IN_FRONT_PROCESSED : Integer; cdecl;                   //  A: $19
    function _GetCHANNEL_IN_LEFT : Integer; cdecl;                              //  A: $19
    function _GetCHANNEL_IN_LEFT_PROCESSED : Integer; cdecl;                    //  A: $19
    function _GetCHANNEL_IN_MONO : Integer; cdecl;                              //  A: $19
    function _GetCHANNEL_IN_PRESSURE : Integer; cdecl;                          //  A: $19
    function _GetCHANNEL_IN_RIGHT : Integer; cdecl;                             //  A: $19
    function _GetCHANNEL_IN_RIGHT_PROCESSED : Integer; cdecl;                   //  A: $19
    function _GetCHANNEL_IN_STEREO : Integer; cdecl;                            //  A: $19
    function _GetCHANNEL_IN_VOICE_DNLINK : Integer; cdecl;                      //  A: $19
    function _GetCHANNEL_IN_VOICE_UPLINK : Integer; cdecl;                      //  A: $19
    function _GetCHANNEL_IN_X_AXIS : Integer; cdecl;                            //  A: $19
    function _GetCHANNEL_IN_Y_AXIS : Integer; cdecl;                            //  A: $19
    function _GetCHANNEL_IN_Z_AXIS : Integer; cdecl;                            //  A: $19
    function _GetCHANNEL_OUT_5POINT1 : Integer; cdecl;                          //  A: $19
    function _GetCHANNEL_OUT_7POINT1 : Integer; cdecl;                          //  A: $19
    function _GetCHANNEL_OUT_7POINT1_SURROUND : Integer; cdecl;                 //  A: $19
    function _GetCHANNEL_OUT_BACK_CENTER : Integer; cdecl;                      //  A: $19
    function _GetCHANNEL_OUT_BACK_LEFT : Integer; cdecl;                        //  A: $19
    function _GetCHANNEL_OUT_BACK_RIGHT : Integer; cdecl;                       //  A: $19
    function _GetCHANNEL_OUT_DEFAULT : Integer; cdecl;                          //  A: $19
    function _GetCHANNEL_OUT_FRONT_CENTER : Integer; cdecl;                     //  A: $19
    function _GetCHANNEL_OUT_FRONT_LEFT : Integer; cdecl;                       //  A: $19
    function _GetCHANNEL_OUT_FRONT_LEFT_OF_CENTER : Integer; cdecl;             //  A: $19
    function _GetCHANNEL_OUT_FRONT_RIGHT : Integer; cdecl;                      //  A: $19
    function _GetCHANNEL_OUT_FRONT_RIGHT_OF_CENTER : Integer; cdecl;            //  A: $19
    function _GetCHANNEL_OUT_LOW_FREQUENCY : Integer; cdecl;                    //  A: $19
    function _GetCHANNEL_OUT_MONO : Integer; cdecl;                             //  A: $19
    function _GetCHANNEL_OUT_QUAD : Integer; cdecl;                             //  A: $19
    function _GetCHANNEL_OUT_SIDE_LEFT : Integer; cdecl;                        //  A: $19
    function _GetCHANNEL_OUT_SIDE_RIGHT : Integer; cdecl;                       //  A: $19
    function _GetCHANNEL_OUT_STEREO : Integer; cdecl;                           //  A: $19
    function _GetCHANNEL_OUT_SURROUND : Integer; cdecl;                         //  A: $19
    function _GetCREATOR : JParcelable_Creator; cdecl;                          //  A: $19
    function _GetENCODING_AC3 : Integer; cdecl;                                 //  A: $19
    function _GetENCODING_DEFAULT : Integer; cdecl;                             //  A: $19
    function _GetENCODING_DTS : Integer; cdecl;                                 //  A: $19
    function _GetENCODING_DTS_HD : Integer; cdecl;                              //  A: $19
    function _GetENCODING_E_AC3 : Integer; cdecl;                               //  A: $19
    function _GetENCODING_IEC61937 : Integer; cdecl;                            //  A: $19
    function _GetENCODING_INVALID : Integer; cdecl;                             //  A: $19
    function _GetENCODING_PCM_16BIT : Integer; cdecl;                           //  A: $19
    function _GetENCODING_PCM_8BIT : Integer; cdecl;                            //  A: $19
    function _GetENCODING_PCM_FLOAT : Integer; cdecl;                           //  A: $19
    function _GetSAMPLE_RATE_UNSPECIFIED : Integer; cdecl;                      //  A: $19
    function describeContents : Integer; cdecl;                                 // ()I A: $1
    function equals(o : JObject) : boolean; cdecl;                              // (Ljava/lang/Object;)Z A: $1
    function getChannelCount : Integer; cdecl;                                  // ()I A: $1
    function getChannelIndexMask : Integer; cdecl;                              // ()I A: $1
    function getChannelMask : Integer; cdecl;                                   // ()I A: $1
    function getEncoding : Integer; cdecl;                                      // ()I A: $1
    function getSampleRate : Integer; cdecl;                                    // ()I A: $1
    function hashCode : Integer; cdecl;                                         // ()I A: $1
    function toString : JString; cdecl;                                         // ()Ljava/lang/String; A: $1
    procedure writeToParcel(dest : JParcel; flags : Integer) ; cdecl;           // (Landroid/os/Parcel;I)V A: $1
    property CHANNEL_CONFIGURATION_DEFAULT : Integer read _GetCHANNEL_CONFIGURATION_DEFAULT;// I A: $19
    property CHANNEL_CONFIGURATION_INVALID : Integer read _GetCHANNEL_CONFIGURATION_INVALID;// I A: $19
    property CHANNEL_CONFIGURATION_MONO : Integer read _GetCHANNEL_CONFIGURATION_MONO;// I A: $19
    property CHANNEL_CONFIGURATION_STEREO : Integer read _GetCHANNEL_CONFIGURATION_STEREO;// I A: $19
    property CHANNEL_INVALID : Integer read _GetCHANNEL_INVALID;                // I A: $19
    property CHANNEL_IN_BACK : Integer read _GetCHANNEL_IN_BACK;                // I A: $19
    property CHANNEL_IN_BACK_PROCESSED : Integer read _GetCHANNEL_IN_BACK_PROCESSED;// I A: $19
    property CHANNEL_IN_DEFAULT : Integer read _GetCHANNEL_IN_DEFAULT;          // I A: $19
    property CHANNEL_IN_FRONT : Integer read _GetCHANNEL_IN_FRONT;              // I A: $19
    property CHANNEL_IN_FRONT_PROCESSED : Integer read _GetCHANNEL_IN_FRONT_PROCESSED;// I A: $19
    property CHANNEL_IN_LEFT : Integer read _GetCHANNEL_IN_LEFT;                // I A: $19
    property CHANNEL_IN_LEFT_PROCESSED : Integer read _GetCHANNEL_IN_LEFT_PROCESSED;// I A: $19
    property CHANNEL_IN_MONO : Integer read _GetCHANNEL_IN_MONO;                // I A: $19
    property CHANNEL_IN_PRESSURE : Integer read _GetCHANNEL_IN_PRESSURE;        // I A: $19
    property CHANNEL_IN_RIGHT : Integer read _GetCHANNEL_IN_RIGHT;              // I A: $19
    property CHANNEL_IN_RIGHT_PROCESSED : Integer read _GetCHANNEL_IN_RIGHT_PROCESSED;// I A: $19
    property CHANNEL_IN_STEREO : Integer read _GetCHANNEL_IN_STEREO;            // I A: $19
    property CHANNEL_IN_VOICE_DNLINK : Integer read _GetCHANNEL_IN_VOICE_DNLINK;// I A: $19
    property CHANNEL_IN_VOICE_UPLINK : Integer read _GetCHANNEL_IN_VOICE_UPLINK;// I A: $19
    property CHANNEL_IN_X_AXIS : Integer read _GetCHANNEL_IN_X_AXIS;            // I A: $19
    property CHANNEL_IN_Y_AXIS : Integer read _GetCHANNEL_IN_Y_AXIS;            // I A: $19
    property CHANNEL_IN_Z_AXIS : Integer read _GetCHANNEL_IN_Z_AXIS;            // I A: $19
    property CHANNEL_OUT_5POINT1 : Integer read _GetCHANNEL_OUT_5POINT1;        // I A: $19
    property CHANNEL_OUT_7POINT1 : Integer read _GetCHANNEL_OUT_7POINT1;        // I A: $19
    property CHANNEL_OUT_7POINT1_SURROUND : Integer read _GetCHANNEL_OUT_7POINT1_SURROUND;// I A: $19
    property CHANNEL_OUT_BACK_CENTER : Integer read _GetCHANNEL_OUT_BACK_CENTER;// I A: $19
    property CHANNEL_OUT_BACK_LEFT : Integer read _GetCHANNEL_OUT_BACK_LEFT;    // I A: $19
    property CHANNEL_OUT_BACK_RIGHT : Integer read _GetCHANNEL_OUT_BACK_RIGHT;  // I A: $19
    property CHANNEL_OUT_DEFAULT : Integer read _GetCHANNEL_OUT_DEFAULT;        // I A: $19
    property CHANNEL_OUT_FRONT_CENTER : Integer read _GetCHANNEL_OUT_FRONT_CENTER;// I A: $19
    property CHANNEL_OUT_FRONT_LEFT : Integer read _GetCHANNEL_OUT_FRONT_LEFT;  // I A: $19
    property CHANNEL_OUT_FRONT_LEFT_OF_CENTER : Integer read _GetCHANNEL_OUT_FRONT_LEFT_OF_CENTER;// I A: $19
    property CHANNEL_OUT_FRONT_RIGHT : Integer read _GetCHANNEL_OUT_FRONT_RIGHT;// I A: $19
    property CHANNEL_OUT_FRONT_RIGHT_OF_CENTER : Integer read _GetCHANNEL_OUT_FRONT_RIGHT_OF_CENTER;// I A: $19
    property CHANNEL_OUT_LOW_FREQUENCY : Integer read _GetCHANNEL_OUT_LOW_FREQUENCY;// I A: $19
    property CHANNEL_OUT_MONO : Integer read _GetCHANNEL_OUT_MONO;              // I A: $19
    property CHANNEL_OUT_QUAD : Integer read _GetCHANNEL_OUT_QUAD;              // I A: $19
    property CHANNEL_OUT_SIDE_LEFT : Integer read _GetCHANNEL_OUT_SIDE_LEFT;    // I A: $19
    property CHANNEL_OUT_SIDE_RIGHT : Integer read _GetCHANNEL_OUT_SIDE_RIGHT;  // I A: $19
    property CHANNEL_OUT_STEREO : Integer read _GetCHANNEL_OUT_STEREO;          // I A: $19
    property CHANNEL_OUT_SURROUND : Integer read _GetCHANNEL_OUT_SURROUND;      // I A: $19
    property CREATOR : JParcelable_Creator read _GetCREATOR;                    // Landroid/os/Parcelable$Creator; A: $19
    property ENCODING_AC3 : Integer read _GetENCODING_AC3;                      // I A: $19
    property ENCODING_DEFAULT : Integer read _GetENCODING_DEFAULT;              // I A: $19
    property ENCODING_DTS : Integer read _GetENCODING_DTS;                      // I A: $19
    property ENCODING_DTS_HD : Integer read _GetENCODING_DTS_HD;                // I A: $19
    property ENCODING_E_AC3 : Integer read _GetENCODING_E_AC3;                  // I A: $19
    property ENCODING_IEC61937 : Integer read _GetENCODING_IEC61937;            // I A: $19
    property ENCODING_INVALID : Integer read _GetENCODING_INVALID;              // I A: $19
    property ENCODING_PCM_16BIT : Integer read _GetENCODING_PCM_16BIT;          // I A: $19
    property ENCODING_PCM_8BIT : Integer read _GetENCODING_PCM_8BIT;            // I A: $19
    property ENCODING_PCM_FLOAT : Integer read _GetENCODING_PCM_FLOAT;          // I A: $19
    property SAMPLE_RATE_UNSPECIFIED : Integer read _GetSAMPLE_RATE_UNSPECIFIED;// I A: $19
  end;

  [JavaSignature('android/media/AudioFormat$Builder')]
  JAudioFormat = interface(JObject)
    ['{1AB4BD79-3710-45F0-9D32-2DE31B5C7AFF}']
    function describeContents : Integer; cdecl;                                 // ()I A: $1
    function equals(o : JObject) : boolean; cdecl;                              // (Ljava/lang/Object;)Z A: $1
    function getChannelCount : Integer; cdecl;                                  // ()I A: $1
    function getChannelIndexMask : Integer; cdecl;                              // ()I A: $1
    function getChannelMask : Integer; cdecl;                                   // ()I A: $1
    function getEncoding : Integer; cdecl;                                      // ()I A: $1
    function getSampleRate : Integer; cdecl;                                    // ()I A: $1
    function hashCode : Integer; cdecl;                                         // ()I A: $1
    function toString : JString; cdecl;                                         // ()Ljava/lang/String; A: $1
    procedure writeToParcel(dest : JParcel; flags : Integer) ; cdecl;           // (Landroid/os/Parcel;I)V A: $1
  end;

  TJAudioFormat = class(TJavaGenericImport<JAudioFormatClass, JAudioFormat>)
  end;

const
  TJAudioFormatCHANNEL_CONFIGURATION_DEFAULT = 1;
  TJAudioFormatCHANNEL_CONFIGURATION_INVALID = 0;
  TJAudioFormatCHANNEL_CONFIGURATION_MONO = 2;
  TJAudioFormatCHANNEL_CONFIGURATION_STEREO = 3;
  TJAudioFormatCHANNEL_INVALID = 0;
  TJAudioFormatCHANNEL_IN_BACK = 32;
  TJAudioFormatCHANNEL_IN_BACK_PROCESSED = 512;
  TJAudioFormatCHANNEL_IN_DEFAULT = 1;
  TJAudioFormatCHANNEL_IN_FRONT = 16;
  TJAudioFormatCHANNEL_IN_FRONT_PROCESSED = 256;
  TJAudioFormatCHANNEL_IN_LEFT = 4;
  TJAudioFormatCHANNEL_IN_LEFT_PROCESSED = 64;
  TJAudioFormatCHANNEL_IN_MONO = 16;
  TJAudioFormatCHANNEL_IN_PRESSURE = 1024;
  TJAudioFormatCHANNEL_IN_RIGHT = 8;
  TJAudioFormatCHANNEL_IN_RIGHT_PROCESSED = 128;
  TJAudioFormatCHANNEL_IN_STEREO = 12;
  TJAudioFormatCHANNEL_IN_VOICE_DNLINK = 32768;
  TJAudioFormatCHANNEL_IN_VOICE_UPLINK = 16384;
  TJAudioFormatCHANNEL_IN_X_AXIS = 2048;
  TJAudioFormatCHANNEL_IN_Y_AXIS = 4096;
  TJAudioFormatCHANNEL_IN_Z_AXIS = 8192;
  TJAudioFormatCHANNEL_OUT_5POINT1 = 252;
  TJAudioFormatCHANNEL_OUT_7POINT1 = 1020;
  TJAudioFormatCHANNEL_OUT_7POINT1_SURROUND = 6396;
  TJAudioFormatCHANNEL_OUT_BACK_CENTER = 1024;
  TJAudioFormatCHANNEL_OUT_BACK_LEFT = 64;
  TJAudioFormatCHANNEL_OUT_BACK_RIGHT = 128;
  TJAudioFormatCHANNEL_OUT_DEFAULT = 1;
  TJAudioFormatCHANNEL_OUT_FRONT_CENTER = 16;
  TJAudioFormatCHANNEL_OUT_FRONT_LEFT = 4;
  TJAudioFormatCHANNEL_OUT_FRONT_LEFT_OF_CENTER = 256;
  TJAudioFormatCHANNEL_OUT_FRONT_RIGHT = 8;
  TJAudioFormatCHANNEL_OUT_FRONT_RIGHT_OF_CENTER = 512;
  TJAudioFormatCHANNEL_OUT_LOW_FREQUENCY = 32;
  TJAudioFormatCHANNEL_OUT_MONO = 4;
  TJAudioFormatCHANNEL_OUT_QUAD = 204;
  TJAudioFormatCHANNEL_OUT_SIDE_LEFT = 2048;
  TJAudioFormatCHANNEL_OUT_SIDE_RIGHT = 4096;
  TJAudioFormatCHANNEL_OUT_STEREO = 12;
  TJAudioFormatCHANNEL_OUT_SURROUND = 1052;
  TJAudioFormatENCODING_AC3 = 5;
  TJAudioFormatENCODING_DEFAULT = 1;
  TJAudioFormatENCODING_DTS = 7;
  TJAudioFormatENCODING_DTS_HD = 8;
  TJAudioFormatENCODING_E_AC3 = 6;
  TJAudioFormatENCODING_IEC61937 = 13;
  TJAudioFormatENCODING_INVALID = 0;
  TJAudioFormatENCODING_PCM_16BIT = 2;
  TJAudioFormatENCODING_PCM_8BIT = 3;
  TJAudioFormatENCODING_PCM_FLOAT = 4;
  TJAudioFormatSAMPLE_RATE_UNSPECIFIED = 0;

implementation

end.
