//
// Generated by JavaToPas v1.5 20180804 - 082457
////////////////////////////////////////////////////////////////////////////////
unit android.renderscript.Matrix3f;

interface

uses
  AndroidAPI.JNIBridge,
  Androidapi.JNI.JavaTypes;

type
  JMatrix3f = interface;

  JMatrix3fClass = interface(JObjectClass)
    ['{D3F30D58-B0C2-4E3E-A1B9-CE7DE4B518E0}']
    function get(x : Integer; y : Integer) : Single; cdecl;                     // (II)F A: $1
    function getArray : TJavaArray<Single>; cdecl;                              // ()[F A: $1
    function init : JMatrix3f; cdecl; overload;                                 // ()V A: $1
    function init(dataArray : TJavaArray<Single>) : JMatrix3f; cdecl; overload; // ([F)V A: $1
    procedure &set(x : Integer; y : Integer; v : Single) ; cdecl;               // (IIF)V A: $1
    procedure load(src : JMatrix3f) ; cdecl;                                    // (Landroid/renderscript/Matrix3f;)V A: $1
    procedure loadIdentity ; cdecl;                                             // ()V A: $1
    procedure loadMultiply(lhs : JMatrix3f; rhs : JMatrix3f) ; cdecl;           // (Landroid/renderscript/Matrix3f;Landroid/renderscript/Matrix3f;)V A: $1
    procedure loadRotate(rot : Single) ; cdecl; overload;                       // (F)V A: $1
    procedure loadRotate(rot : Single; x : Single; y : Single; z : Single) ; cdecl; overload;// (FFFF)V A: $1
    procedure loadScale(x : Single; y : Single) ; cdecl; overload;              // (FF)V A: $1
    procedure loadScale(x : Single; y : Single; z : Single) ; cdecl; overload;  // (FFF)V A: $1
    procedure loadTranslate(x : Single; y : Single) ; cdecl;                    // (FF)V A: $1
    procedure multiply(rhs : JMatrix3f) ; cdecl;                                // (Landroid/renderscript/Matrix3f;)V A: $1
    procedure rotate(rot : Single) ; cdecl; overload;                           // (F)V A: $1
    procedure rotate(rot : Single; x : Single; y : Single; z : Single) ; cdecl; overload;// (FFFF)V A: $1
    procedure scale(x : Single; y : Single) ; cdecl; overload;                  // (FF)V A: $1
    procedure scale(x : Single; y : Single; z : Single) ; cdecl; overload;      // (FFF)V A: $1
    procedure translate(x : Single; y : Single) ; cdecl;                        // (FF)V A: $1
    procedure transpose ; cdecl;                                                // ()V A: $1
  end;

  [JavaSignature('android/renderscript/Matrix3f')]
  JMatrix3f = interface(JObject)
    ['{A51FC184-0195-46DC-8081-53D1919A3445}']
    function get(x : Integer; y : Integer) : Single; cdecl;                     // (II)F A: $1
    function getArray : TJavaArray<Single>; cdecl;                              // ()[F A: $1
    procedure &set(x : Integer; y : Integer; v : Single) ; cdecl;               // (IIF)V A: $1
    procedure load(src : JMatrix3f) ; cdecl;                                    // (Landroid/renderscript/Matrix3f;)V A: $1
    procedure loadIdentity ; cdecl;                                             // ()V A: $1
    procedure loadMultiply(lhs : JMatrix3f; rhs : JMatrix3f) ; cdecl;           // (Landroid/renderscript/Matrix3f;Landroid/renderscript/Matrix3f;)V A: $1
    procedure loadRotate(rot : Single) ; cdecl; overload;                       // (F)V A: $1
    procedure loadRotate(rot : Single; x : Single; y : Single; z : Single) ; cdecl; overload;// (FFFF)V A: $1
    procedure loadScale(x : Single; y : Single) ; cdecl; overload;              // (FF)V A: $1
    procedure loadScale(x : Single; y : Single; z : Single) ; cdecl; overload;  // (FFF)V A: $1
    procedure loadTranslate(x : Single; y : Single) ; cdecl;                    // (FF)V A: $1
    procedure multiply(rhs : JMatrix3f) ; cdecl;                                // (Landroid/renderscript/Matrix3f;)V A: $1
    procedure rotate(rot : Single) ; cdecl; overload;                           // (F)V A: $1
    procedure rotate(rot : Single; x : Single; y : Single; z : Single) ; cdecl; overload;// (FFFF)V A: $1
    procedure scale(x : Single; y : Single) ; cdecl; overload;                  // (FF)V A: $1
    procedure scale(x : Single; y : Single; z : Single) ; cdecl; overload;      // (FFF)V A: $1
    procedure translate(x : Single; y : Single) ; cdecl;                        // (FF)V A: $1
    procedure transpose ; cdecl;                                                // ()V A: $1
  end;

  TJMatrix3f = class(TJavaGenericImport<JMatrix3fClass, JMatrix3f>)
  end;

implementation

end.
