//
// Generated by JavaToPas v1.5 20180804 - 082524
////////////////////////////////////////////////////////////////////////////////
unit android.telephony.TelephonyManager;

interface

uses
  AndroidAPI.JNIBridge,
  Androidapi.JNI.JavaTypes,
  android.telecom.PhoneAccountHandle,
  android.telephony.CellLocation,
  Androidapi.JNI.os,
  android.telephony.VisualVoicemailSmsFilterSettings,
  android.app.PendingIntent,
  android.telephony.PhoneStateListener,
  android.telephony.IccOpenLogicalChannelResponse,
  android.telephony.ServiceState,
  android.net.Uri;

type
  JTelephonyManager_UssdResponseCallback = interface; // merged
  JTelephonyManager = interface;

  JTelephonyManagerClass = interface(JObjectClass)
    ['{37ACA782-1C72-4CA7-8745-61676B74B150}']
    function _GetACTION_CONFIGURE_VOICEMAIL : JString; cdecl;                   //  A: $19
    function _GetACTION_PHONE_STATE_CHANGED : JString; cdecl;                   //  A: $19
    function _GetACTION_RESPOND_VIA_MESSAGE : JString; cdecl;                   //  A: $19
    function _GetACTION_SHOW_VOICEMAIL_NOTIFICATION : JString; cdecl;           //  A: $19
    function _GetAPPTYPE_CSIM : Integer; cdecl;                                 //  A: $19
    function _GetAPPTYPE_ISIM : Integer; cdecl;                                 //  A: $19
    function _GetAPPTYPE_RUIM : Integer; cdecl;                                 //  A: $19
    function _GetAPPTYPE_SIM : Integer; cdecl;                                  //  A: $19
    function _GetAPPTYPE_USIM : Integer; cdecl;                                 //  A: $19
    function _GetAUTHTYPE_EAP_AKA : Integer; cdecl;                             //  A: $19
    function _GetAUTHTYPE_EAP_SIM : Integer; cdecl;                             //  A: $19
    function _GetCALL_STATE_IDLE : Integer; cdecl;                              //  A: $19
    function _GetCALL_STATE_OFFHOOK : Integer; cdecl;                           //  A: $19
    function _GetCALL_STATE_RINGING : Integer; cdecl;                           //  A: $19
    function _GetDATA_ACTIVITY_DORMANT : Integer; cdecl;                        //  A: $19
    function _GetDATA_ACTIVITY_IN : Integer; cdecl;                             //  A: $19
    function _GetDATA_ACTIVITY_INOUT : Integer; cdecl;                          //  A: $19
    function _GetDATA_ACTIVITY_NONE : Integer; cdecl;                           //  A: $19
    function _GetDATA_ACTIVITY_OUT : Integer; cdecl;                            //  A: $19
    function _GetDATA_CONNECTED : Integer; cdecl;                               //  A: $19
    function _GetDATA_CONNECTING : Integer; cdecl;                              //  A: $19
    function _GetDATA_DISCONNECTED : Integer; cdecl;                            //  A: $19
    function _GetDATA_SUSPENDED : Integer; cdecl;                               //  A: $19
    function _GetEXTRA_CALL_VOICEMAIL_INTENT : JString; cdecl;                  //  A: $19
    function _GetEXTRA_HIDE_PUBLIC_SETTINGS : JString; cdecl;                   //  A: $19
    function _GetEXTRA_INCOMING_NUMBER : JString; cdecl;                        //  A: $19
    function _GetEXTRA_IS_REFRESH : JString; cdecl;                             //  A: $19
    function _GetEXTRA_LAUNCH_VOICEMAIL_SETTINGS_INTENT : JString; cdecl;       //  A: $19
    function _GetEXTRA_NOTIFICATION_COUNT : JString; cdecl;                     //  A: $19
    function _GetEXTRA_PHONE_ACCOUNT_HANDLE : JString; cdecl;                   //  A: $19
    function _GetEXTRA_STATE : JString; cdecl;                                  //  A: $19
    function _GetEXTRA_STATE_IDLE : JString; cdecl;                             //  A: $19
    function _GetEXTRA_STATE_OFFHOOK : JString; cdecl;                          //  A: $19
    function _GetEXTRA_STATE_RINGING : JString; cdecl;                          //  A: $19
    function _GetEXTRA_VOICEMAIL_NUMBER : JString; cdecl;                       //  A: $19
    function _GetMETADATA_HIDE_VOICEMAIL_SETTINGS_MENU : JString; cdecl;        //  A: $19
    function _GetNETWORK_TYPE_1xRTT : Integer; cdecl;                           //  A: $19
    function _GetNETWORK_TYPE_CDMA : Integer; cdecl;                            //  A: $19
    function _GetNETWORK_TYPE_EDGE : Integer; cdecl;                            //  A: $19
    function _GetNETWORK_TYPE_EHRPD : Integer; cdecl;                           //  A: $19
    function _GetNETWORK_TYPE_EVDO_0 : Integer; cdecl;                          //  A: $19
    function _GetNETWORK_TYPE_EVDO_A : Integer; cdecl;                          //  A: $19
    function _GetNETWORK_TYPE_EVDO_B : Integer; cdecl;                          //  A: $19
    function _GetNETWORK_TYPE_GPRS : Integer; cdecl;                            //  A: $19
    function _GetNETWORK_TYPE_GSM : Integer; cdecl;                             //  A: $19
    function _GetNETWORK_TYPE_HSDPA : Integer; cdecl;                           //  A: $19
    function _GetNETWORK_TYPE_HSPA : Integer; cdecl;                            //  A: $19
    function _GetNETWORK_TYPE_HSPAP : Integer; cdecl;                           //  A: $19
    function _GetNETWORK_TYPE_HSUPA : Integer; cdecl;                           //  A: $19
    function _GetNETWORK_TYPE_IDEN : Integer; cdecl;                            //  A: $19
    function _GetNETWORK_TYPE_IWLAN : Integer; cdecl;                           //  A: $19
    function _GetNETWORK_TYPE_LTE : Integer; cdecl;                             //  A: $19
    function _GetNETWORK_TYPE_TD_SCDMA : Integer; cdecl;                        //  A: $19
    function _GetNETWORK_TYPE_UMTS : Integer; cdecl;                            //  A: $19
    function _GetNETWORK_TYPE_UNKNOWN : Integer; cdecl;                         //  A: $19
    function _GetPHONE_TYPE_CDMA : Integer; cdecl;                              //  A: $19
    function _GetPHONE_TYPE_GSM : Integer; cdecl;                               //  A: $19
    function _GetPHONE_TYPE_NONE : Integer; cdecl;                              //  A: $19
    function _GetPHONE_TYPE_SIP : Integer; cdecl;                               //  A: $19
    function _GetSIM_STATE_ABSENT : Integer; cdecl;                             //  A: $19
    function _GetSIM_STATE_CARD_IO_ERROR : Integer; cdecl;                      //  A: $19
    function _GetSIM_STATE_CARD_RESTRICTED : Integer; cdecl;                    //  A: $19
    function _GetSIM_STATE_NETWORK_LOCKED : Integer; cdecl;                     //  A: $19
    function _GetSIM_STATE_NOT_READY : Integer; cdecl;                          //  A: $19
    function _GetSIM_STATE_PERM_DISABLED : Integer; cdecl;                      //  A: $19
    function _GetSIM_STATE_PIN_REQUIRED : Integer; cdecl;                       //  A: $19
    function _GetSIM_STATE_PUK_REQUIRED : Integer; cdecl;                       //  A: $19
    function _GetSIM_STATE_READY : Integer; cdecl;                              //  A: $19
    function _GetSIM_STATE_UNKNOWN : Integer; cdecl;                            //  A: $19
    function _GetUSSD_ERROR_SERVICE_UNAVAIL : Integer; cdecl;                   //  A: $19
    function _GetUSSD_RETURN_FAILURE : Integer; cdecl;                          //  A: $19
    function _GetVVM_TYPE_CVVM : JString; cdecl;                                //  A: $19
    function _GetVVM_TYPE_OMTP : JString; cdecl;                                //  A: $19
    function canChangeDtmfToneLength : boolean; cdecl;                          // ()Z A: $1
    function createForPhoneAccountHandle(phoneAccountHandle : JPhoneAccountHandle) : JTelephonyManager; cdecl;// (Landroid/telecom/PhoneAccountHandle;)Landroid/telephony/TelephonyManager; A: $1
    function createForSubscriptionId(subId : Integer) : JTelephonyManager; cdecl;// (I)Landroid/telephony/TelephonyManager; A: $1
    function getAllCellInfo : JList; cdecl;                                     // ()Ljava/util/List; A: $1
    function getCallState : Integer; cdecl;                                     // ()I A: $1
    function getCarrierConfig : JPersistableBundle; cdecl;                      // ()Landroid/os/PersistableBundle; A: $1
    function getCellLocation : JCellLocation; deprecated; cdecl;                // ()Landroid/telephony/CellLocation; A: $1
    function getDataActivity : Integer; cdecl;                                  // ()I A: $1
    function getDataNetworkType : Integer; cdecl;                               // ()I A: $1
    function getDataState : Integer; cdecl;                                     // ()I A: $1
    function getDeviceId : JString; deprecated; cdecl; overload;                // ()Ljava/lang/String; A: $1
    function getDeviceId(slotIndex : Integer) : JString; deprecated; cdecl; overload;// (I)Ljava/lang/String; A: $1
    function getDeviceSoftwareVersion : JString; cdecl;                         // ()Ljava/lang/String; A: $1
    function getForbiddenPlmns : TJavaArray<JString>; cdecl;                    // ()[Ljava/lang/String; A: $1
    function getGroupIdLevel1 : JString; cdecl;                                 // ()Ljava/lang/String; A: $1
    function getIccAuthentication(appType : Integer; authType : Integer; data : JString) : JString; cdecl;// (IILjava/lang/String;)Ljava/lang/String; A: $1
    function getImei : JString; cdecl; overload;                                // ()Ljava/lang/String; A: $1
    function getImei(slotIndex : Integer) : JString; cdecl; overload;           // (I)Ljava/lang/String; A: $1
    function getLine1Number : JString; cdecl;                                   // ()Ljava/lang/String; A: $1
    function getMeid : JString; cdecl; overload;                                // ()Ljava/lang/String; A: $1
    function getMeid(slotIndex : Integer) : JString; cdecl; overload;           // (I)Ljava/lang/String; A: $1
    function getMmsUAProfUrl : JString; cdecl;                                  // ()Ljava/lang/String; A: $1
    function getMmsUserAgent : JString; cdecl;                                  // ()Ljava/lang/String; A: $1
    function getNeighboringCellInfo : JList; deprecated; cdecl;                 // ()Ljava/util/List; A: $1
    function getNetworkCountryIso : JString; cdecl;                             // ()Ljava/lang/String; A: $1
    function getNetworkOperator : JString; cdecl;                               // ()Ljava/lang/String; A: $1
    function getNetworkOperatorName : JString; cdecl;                           // ()Ljava/lang/String; A: $1
    function getNetworkSpecifier : JString; cdecl;                              // ()Ljava/lang/String; A: $1
    function getNetworkType : Integer; cdecl;                                   // ()I A: $1
    function getPhoneCount : Integer; cdecl;                                    // ()I A: $1
    function getPhoneType : Integer; cdecl;                                     // ()I A: $1
    function getServiceState : JServiceState; cdecl;                            // ()Landroid/telephony/ServiceState; A: $1
    function getSimCountryIso : JString; cdecl;                                 // ()Ljava/lang/String; A: $1
    function getSimOperator : JString; cdecl;                                   // ()Ljava/lang/String; A: $1
    function getSimOperatorName : JString; cdecl;                               // ()Ljava/lang/String; A: $1
    function getSimSerialNumber : JString; cdecl;                               // ()Ljava/lang/String; A: $1
    function getSimState : Integer; cdecl; overload;                            // ()I A: $1
    function getSimState(slotIndex : Integer) : Integer; cdecl; overload;       // (I)I A: $1
    function getSubscriberId : JString; cdecl;                                  // ()Ljava/lang/String; A: $1
    function getVisualVoicemailPackageName : JString; cdecl;                    // ()Ljava/lang/String; A: $1
    function getVoiceMailAlphaTag : JString; cdecl;                             // ()Ljava/lang/String; A: $1
    function getVoiceMailNumber : JString; cdecl;                               // ()Ljava/lang/String; A: $1
    function getVoiceNetworkType : Integer; cdecl;                              // ()I A: $1
    function getVoicemailRingtoneUri(accountHandle : JPhoneAccountHandle) : JUri; cdecl;// (Landroid/telecom/PhoneAccountHandle;)Landroid/net/Uri; A: $1
    function hasCarrierPrivileges : boolean; cdecl;                             // ()Z A: $1
    function hasIccCard : boolean; cdecl;                                       // ()Z A: $1
    function iccCloseLogicalChannel(channel : Integer) : boolean; cdecl;        // (I)Z A: $1
    function iccExchangeSimIO(fileID : Integer; command : Integer; p1 : Integer; p2 : Integer; p3 : Integer; filePath : JString) : TJavaArray<Byte>; cdecl;// (IIIIILjava/lang/String;)[B A: $1
    function iccOpenLogicalChannel(AID : JString) : JIccOpenLogicalChannelResponse; deprecated; cdecl; overload;// (Ljava/lang/String;)Landroid/telephony/IccOpenLogicalChannelResponse; A: $1
    function iccOpenLogicalChannel(AID : JString; p2 : Integer) : JIccOpenLogicalChannelResponse; cdecl; overload;// (Ljava/lang/String;I)Landroid/telephony/IccOpenLogicalChannelResponse; A: $1
    function iccTransmitApduBasicChannel(cla : Integer; instruction : Integer; p1 : Integer; p2 : Integer; p3 : Integer; data : JString) : JString; cdecl;// (IIIIILjava/lang/String;)Ljava/lang/String; A: $1
    function iccTransmitApduLogicalChannel(channel : Integer; cla : Integer; instruction : Integer; p1 : Integer; p2 : Integer; p3 : Integer; data : JString) : JString; cdecl;// (IIIIIILjava/lang/String;)Ljava/lang/String; A: $1
    function isConcurrentVoiceAndDataSupported : boolean; cdecl;                // ()Z A: $1
    function isDataEnabled : boolean; cdecl;                                    // ()Z A: $1
    function isHearingAidCompatibilitySupported : boolean; cdecl;               // ()Z A: $1
    function isNetworkRoaming : boolean; cdecl;                                 // ()Z A: $1
    function isSmsCapable : boolean; cdecl;                                     // ()Z A: $1
    function isTtyModeSupported : boolean; cdecl;                               // ()Z A: $1
    function isVoiceCapable : boolean; cdecl;                                   // ()Z A: $1
    function isVoicemailVibrationEnabled(accountHandle : JPhoneAccountHandle) : boolean; cdecl;// (Landroid/telecom/PhoneAccountHandle;)Z A: $1
    function isWorldPhone : boolean; cdecl;                                     // ()Z A: $1
    function sendEnvelopeWithStatus(content : JString) : JString; cdecl;        // (Ljava/lang/String;)Ljava/lang/String; A: $1
    function setLine1NumberForDisplay(alphaTag : JString; number : JString) : boolean; cdecl;// (Ljava/lang/String;Ljava/lang/String;)Z A: $1
    function setOperatorBrandOverride(brand : JString) : boolean; cdecl;        // (Ljava/lang/String;)Z A: $1
    function setPreferredNetworkTypeToGlobal : boolean; cdecl;                  // ()Z A: $1
    function setVoiceMailNumber(alphaTag : JString; number : JString) : boolean; cdecl;// (Ljava/lang/String;Ljava/lang/String;)Z A: $1
    procedure listen(listener : JPhoneStateListener; events : Integer) ; cdecl; // (Landroid/telephony/PhoneStateListener;I)V A: $1
    procedure sendDialerSpecialCode(inputCode : JString) ; cdecl;               // (Ljava/lang/String;)V A: $1
    procedure sendUssdRequest(ussdRequest : JString; callback : JTelephonyManager_UssdResponseCallback; handler : JHandler) ; cdecl;// (Ljava/lang/String;Landroid/telephony/TelephonyManager$UssdResponseCallback;Landroid/os/Handler;)V A: $1
    procedure sendVisualVoicemailSms(number : JString; port : Integer; text : JString; sentIntent : JPendingIntent) ; cdecl;// (Ljava/lang/String;ILjava/lang/String;Landroid/app/PendingIntent;)V A: $1
    procedure setDataEnabled(enable : boolean) ; cdecl;                         // (Z)V A: $1
    procedure setVisualVoicemailSmsFilterSettings(settings : JVisualVoicemailSmsFilterSettings) ; cdecl;// (Landroid/telephony/VisualVoicemailSmsFilterSettings;)V A: $1
    procedure setVoicemailRingtoneUri(phoneAccountHandle : JPhoneAccountHandle; uri : JUri) ; cdecl;// (Landroid/telecom/PhoneAccountHandle;Landroid/net/Uri;)V A: $1
    procedure setVoicemailVibrationEnabled(phoneAccountHandle : JPhoneAccountHandle; enabled : boolean) ; cdecl;// (Landroid/telecom/PhoneAccountHandle;Z)V A: $1
    property ACTION_CONFIGURE_VOICEMAIL : JString read _GetACTION_CONFIGURE_VOICEMAIL;// Ljava/lang/String; A: $19
    property ACTION_PHONE_STATE_CHANGED : JString read _GetACTION_PHONE_STATE_CHANGED;// Ljava/lang/String; A: $19
    property ACTION_RESPOND_VIA_MESSAGE : JString read _GetACTION_RESPOND_VIA_MESSAGE;// Ljava/lang/String; A: $19
    property ACTION_SHOW_VOICEMAIL_NOTIFICATION : JString read _GetACTION_SHOW_VOICEMAIL_NOTIFICATION;// Ljava/lang/String; A: $19
    property APPTYPE_CSIM : Integer read _GetAPPTYPE_CSIM;                      // I A: $19
    property APPTYPE_ISIM : Integer read _GetAPPTYPE_ISIM;                      // I A: $19
    property APPTYPE_RUIM : Integer read _GetAPPTYPE_RUIM;                      // I A: $19
    property APPTYPE_SIM : Integer read _GetAPPTYPE_SIM;                        // I A: $19
    property APPTYPE_USIM : Integer read _GetAPPTYPE_USIM;                      // I A: $19
    property AUTHTYPE_EAP_AKA : Integer read _GetAUTHTYPE_EAP_AKA;              // I A: $19
    property AUTHTYPE_EAP_SIM : Integer read _GetAUTHTYPE_EAP_SIM;              // I A: $19
    property CALL_STATE_IDLE : Integer read _GetCALL_STATE_IDLE;                // I A: $19
    property CALL_STATE_OFFHOOK : Integer read _GetCALL_STATE_OFFHOOK;          // I A: $19
    property CALL_STATE_RINGING : Integer read _GetCALL_STATE_RINGING;          // I A: $19
    property DATA_ACTIVITY_DORMANT : Integer read _GetDATA_ACTIVITY_DORMANT;    // I A: $19
    property DATA_ACTIVITY_IN : Integer read _GetDATA_ACTIVITY_IN;              // I A: $19
    property DATA_ACTIVITY_INOUT : Integer read _GetDATA_ACTIVITY_INOUT;        // I A: $19
    property DATA_ACTIVITY_NONE : Integer read _GetDATA_ACTIVITY_NONE;          // I A: $19
    property DATA_ACTIVITY_OUT : Integer read _GetDATA_ACTIVITY_OUT;            // I A: $19
    property DATA_CONNECTED : Integer read _GetDATA_CONNECTED;                  // I A: $19
    property DATA_CONNECTING : Integer read _GetDATA_CONNECTING;                // I A: $19
    property DATA_DISCONNECTED : Integer read _GetDATA_DISCONNECTED;            // I A: $19
    property DATA_SUSPENDED : Integer read _GetDATA_SUSPENDED;                  // I A: $19
    property EXTRA_CALL_VOICEMAIL_INTENT : JString read _GetEXTRA_CALL_VOICEMAIL_INTENT;// Ljava/lang/String; A: $19
    property EXTRA_HIDE_PUBLIC_SETTINGS : JString read _GetEXTRA_HIDE_PUBLIC_SETTINGS;// Ljava/lang/String; A: $19
    property EXTRA_INCOMING_NUMBER : JString read _GetEXTRA_INCOMING_NUMBER;    // Ljava/lang/String; A: $19
    property EXTRA_IS_REFRESH : JString read _GetEXTRA_IS_REFRESH;              // Ljava/lang/String; A: $19
    property EXTRA_LAUNCH_VOICEMAIL_SETTINGS_INTENT : JString read _GetEXTRA_LAUNCH_VOICEMAIL_SETTINGS_INTENT;// Ljava/lang/String; A: $19
    property EXTRA_NOTIFICATION_COUNT : JString read _GetEXTRA_NOTIFICATION_COUNT;// Ljava/lang/String; A: $19
    property EXTRA_PHONE_ACCOUNT_HANDLE : JString read _GetEXTRA_PHONE_ACCOUNT_HANDLE;// Ljava/lang/String; A: $19
    property EXTRA_STATE : JString read _GetEXTRA_STATE;                        // Ljava/lang/String; A: $19
    property EXTRA_STATE_IDLE : JString read _GetEXTRA_STATE_IDLE;              // Ljava/lang/String; A: $19
    property EXTRA_STATE_OFFHOOK : JString read _GetEXTRA_STATE_OFFHOOK;        // Ljava/lang/String; A: $19
    property EXTRA_STATE_RINGING : JString read _GetEXTRA_STATE_RINGING;        // Ljava/lang/String; A: $19
    property EXTRA_VOICEMAIL_NUMBER : JString read _GetEXTRA_VOICEMAIL_NUMBER;  // Ljava/lang/String; A: $19
    property METADATA_HIDE_VOICEMAIL_SETTINGS_MENU : JString read _GetMETADATA_HIDE_VOICEMAIL_SETTINGS_MENU;// Ljava/lang/String; A: $19
    property NETWORK_TYPE_1xRTT : Integer read _GetNETWORK_TYPE_1xRTT;          // I A: $19
    property NETWORK_TYPE_CDMA : Integer read _GetNETWORK_TYPE_CDMA;            // I A: $19
    property NETWORK_TYPE_EDGE : Integer read _GetNETWORK_TYPE_EDGE;            // I A: $19
    property NETWORK_TYPE_EHRPD : Integer read _GetNETWORK_TYPE_EHRPD;          // I A: $19
    property NETWORK_TYPE_EVDO_0 : Integer read _GetNETWORK_TYPE_EVDO_0;        // I A: $19
    property NETWORK_TYPE_EVDO_A : Integer read _GetNETWORK_TYPE_EVDO_A;        // I A: $19
    property NETWORK_TYPE_EVDO_B : Integer read _GetNETWORK_TYPE_EVDO_B;        // I A: $19
    property NETWORK_TYPE_GPRS : Integer read _GetNETWORK_TYPE_GPRS;            // I A: $19
    property NETWORK_TYPE_GSM : Integer read _GetNETWORK_TYPE_GSM;              // I A: $19
    property NETWORK_TYPE_HSDPA : Integer read _GetNETWORK_TYPE_HSDPA;          // I A: $19
    property NETWORK_TYPE_HSPA : Integer read _GetNETWORK_TYPE_HSPA;            // I A: $19
    property NETWORK_TYPE_HSPAP : Integer read _GetNETWORK_TYPE_HSPAP;          // I A: $19
    property NETWORK_TYPE_HSUPA : Integer read _GetNETWORK_TYPE_HSUPA;          // I A: $19
    property NETWORK_TYPE_IDEN : Integer read _GetNETWORK_TYPE_IDEN;            // I A: $19
    property NETWORK_TYPE_IWLAN : Integer read _GetNETWORK_TYPE_IWLAN;          // I A: $19
    property NETWORK_TYPE_LTE : Integer read _GetNETWORK_TYPE_LTE;              // I A: $19
    property NETWORK_TYPE_TD_SCDMA : Integer read _GetNETWORK_TYPE_TD_SCDMA;    // I A: $19
    property NETWORK_TYPE_UMTS : Integer read _GetNETWORK_TYPE_UMTS;            // I A: $19
    property NETWORK_TYPE_UNKNOWN : Integer read _GetNETWORK_TYPE_UNKNOWN;      // I A: $19
    property PHONE_TYPE_CDMA : Integer read _GetPHONE_TYPE_CDMA;                // I A: $19
    property PHONE_TYPE_GSM : Integer read _GetPHONE_TYPE_GSM;                  // I A: $19
    property PHONE_TYPE_NONE : Integer read _GetPHONE_TYPE_NONE;                // I A: $19
    property PHONE_TYPE_SIP : Integer read _GetPHONE_TYPE_SIP;                  // I A: $19
    property SIM_STATE_ABSENT : Integer read _GetSIM_STATE_ABSENT;              // I A: $19
    property SIM_STATE_CARD_IO_ERROR : Integer read _GetSIM_STATE_CARD_IO_ERROR;// I A: $19
    property SIM_STATE_CARD_RESTRICTED : Integer read _GetSIM_STATE_CARD_RESTRICTED;// I A: $19
    property SIM_STATE_NETWORK_LOCKED : Integer read _GetSIM_STATE_NETWORK_LOCKED;// I A: $19
    property SIM_STATE_NOT_READY : Integer read _GetSIM_STATE_NOT_READY;        // I A: $19
    property SIM_STATE_PERM_DISABLED : Integer read _GetSIM_STATE_PERM_DISABLED;// I A: $19
    property SIM_STATE_PIN_REQUIRED : Integer read _GetSIM_STATE_PIN_REQUIRED;  // I A: $19
    property SIM_STATE_PUK_REQUIRED : Integer read _GetSIM_STATE_PUK_REQUIRED;  // I A: $19
    property SIM_STATE_READY : Integer read _GetSIM_STATE_READY;                // I A: $19
    property SIM_STATE_UNKNOWN : Integer read _GetSIM_STATE_UNKNOWN;            // I A: $19
    property USSD_ERROR_SERVICE_UNAVAIL : Integer read _GetUSSD_ERROR_SERVICE_UNAVAIL;// I A: $19
    property USSD_RETURN_FAILURE : Integer read _GetUSSD_RETURN_FAILURE;        // I A: $19
    property VVM_TYPE_CVVM : JString read _GetVVM_TYPE_CVVM;                    // Ljava/lang/String; A: $19
    property VVM_TYPE_OMTP : JString read _GetVVM_TYPE_OMTP;                    // Ljava/lang/String; A: $19
  end;

  [JavaSignature('android/telephony/TelephonyManager$UssdResponseCallback')]
  JTelephonyManager = interface(JObject)
    ['{FF7EC85E-DF29-410A-8273-F49A6D87E028}']
    function canChangeDtmfToneLength : boolean; cdecl;                          // ()Z A: $1
    function createForPhoneAccountHandle(phoneAccountHandle : JPhoneAccountHandle) : JTelephonyManager; cdecl;// (Landroid/telecom/PhoneAccountHandle;)Landroid/telephony/TelephonyManager; A: $1
    function createForSubscriptionId(subId : Integer) : JTelephonyManager; cdecl;// (I)Landroid/telephony/TelephonyManager; A: $1
    function getAllCellInfo : JList; cdecl;                                     // ()Ljava/util/List; A: $1
    function getCallState : Integer; cdecl;                                     // ()I A: $1
    function getCarrierConfig : JPersistableBundle; cdecl;                      // ()Landroid/os/PersistableBundle; A: $1
    function getCellLocation : JCellLocation; deprecated; cdecl;                // ()Landroid/telephony/CellLocation; A: $1
    function getDataActivity : Integer; cdecl;                                  // ()I A: $1
    function getDataNetworkType : Integer; cdecl;                               // ()I A: $1
    function getDataState : Integer; cdecl;                                     // ()I A: $1
    function getDeviceId : JString; deprecated; cdecl; overload;                // ()Ljava/lang/String; A: $1
    function getDeviceId(slotIndex : Integer) : JString; deprecated; cdecl; overload;// (I)Ljava/lang/String; A: $1
    function getDeviceSoftwareVersion : JString; cdecl;                         // ()Ljava/lang/String; A: $1
    function getForbiddenPlmns : TJavaArray<JString>; cdecl;                    // ()[Ljava/lang/String; A: $1
    function getGroupIdLevel1 : JString; cdecl;                                 // ()Ljava/lang/String; A: $1
    function getIccAuthentication(appType : Integer; authType : Integer; data : JString) : JString; cdecl;// (IILjava/lang/String;)Ljava/lang/String; A: $1
    function getImei : JString; cdecl; overload;                                // ()Ljava/lang/String; A: $1
    function getImei(slotIndex : Integer) : JString; cdecl; overload;           // (I)Ljava/lang/String; A: $1
    function getLine1Number : JString; cdecl;                                   // ()Ljava/lang/String; A: $1
    function getMeid : JString; cdecl; overload;                                // ()Ljava/lang/String; A: $1
    function getMeid(slotIndex : Integer) : JString; cdecl; overload;           // (I)Ljava/lang/String; A: $1
    function getMmsUAProfUrl : JString; cdecl;                                  // ()Ljava/lang/String; A: $1
    function getMmsUserAgent : JString; cdecl;                                  // ()Ljava/lang/String; A: $1
    function getNeighboringCellInfo : JList; deprecated; cdecl;                 // ()Ljava/util/List; A: $1
    function getNetworkCountryIso : JString; cdecl;                             // ()Ljava/lang/String; A: $1
    function getNetworkOperator : JString; cdecl;                               // ()Ljava/lang/String; A: $1
    function getNetworkOperatorName : JString; cdecl;                           // ()Ljava/lang/String; A: $1
    function getNetworkSpecifier : JString; cdecl;                              // ()Ljava/lang/String; A: $1
    function getNetworkType : Integer; cdecl;                                   // ()I A: $1
    function getPhoneCount : Integer; cdecl;                                    // ()I A: $1
    function getPhoneType : Integer; cdecl;                                     // ()I A: $1
    function getServiceState : JServiceState; cdecl;                            // ()Landroid/telephony/ServiceState; A: $1
    function getSimCountryIso : JString; cdecl;                                 // ()Ljava/lang/String; A: $1
    function getSimOperator : JString; cdecl;                                   // ()Ljava/lang/String; A: $1
    function getSimOperatorName : JString; cdecl;                               // ()Ljava/lang/String; A: $1
    function getSimSerialNumber : JString; cdecl;                               // ()Ljava/lang/String; A: $1
    function getSimState : Integer; cdecl; overload;                            // ()I A: $1
    function getSimState(slotIndex : Integer) : Integer; cdecl; overload;       // (I)I A: $1
    function getSubscriberId : JString; cdecl;                                  // ()Ljava/lang/String; A: $1
    function getVisualVoicemailPackageName : JString; cdecl;                    // ()Ljava/lang/String; A: $1
    function getVoiceMailAlphaTag : JString; cdecl;                             // ()Ljava/lang/String; A: $1
    function getVoiceMailNumber : JString; cdecl;                               // ()Ljava/lang/String; A: $1
    function getVoiceNetworkType : Integer; cdecl;                              // ()I A: $1
    function getVoicemailRingtoneUri(accountHandle : JPhoneAccountHandle) : JUri; cdecl;// (Landroid/telecom/PhoneAccountHandle;)Landroid/net/Uri; A: $1
    function hasCarrierPrivileges : boolean; cdecl;                             // ()Z A: $1
    function hasIccCard : boolean; cdecl;                                       // ()Z A: $1
    function iccCloseLogicalChannel(channel : Integer) : boolean; cdecl;        // (I)Z A: $1
    function iccExchangeSimIO(fileID : Integer; command : Integer; p1 : Integer; p2 : Integer; p3 : Integer; filePath : JString) : TJavaArray<Byte>; cdecl;// (IIIIILjava/lang/String;)[B A: $1
    function iccOpenLogicalChannel(AID : JString) : JIccOpenLogicalChannelResponse; deprecated; cdecl; overload;// (Ljava/lang/String;)Landroid/telephony/IccOpenLogicalChannelResponse; A: $1
    function iccOpenLogicalChannel(AID : JString; p2 : Integer) : JIccOpenLogicalChannelResponse; cdecl; overload;// (Ljava/lang/String;I)Landroid/telephony/IccOpenLogicalChannelResponse; A: $1
    function iccTransmitApduBasicChannel(cla : Integer; instruction : Integer; p1 : Integer; p2 : Integer; p3 : Integer; data : JString) : JString; cdecl;// (IIIIILjava/lang/String;)Ljava/lang/String; A: $1
    function iccTransmitApduLogicalChannel(channel : Integer; cla : Integer; instruction : Integer; p1 : Integer; p2 : Integer; p3 : Integer; data : JString) : JString; cdecl;// (IIIIIILjava/lang/String;)Ljava/lang/String; A: $1
    function isConcurrentVoiceAndDataSupported : boolean; cdecl;                // ()Z A: $1
    function isDataEnabled : boolean; cdecl;                                    // ()Z A: $1
    function isHearingAidCompatibilitySupported : boolean; cdecl;               // ()Z A: $1
    function isNetworkRoaming : boolean; cdecl;                                 // ()Z A: $1
    function isSmsCapable : boolean; cdecl;                                     // ()Z A: $1
    function isTtyModeSupported : boolean; cdecl;                               // ()Z A: $1
    function isVoiceCapable : boolean; cdecl;                                   // ()Z A: $1
    function isVoicemailVibrationEnabled(accountHandle : JPhoneAccountHandle) : boolean; cdecl;// (Landroid/telecom/PhoneAccountHandle;)Z A: $1
    function isWorldPhone : boolean; cdecl;                                     // ()Z A: $1
    function sendEnvelopeWithStatus(content : JString) : JString; cdecl;        // (Ljava/lang/String;)Ljava/lang/String; A: $1
    function setLine1NumberForDisplay(alphaTag : JString; number : JString) : boolean; cdecl;// (Ljava/lang/String;Ljava/lang/String;)Z A: $1
    function setOperatorBrandOverride(brand : JString) : boolean; cdecl;        // (Ljava/lang/String;)Z A: $1
    function setPreferredNetworkTypeToGlobal : boolean; cdecl;                  // ()Z A: $1
    function setVoiceMailNumber(alphaTag : JString; number : JString) : boolean; cdecl;// (Ljava/lang/String;Ljava/lang/String;)Z A: $1
    procedure listen(listener : JPhoneStateListener; events : Integer) ; cdecl; // (Landroid/telephony/PhoneStateListener;I)V A: $1
    procedure sendDialerSpecialCode(inputCode : JString) ; cdecl;               // (Ljava/lang/String;)V A: $1
    procedure sendUssdRequest(ussdRequest : JString; callback : JTelephonyManager_UssdResponseCallback; handler : JHandler) ; cdecl;// (Ljava/lang/String;Landroid/telephony/TelephonyManager$UssdResponseCallback;Landroid/os/Handler;)V A: $1
    procedure sendVisualVoicemailSms(number : JString; port : Integer; text : JString; sentIntent : JPendingIntent) ; cdecl;// (Ljava/lang/String;ILjava/lang/String;Landroid/app/PendingIntent;)V A: $1
    procedure setDataEnabled(enable : boolean) ; cdecl;                         // (Z)V A: $1
    procedure setVisualVoicemailSmsFilterSettings(settings : JVisualVoicemailSmsFilterSettings) ; cdecl;// (Landroid/telephony/VisualVoicemailSmsFilterSettings;)V A: $1
    procedure setVoicemailRingtoneUri(phoneAccountHandle : JPhoneAccountHandle; uri : JUri) ; cdecl;// (Landroid/telecom/PhoneAccountHandle;Landroid/net/Uri;)V A: $1
    procedure setVoicemailVibrationEnabled(phoneAccountHandle : JPhoneAccountHandle; enabled : boolean) ; cdecl;// (Landroid/telecom/PhoneAccountHandle;Z)V A: $1
  end;

  TJTelephonyManager = class(TJavaGenericImport<JTelephonyManagerClass, JTelephonyManager>)
  end;

  // Merged from: .\android.telephony.TelephonyManager_UssdResponseCallback.pas
  JTelephonyManager_UssdResponseCallbackClass = interface(JObjectClass)
    ['{9C14F9FB-7A31-45BD-83A9-619C65BE2745}']
    function init : JTelephonyManager_UssdResponseCallback; cdecl;              // ()V A: $1
    procedure onReceiveUssdResponse(telephonyManager : JTelephonyManager; request : JString; response : JCharSequence) ; cdecl;// (Landroid/telephony/TelephonyManager;Ljava/lang/String;Ljava/lang/CharSequence;)V A: $1
    procedure onReceiveUssdResponseFailed(telephonyManager : JTelephonyManager; request : JString; failureCode : Integer) ; cdecl;// (Landroid/telephony/TelephonyManager;Ljava/lang/String;I)V A: $1
  end;

  [JavaSignature('android/telephony/TelephonyManager_UssdResponseCallback')]
  JTelephonyManager_UssdResponseCallback = interface(JObject)
    ['{78232C97-D537-44AC-8EFC-2481A3341DAA}']
    procedure onReceiveUssdResponse(telephonyManager : JTelephonyManager; request : JString; response : JCharSequence) ; cdecl;// (Landroid/telephony/TelephonyManager;Ljava/lang/String;Ljava/lang/CharSequence;)V A: $1
    procedure onReceiveUssdResponseFailed(telephonyManager : JTelephonyManager; request : JString; failureCode : Integer) ; cdecl;// (Landroid/telephony/TelephonyManager;Ljava/lang/String;I)V A: $1
  end;

  TJTelephonyManager_UssdResponseCallback = class(TJavaGenericImport<JTelephonyManager_UssdResponseCallbackClass, JTelephonyManager_UssdResponseCallback>)
  end;


const
  TJTelephonyManagerACTION_CONFIGURE_VOICEMAIL = 'android.telephony.action.CONFIGURE_VOICEMAIL';
  TJTelephonyManagerACTION_PHONE_STATE_CHANGED = 'android.intent.action.PHONE_STATE';
  TJTelephonyManagerACTION_RESPOND_VIA_MESSAGE = 'android.intent.action.RESPOND_VIA_MESSAGE';
  TJTelephonyManagerACTION_SHOW_VOICEMAIL_NOTIFICATION = 'android.telephony.action.SHOW_VOICEMAIL_NOTIFICATION';
  TJTelephonyManagerAPPTYPE_CSIM = 4;
  TJTelephonyManagerAPPTYPE_ISIM = 5;
  TJTelephonyManagerAPPTYPE_RUIM = 3;
  TJTelephonyManagerAPPTYPE_SIM = 1;
  TJTelephonyManagerAPPTYPE_USIM = 2;
  TJTelephonyManagerAUTHTYPE_EAP_AKA = 129;
  TJTelephonyManagerAUTHTYPE_EAP_SIM = 128;
  TJTelephonyManagerCALL_STATE_IDLE = 0;
  TJTelephonyManagerCALL_STATE_OFFHOOK = 2;
  TJTelephonyManagerCALL_STATE_RINGING = 1;
  TJTelephonyManagerDATA_ACTIVITY_DORMANT = 4;
  TJTelephonyManagerDATA_ACTIVITY_IN = 1;
  TJTelephonyManagerDATA_ACTIVITY_INOUT = 3;
  TJTelephonyManagerDATA_ACTIVITY_NONE = 0;
  TJTelephonyManagerDATA_ACTIVITY_OUT = 2;
  TJTelephonyManagerDATA_CONNECTED = 2;
  TJTelephonyManagerDATA_CONNECTING = 1;
  TJTelephonyManagerDATA_DISCONNECTED = 0;
  TJTelephonyManagerDATA_SUSPENDED = 3;
  TJTelephonyManagerEXTRA_CALL_VOICEMAIL_INTENT = 'android.telephony.extra.CALL_VOICEMAIL_INTENT';
  TJTelephonyManagerEXTRA_HIDE_PUBLIC_SETTINGS = 'android.telephony.extra.HIDE_PUBLIC_SETTINGS';
  TJTelephonyManagerEXTRA_INCOMING_NUMBER = 'incoming_number';
  TJTelephonyManagerEXTRA_IS_REFRESH = 'android.telephony.extra.IS_REFRESH';
  TJTelephonyManagerEXTRA_LAUNCH_VOICEMAIL_SETTINGS_INTENT = 'android.telephony.extra.LAUNCH_VOICEMAIL_SETTINGS_INTENT';
  TJTelephonyManagerEXTRA_NOTIFICATION_COUNT = 'android.telephony.extra.NOTIFICATION_COUNT';
  TJTelephonyManagerEXTRA_PHONE_ACCOUNT_HANDLE = 'android.telephony.extra.PHONE_ACCOUNT_HANDLE';
  TJTelephonyManagerEXTRA_STATE = 'state';
  TJTelephonyManagerEXTRA_VOICEMAIL_NUMBER = 'android.telephony.extra.VOICEMAIL_NUMBER';
  TJTelephonyManagerMETADATA_HIDE_VOICEMAIL_SETTINGS_MENU = 'android.telephony.HIDE_VOICEMAIL_SETTINGS_MENU';
  TJTelephonyManagerNETWORK_TYPE_1xRTT = 7;
  TJTelephonyManagerNETWORK_TYPE_CDMA = 4;
  TJTelephonyManagerNETWORK_TYPE_EDGE = 2;
  TJTelephonyManagerNETWORK_TYPE_EHRPD = 14;
  TJTelephonyManagerNETWORK_TYPE_EVDO_0 = 5;
  TJTelephonyManagerNETWORK_TYPE_EVDO_A = 6;
  TJTelephonyManagerNETWORK_TYPE_EVDO_B = 12;
  TJTelephonyManagerNETWORK_TYPE_GPRS = 1;
  TJTelephonyManagerNETWORK_TYPE_GSM = 16;
  TJTelephonyManagerNETWORK_TYPE_HSDPA = 8;
  TJTelephonyManagerNETWORK_TYPE_HSPA = 10;
  TJTelephonyManagerNETWORK_TYPE_HSPAP = 15;
  TJTelephonyManagerNETWORK_TYPE_HSUPA = 9;
  TJTelephonyManagerNETWORK_TYPE_IDEN = 11;
  TJTelephonyManagerNETWORK_TYPE_IWLAN = 18;
  TJTelephonyManagerNETWORK_TYPE_LTE = 13;
  TJTelephonyManagerNETWORK_TYPE_TD_SCDMA = 17;
  TJTelephonyManagerNETWORK_TYPE_UMTS = 3;
  TJTelephonyManagerNETWORK_TYPE_UNKNOWN = 0;
  TJTelephonyManagerPHONE_TYPE_CDMA = 2;
  TJTelephonyManagerPHONE_TYPE_GSM = 1;
  TJTelephonyManagerPHONE_TYPE_NONE = 0;
  TJTelephonyManagerPHONE_TYPE_SIP = 3;
  TJTelephonyManagerSIM_STATE_ABSENT = 1;
  TJTelephonyManagerSIM_STATE_CARD_IO_ERROR = 8;
  TJTelephonyManagerSIM_STATE_CARD_RESTRICTED = 9;
  TJTelephonyManagerSIM_STATE_NETWORK_LOCKED = 4;
  TJTelephonyManagerSIM_STATE_NOT_READY = 6;
  TJTelephonyManagerSIM_STATE_PERM_DISABLED = 7;
  TJTelephonyManagerSIM_STATE_PIN_REQUIRED = 2;
  TJTelephonyManagerSIM_STATE_PUK_REQUIRED = 3;
  TJTelephonyManagerSIM_STATE_READY = 5;
  TJTelephonyManagerSIM_STATE_UNKNOWN = 0;
  TJTelephonyManagerUSSD_ERROR_SERVICE_UNAVAIL = -2;
  TJTelephonyManagerUSSD_RETURN_FAILURE = -1;
  TJTelephonyManagerVVM_TYPE_CVVM = 'vvm_type_cvvm';
  TJTelephonyManagerVVM_TYPE_OMTP = 'vvm_type_omtp';

implementation

end.
