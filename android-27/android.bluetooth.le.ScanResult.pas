//
// Generated by JavaToPas v1.5 20180804 - 082423
////////////////////////////////////////////////////////////////////////////////
unit android.bluetooth.le.ScanResult;

interface

uses
  AndroidAPI.JNIBridge,
  Androidapi.JNI.JavaTypes,
  Androidapi.JNI.os,
  android.bluetooth.BluetoothDevice,
  android.bluetooth.le.ScanRecord;

type
  JScanResult = interface;

  JScanResultClass = interface(JObjectClass)
    ['{08442FA9-9605-4FF4-8FF1-BF8E22D4B81E}']
    function _GetCREATOR : JParcelable_Creator; cdecl;                          //  A: $19
    function _GetDATA_COMPLETE : Integer; cdecl;                                //  A: $19
    function _GetDATA_TRUNCATED : Integer; cdecl;                               //  A: $19
    function _GetPERIODIC_INTERVAL_NOT_PRESENT : Integer; cdecl;                //  A: $19
    function _GetPHY_UNUSED : Integer; cdecl;                                   //  A: $19
    function _GetSID_NOT_PRESENT : Integer; cdecl;                              //  A: $19
    function _GetTX_POWER_NOT_PRESENT : Integer; cdecl;                         //  A: $19
    function describeContents : Integer; cdecl;                                 // ()I A: $1
    function equals(obj : JObject) : boolean; cdecl;                            // (Ljava/lang/Object;)Z A: $1
    function getAdvertisingSid : Integer; cdecl;                                // ()I A: $1
    function getDataStatus : Integer; cdecl;                                    // ()I A: $1
    function getDevice : JBluetoothDevice; cdecl;                               // ()Landroid/bluetooth/BluetoothDevice; A: $1
    function getPeriodicAdvertisingInterval : Integer; cdecl;                   // ()I A: $1
    function getPrimaryPhy : Integer; cdecl;                                    // ()I A: $1
    function getRssi : Integer; cdecl;                                          // ()I A: $1
    function getScanRecord : JScanRecord; cdecl;                                // ()Landroid/bluetooth/le/ScanRecord; A: $1
    function getSecondaryPhy : Integer; cdecl;                                  // ()I A: $1
    function getTimestampNanos : Int64; cdecl;                                  // ()J A: $1
    function getTxPower : Integer; cdecl;                                       // ()I A: $1
    function hashCode : Integer; cdecl;                                         // ()I A: $1
    function init(device : JBluetoothDevice; eventType : Integer; primaryPhy : Integer; secondaryPhy : Integer; advertisingSid : Integer; txPower : Integer; rssi : Integer; periodicAdvertisingInterval : Integer; scanRecord : JScanRecord; timestampNanos : Int64) : JScanResult; cdecl; overload;// (Landroid/bluetooth/BluetoothDevice;IIIIIIILandroid/bluetooth/le/ScanRecord;J)V A: $1
    function init(device : JBluetoothDevice; scanRecord : JScanRecord; rssi : Integer; timestampNanos : Int64) : JScanResult; deprecated; cdecl; overload;// (Landroid/bluetooth/BluetoothDevice;Landroid/bluetooth/le/ScanRecord;IJ)V A: $1
    function isConnectable : boolean; cdecl;                                    // ()Z A: $1
    function isLegacy : boolean; cdecl;                                         // ()Z A: $1
    function toString : JString; cdecl;                                         // ()Ljava/lang/String; A: $1
    procedure writeToParcel(dest : JParcel; flags : Integer) ; cdecl;           // (Landroid/os/Parcel;I)V A: $1
    property CREATOR : JParcelable_Creator read _GetCREATOR;                    // Landroid/os/Parcelable$Creator; A: $19
    property DATA_COMPLETE : Integer read _GetDATA_COMPLETE;                    // I A: $19
    property DATA_TRUNCATED : Integer read _GetDATA_TRUNCATED;                  // I A: $19
    property PERIODIC_INTERVAL_NOT_PRESENT : Integer read _GetPERIODIC_INTERVAL_NOT_PRESENT;// I A: $19
    property PHY_UNUSED : Integer read _GetPHY_UNUSED;                          // I A: $19
    property SID_NOT_PRESENT : Integer read _GetSID_NOT_PRESENT;                // I A: $19
    property TX_POWER_NOT_PRESENT : Integer read _GetTX_POWER_NOT_PRESENT;      // I A: $19
  end;

  [JavaSignature('android/bluetooth/le/ScanResult')]
  JScanResult = interface(JObject)
    ['{B8855AA7-E6D2-4359-960C-1A282AA21726}']
    function describeContents : Integer; cdecl;                                 // ()I A: $1
    function equals(obj : JObject) : boolean; cdecl;                            // (Ljava/lang/Object;)Z A: $1
    function getAdvertisingSid : Integer; cdecl;                                // ()I A: $1
    function getDataStatus : Integer; cdecl;                                    // ()I A: $1
    function getDevice : JBluetoothDevice; cdecl;                               // ()Landroid/bluetooth/BluetoothDevice; A: $1
    function getPeriodicAdvertisingInterval : Integer; cdecl;                   // ()I A: $1
    function getPrimaryPhy : Integer; cdecl;                                    // ()I A: $1
    function getRssi : Integer; cdecl;                                          // ()I A: $1
    function getScanRecord : JScanRecord; cdecl;                                // ()Landroid/bluetooth/le/ScanRecord; A: $1
    function getSecondaryPhy : Integer; cdecl;                                  // ()I A: $1
    function getTimestampNanos : Int64; cdecl;                                  // ()J A: $1
    function getTxPower : Integer; cdecl;                                       // ()I A: $1
    function hashCode : Integer; cdecl;                                         // ()I A: $1
    function isConnectable : boolean; cdecl;                                    // ()Z A: $1
    function isLegacy : boolean; cdecl;                                         // ()Z A: $1
    function toString : JString; cdecl;                                         // ()Ljava/lang/String; A: $1
    procedure writeToParcel(dest : JParcel; flags : Integer) ; cdecl;           // (Landroid/os/Parcel;I)V A: $1
  end;

  TJScanResult = class(TJavaGenericImport<JScanResultClass, JScanResult>)
  end;

const
  TJScanResultDATA_COMPLETE = 0;
  TJScanResultDATA_TRUNCATED = 2;
  TJScanResultPERIODIC_INTERVAL_NOT_PRESENT = 0;
  TJScanResultPHY_UNUSED = 0;
  TJScanResultSID_NOT_PRESENT = 255;
  TJScanResultTX_POWER_NOT_PRESENT = 127;

implementation

end.
