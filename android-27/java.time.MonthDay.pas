//
// Generated by JavaToPas v1.5 20180804 - 082400
////////////////////////////////////////////////////////////////////////////////
unit java.time.MonthDay;

interface

uses
  AndroidAPI.JNIBridge,
  Androidapi.JNI.JavaTypes,
  java.time.Month,
  java.time.chrono.ChronoLocalDate,
  java.time.Duration;

type
  JMonthDay = interface;

  JMonthDayClass = interface(JObjectClass)
    ['{8284D79E-260F-417A-8C41-B85DF3FCD458}']
    function &of(month : Integer; dayOfMonth : Integer) : JMonthDay; cdecl; overload;// (II)Ljava/time/MonthDay; A: $9
    function &of(month : JMonth; dayOfMonth : Integer) : JMonthDay; cdecl; overload;// (Ljava/time/Month;I)Ljava/time/MonthDay; A: $9
    function &with(month : JMonth) : JMonthDay; cdecl;                          // (Ljava/time/Month;)Ljava/time/MonthDay; A: $1
    function adjustInto(temporal : JTemporal) : JTemporal; cdecl;               // (Ljava/time/temporal/Temporal;)Ljava/time/temporal/Temporal; A: $1
    function atYear(year : Integer) : JLocalDate; cdecl;                        // (I)Ljava/time/LocalDate; A: $1
    function compareTo(other : JMonthDay) : Integer; cdecl;                     // (Ljava/time/MonthDay;)I A: $1
    function equals(obj : JObject) : boolean; cdecl;                            // (Ljava/lang/Object;)Z A: $1
    function format(formatter : JDateTimeFormatter) : JString; cdecl;           // (Ljava/time/format/DateTimeFormatter;)Ljava/lang/String; A: $1
    function from(temporal : JTemporalAccessor) : JMonthDay; cdecl;             // (Ljava/time/temporal/TemporalAccessor;)Ljava/time/MonthDay; A: $9
    function get(field : JTemporalField) : Integer; cdecl;                      // (Ljava/time/temporal/TemporalField;)I A: $1
    function getDayOfMonth : Integer; cdecl;                                    // ()I A: $1
    function getLong(field : JTemporalField) : Int64; cdecl;                    // (Ljava/time/temporal/TemporalField;)J A: $1
    function getMonth : JMonth; cdecl;                                          // ()Ljava/time/Month; A: $1
    function getMonthValue : Integer; cdecl;                                    // ()I A: $1
    function hashCode : Integer; cdecl;                                         // ()I A: $1
    function isAfter(other : JMonthDay) : boolean; cdecl;                       // (Ljava/time/MonthDay;)Z A: $1
    function isBefore(other : JMonthDay) : boolean; cdecl;                      // (Ljava/time/MonthDay;)Z A: $1
    function isSupported(field : JTemporalField) : boolean; cdecl;              // (Ljava/time/temporal/TemporalField;)Z A: $1
    function isValidYear(year : Integer) : boolean; cdecl;                      // (I)Z A: $1
    function now : JMonthDay; cdecl; overload;                                  // ()Ljava/time/MonthDay; A: $9
    function now(clock : JClock) : JMonthDay; cdecl; overload;                  // (Ljava/time/Clock;)Ljava/time/MonthDay; A: $9
    function now(zone : JZoneId) : JMonthDay; cdecl; overload;                  // (Ljava/time/ZoneId;)Ljava/time/MonthDay; A: $9
    function parse(text : JCharSequence) : JMonthDay; cdecl; overload;          // (Ljava/lang/CharSequence;)Ljava/time/MonthDay; A: $9
    function parse(text : JCharSequence; formatter : JDateTimeFormatter) : JMonthDay; cdecl; overload;// (Ljava/lang/CharSequence;Ljava/time/format/DateTimeFormatter;)Ljava/time/MonthDay; A: $9
    function query(query : JTemporalQuery) : JObject; cdecl;                    // (Ljava/time/temporal/TemporalQuery;)Ljava/lang/Object; A: $1
    function range(field : JTemporalField) : JValueRange; cdecl;                // (Ljava/time/temporal/TemporalField;)Ljava/time/temporal/ValueRange; A: $1
    function toString : JString; cdecl;                                         // ()Ljava/lang/String; A: $1
    function withDayOfMonth(dayOfMonth : Integer) : JMonthDay; cdecl;           // (I)Ljava/time/MonthDay; A: $1
    function withMonth(month : Integer) : JMonthDay; cdecl;                     // (I)Ljava/time/MonthDay; A: $1
  end;

  [JavaSignature('java/time/MonthDay')]
  JMonthDay = interface(JObject)
    ['{41A9C536-597E-4FB4-B636-7FCCACD9EC49}']
    function &with(month : JMonth) : JMonthDay; cdecl;                          // (Ljava/time/Month;)Ljava/time/MonthDay; A: $1
    function adjustInto(temporal : JTemporal) : JTemporal; cdecl;               // (Ljava/time/temporal/Temporal;)Ljava/time/temporal/Temporal; A: $1
    function atYear(year : Integer) : JLocalDate; cdecl;                        // (I)Ljava/time/LocalDate; A: $1
    function compareTo(other : JMonthDay) : Integer; cdecl;                     // (Ljava/time/MonthDay;)I A: $1
    function equals(obj : JObject) : boolean; cdecl;                            // (Ljava/lang/Object;)Z A: $1
    function format(formatter : JDateTimeFormatter) : JString; cdecl;           // (Ljava/time/format/DateTimeFormatter;)Ljava/lang/String; A: $1
    function get(field : JTemporalField) : Integer; cdecl;                      // (Ljava/time/temporal/TemporalField;)I A: $1
    function getDayOfMonth : Integer; cdecl;                                    // ()I A: $1
    function getLong(field : JTemporalField) : Int64; cdecl;                    // (Ljava/time/temporal/TemporalField;)J A: $1
    function getMonth : JMonth; cdecl;                                          // ()Ljava/time/Month; A: $1
    function getMonthValue : Integer; cdecl;                                    // ()I A: $1
    function hashCode : Integer; cdecl;                                         // ()I A: $1
    function isAfter(other : JMonthDay) : boolean; cdecl;                       // (Ljava/time/MonthDay;)Z A: $1
    function isBefore(other : JMonthDay) : boolean; cdecl;                      // (Ljava/time/MonthDay;)Z A: $1
    function isSupported(field : JTemporalField) : boolean; cdecl;              // (Ljava/time/temporal/TemporalField;)Z A: $1
    function isValidYear(year : Integer) : boolean; cdecl;                      // (I)Z A: $1
    function query(query : JTemporalQuery) : JObject; cdecl;                    // (Ljava/time/temporal/TemporalQuery;)Ljava/lang/Object; A: $1
    function range(field : JTemporalField) : JValueRange; cdecl;                // (Ljava/time/temporal/TemporalField;)Ljava/time/temporal/ValueRange; A: $1
    function toString : JString; cdecl;                                         // ()Ljava/lang/String; A: $1
    function withDayOfMonth(dayOfMonth : Integer) : JMonthDay; cdecl;           // (I)Ljava/time/MonthDay; A: $1
    function withMonth(month : Integer) : JMonthDay; cdecl;                     // (I)Ljava/time/MonthDay; A: $1
  end;

  TJMonthDay = class(TJavaGenericImport<JMonthDayClass, JMonthDay>)
  end;

implementation

end.
