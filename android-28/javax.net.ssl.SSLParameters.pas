//
// Generated by JavaToPas v1.5 20180804 - 083037
////////////////////////////////////////////////////////////////////////////////
unit javax.net.ssl.SSLParameters;

interface

uses
  AndroidAPI.JNIBridge,
  Androidapi.JNI.JavaTypes,
  java.security.AlgorithmConstraints;

type
  JSSLParameters = interface;

  JSSLParametersClass = interface(JObjectClass)
    ['{FD221FFB-B470-48A2-A3D8-F6CC38CC23EE}']
    function getAlgorithmConstraints : JAlgorithmConstraints; cdecl;            // ()Ljava/security/AlgorithmConstraints; A: $1
    function getCipherSuites : TJavaArray<JString>; cdecl;                      // ()[Ljava/lang/String; A: $1
    function getEndpointIdentificationAlgorithm : JString; cdecl;               // ()Ljava/lang/String; A: $1
    function getNeedClientAuth : boolean; cdecl;                                // ()Z A: $1
    function getProtocols : TJavaArray<JString>; cdecl;                         // ()[Ljava/lang/String; A: $1
    function getSNIMatchers : JCollection; cdecl;                               // ()Ljava/util/Collection; A: $11
    function getServerNames : JList; cdecl;                                     // ()Ljava/util/List; A: $11
    function getUseCipherSuitesOrder : boolean; cdecl;                          // ()Z A: $11
    function getWantClientAuth : boolean; cdecl;                                // ()Z A: $1
    function init : JSSLParameters; cdecl; overload;                            // ()V A: $1
    function init(cipherSuites : TJavaArray<JString>) : JSSLParameters; cdecl; overload;// ([Ljava/lang/String;)V A: $1
    function init(cipherSuites : TJavaArray<JString>; protocols : TJavaArray<JString>) : JSSLParameters; cdecl; overload;// ([Ljava/lang/String;[Ljava/lang/String;)V A: $1
    procedure setAlgorithmConstraints(constraints : JAlgorithmConstraints) ; cdecl;// (Ljava/security/AlgorithmConstraints;)V A: $1
    procedure setCipherSuites(cipherSuites : TJavaArray<JString>) ; cdecl;      // ([Ljava/lang/String;)V A: $1
    procedure setEndpointIdentificationAlgorithm(algorithm : JString) ; cdecl;  // (Ljava/lang/String;)V A: $1
    procedure setNeedClientAuth(needClientAuth : boolean) ; cdecl;              // (Z)V A: $1
    procedure setProtocols(protocols : TJavaArray<JString>) ; cdecl;            // ([Ljava/lang/String;)V A: $1
    procedure setSNIMatchers(matchers : JCollection) ; cdecl;                   // (Ljava/util/Collection;)V A: $11
    procedure setServerNames(serverNames : JList) ; cdecl;                      // (Ljava/util/List;)V A: $11
    procedure setUseCipherSuitesOrder(honorOrder : boolean) ; cdecl;            // (Z)V A: $11
    procedure setWantClientAuth(wantClientAuth : boolean) ; cdecl;              // (Z)V A: $1
  end;

  [JavaSignature('javax/net/ssl/SSLParameters')]
  JSSLParameters = interface(JObject)
    ['{6A6FEBB2-765C-4FD4-976E-4A2724214941}']
    function getAlgorithmConstraints : JAlgorithmConstraints; cdecl;            // ()Ljava/security/AlgorithmConstraints; A: $1
    function getCipherSuites : TJavaArray<JString>; cdecl;                      // ()[Ljava/lang/String; A: $1
    function getEndpointIdentificationAlgorithm : JString; cdecl;               // ()Ljava/lang/String; A: $1
    function getNeedClientAuth : boolean; cdecl;                                // ()Z A: $1
    function getProtocols : TJavaArray<JString>; cdecl;                         // ()[Ljava/lang/String; A: $1
    function getWantClientAuth : boolean; cdecl;                                // ()Z A: $1
    procedure setAlgorithmConstraints(constraints : JAlgorithmConstraints) ; cdecl;// (Ljava/security/AlgorithmConstraints;)V A: $1
    procedure setCipherSuites(cipherSuites : TJavaArray<JString>) ; cdecl;      // ([Ljava/lang/String;)V A: $1
    procedure setEndpointIdentificationAlgorithm(algorithm : JString) ; cdecl;  // (Ljava/lang/String;)V A: $1
    procedure setNeedClientAuth(needClientAuth : boolean) ; cdecl;              // (Z)V A: $1
    procedure setProtocols(protocols : TJavaArray<JString>) ; cdecl;            // ([Ljava/lang/String;)V A: $1
    procedure setWantClientAuth(wantClientAuth : boolean) ; cdecl;              // (Z)V A: $1
  end;

  TJSSLParameters = class(TJavaGenericImport<JSSLParametersClass, JSSLParameters>)
  end;

implementation

end.
