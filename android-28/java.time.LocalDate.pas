//
// Generated by JavaToPas v1.5 20180804 - 083308
////////////////////////////////////////////////////////////////////////////////
unit java.time.LocalDate;

interface

uses
  AndroidAPI.JNIBridge,
  Androidapi.JNI.JavaTypes,
  java.time.Month,
  java.time.Duration,
  java.time.chrono.Era,
  java.time.DayOfWeek,
  java.time.chrono.ChronoLocalDate;

type
  JLocalDate = interface;

  JLocalDateClass = interface(JObjectClass)
    ['{9D12DCFA-57C1-4E22-8830-FB95A5F20067}']
    function &of(year : Integer; month : Integer; dayOfMonth : Integer) : JLocalDate; cdecl; overload;// (III)Ljava/time/LocalDate; A: $9
    function &of(year : Integer; month : JMonth; dayOfMonth : Integer) : JLocalDate; cdecl; overload;// (ILjava/time/Month;I)Ljava/time/LocalDate; A: $9
    function &until(endDateExclusive : JChronoLocalDate) : JPeriod; cdecl; overload;// (Ljava/time/chrono/ChronoLocalDate;)Ljava/time/Period; A: $1
    function &until(endExclusive : JTemporal; &unit : JTemporalUnit) : Int64; cdecl; overload;// (Ljava/time/temporal/Temporal;Ljava/time/temporal/TemporalUnit;)J A: $1
    function &with(adjuster : JTemporalAdjuster) : JLocalDate; cdecl; overload; // (Ljava/time/temporal/TemporalAdjuster;)Ljava/time/LocalDate; A: $1
    function &with(field : JTemporalField; newValue : Int64) : JLocalDate; cdecl; overload;// (Ljava/time/temporal/TemporalField;J)Ljava/time/LocalDate; A: $1
    function _GetMAX : JLocalDate; cdecl;                                       //  A: $19
    function _GetMIN : JLocalDate; cdecl;                                       //  A: $19
    function adjustInto(temporal : JTemporal) : JTemporal; cdecl;               // (Ljava/time/temporal/Temporal;)Ljava/time/temporal/Temporal; A: $1
    function atStartOfDay : JLocalDateTime; cdecl; overload;                    // ()Ljava/time/LocalDateTime; A: $1
    function atStartOfDay(zone : JZoneId) : JZonedDateTime; cdecl; overload;    // (Ljava/time/ZoneId;)Ljava/time/ZonedDateTime; A: $1
    function atTime(hour : Integer; minute : Integer) : JLocalDateTime; cdecl; overload;// (II)Ljava/time/LocalDateTime; A: $1
    function atTime(hour : Integer; minute : Integer; second : Integer) : JLocalDateTime; cdecl; overload;// (III)Ljava/time/LocalDateTime; A: $1
    function atTime(hour : Integer; minute : Integer; second : Integer; nanoOfSecond : Integer) : JLocalDateTime; cdecl; overload;// (IIII)Ljava/time/LocalDateTime; A: $1
    function atTime(time : JLocalTime) : JLocalDateTime; cdecl; overload;       // (Ljava/time/LocalTime;)Ljava/time/LocalDateTime; A: $1
    function atTime(time : JOffsetTime) : JOffsetDateTime; cdecl; overload;     // (Ljava/time/OffsetTime;)Ljava/time/OffsetDateTime; A: $1
    function compareTo(other : JChronoLocalDate) : Integer; cdecl;              // (Ljava/time/chrono/ChronoLocalDate;)I A: $1
    function equals(obj : JObject) : boolean; cdecl;                            // (Ljava/lang/Object;)Z A: $1
    function format(formatter : JDateTimeFormatter) : JString; cdecl;           // (Ljava/time/format/DateTimeFormatter;)Ljava/lang/String; A: $1
    function from(temporal : JTemporalAccessor) : JLocalDate; cdecl;            // (Ljava/time/temporal/TemporalAccessor;)Ljava/time/LocalDate; A: $9
    function get(field : JTemporalField) : Integer; cdecl;                      // (Ljava/time/temporal/TemporalField;)I A: $1
    function getChronology : JIsoChronology; cdecl;                             // ()Ljava/time/chrono/IsoChronology; A: $1
    function getDayOfMonth : Integer; cdecl;                                    // ()I A: $1
    function getDayOfWeek : JDayOfWeek; cdecl;                                  // ()Ljava/time/DayOfWeek; A: $1
    function getDayOfYear : Integer; cdecl;                                     // ()I A: $1
    function getEra : JEra; cdecl;                                              // ()Ljava/time/chrono/Era; A: $1
    function getLong(field : JTemporalField) : Int64; cdecl;                    // (Ljava/time/temporal/TemporalField;)J A: $1
    function getMonth : JMonth; cdecl;                                          // ()Ljava/time/Month; A: $1
    function getMonthValue : Integer; cdecl;                                    // ()I A: $1
    function getYear : Integer; cdecl;                                          // ()I A: $1
    function hashCode : Integer; cdecl;                                         // ()I A: $1
    function isAfter(other : JChronoLocalDate) : boolean; cdecl;                // (Ljava/time/chrono/ChronoLocalDate;)Z A: $1
    function isBefore(other : JChronoLocalDate) : boolean; cdecl;               // (Ljava/time/chrono/ChronoLocalDate;)Z A: $1
    function isEqual(other : JChronoLocalDate) : boolean; cdecl;                // (Ljava/time/chrono/ChronoLocalDate;)Z A: $1
    function isLeapYear : boolean; cdecl;                                       // ()Z A: $1
    function isSupported(&unit : JTemporalUnit) : boolean; cdecl; overload;     // (Ljava/time/temporal/TemporalUnit;)Z A: $1
    function isSupported(field : JTemporalField) : boolean; cdecl; overload;    // (Ljava/time/temporal/TemporalField;)Z A: $1
    function lengthOfMonth : Integer; cdecl;                                    // ()I A: $1
    function lengthOfYear : Integer; cdecl;                                     // ()I A: $1
    function minus(amountToSubtract : Int64; &unit : JTemporalUnit) : JLocalDate; cdecl; overload;// (JLjava/time/temporal/TemporalUnit;)Ljava/time/LocalDate; A: $1
    function minus(amountToSubtract : JTemporalAmount) : JLocalDate; cdecl; overload;// (Ljava/time/temporal/TemporalAmount;)Ljava/time/LocalDate; A: $1
    function minusDays(daysToSubtract : Int64) : JLocalDate; cdecl;             // (J)Ljava/time/LocalDate; A: $1
    function minusMonths(monthsToSubtract : Int64) : JLocalDate; cdecl;         // (J)Ljava/time/LocalDate; A: $1
    function minusWeeks(weeksToSubtract : Int64) : JLocalDate; cdecl;           // (J)Ljava/time/LocalDate; A: $1
    function minusYears(yearsToSubtract : Int64) : JLocalDate; cdecl;           // (J)Ljava/time/LocalDate; A: $1
    function now : JLocalDate; cdecl; overload;                                 // ()Ljava/time/LocalDate; A: $9
    function now(clock : JClock) : JLocalDate; cdecl; overload;                 // (Ljava/time/Clock;)Ljava/time/LocalDate; A: $9
    function now(zone : JZoneId) : JLocalDate; cdecl; overload;                 // (Ljava/time/ZoneId;)Ljava/time/LocalDate; A: $9
    function ofEpochDay(epochDay : Int64) : JLocalDate; cdecl;                  // (J)Ljava/time/LocalDate; A: $9
    function ofYearDay(year : Integer; dayOfYear : Integer) : JLocalDate; cdecl;// (II)Ljava/time/LocalDate; A: $9
    function parse(text : JCharSequence) : JLocalDate; cdecl; overload;         // (Ljava/lang/CharSequence;)Ljava/time/LocalDate; A: $9
    function parse(text : JCharSequence; formatter : JDateTimeFormatter) : JLocalDate; cdecl; overload;// (Ljava/lang/CharSequence;Ljava/time/format/DateTimeFormatter;)Ljava/time/LocalDate; A: $9
    function plus(amountToAdd : Int64; &unit : JTemporalUnit) : JLocalDate; cdecl; overload;// (JLjava/time/temporal/TemporalUnit;)Ljava/time/LocalDate; A: $1
    function plus(amountToAdd : JTemporalAmount) : JLocalDate; cdecl; overload; // (Ljava/time/temporal/TemporalAmount;)Ljava/time/LocalDate; A: $1
    function plusDays(daysToAdd : Int64) : JLocalDate; cdecl;                   // (J)Ljava/time/LocalDate; A: $1
    function plusMonths(monthsToAdd : Int64) : JLocalDate; cdecl;               // (J)Ljava/time/LocalDate; A: $1
    function plusWeeks(weeksToAdd : Int64) : JLocalDate; cdecl;                 // (J)Ljava/time/LocalDate; A: $1
    function plusYears(yearsToAdd : Int64) : JLocalDate; cdecl;                 // (J)Ljava/time/LocalDate; A: $1
    function query(query : JTemporalQuery) : JObject; cdecl;                    // (Ljava/time/temporal/TemporalQuery;)Ljava/lang/Object; A: $1
    function range(field : JTemporalField) : JValueRange; cdecl;                // (Ljava/time/temporal/TemporalField;)Ljava/time/temporal/ValueRange; A: $1
    function toEpochDay : Int64; cdecl;                                         // ()J A: $1
    function toString : JString; cdecl;                                         // ()Ljava/lang/String; A: $1
    function withDayOfMonth(dayOfMonth : Integer) : JLocalDate; cdecl;          // (I)Ljava/time/LocalDate; A: $1
    function withDayOfYear(dayOfYear : Integer) : JLocalDate; cdecl;            // (I)Ljava/time/LocalDate; A: $1
    function withMonth(month : Integer) : JLocalDate; cdecl;                    // (I)Ljava/time/LocalDate; A: $1
    function withYear(year : Integer) : JLocalDate; cdecl;                      // (I)Ljava/time/LocalDate; A: $1
    property MAX : JLocalDate read _GetMAX;                                     // Ljava/time/LocalDate; A: $19
    property MIN : JLocalDate read _GetMIN;                                     // Ljava/time/LocalDate; A: $19
  end;

  [JavaSignature('java/time/LocalDate')]
  JLocalDate = interface(JObject)
    ['{3E3FF6FF-F83F-4919-A74B-D325C0868D2F}']
    function &until(endDateExclusive : JChronoLocalDate) : JPeriod; cdecl; overload;// (Ljava/time/chrono/ChronoLocalDate;)Ljava/time/Period; A: $1
    function &until(endExclusive : JTemporal; &unit : JTemporalUnit) : Int64; cdecl; overload;// (Ljava/time/temporal/Temporal;Ljava/time/temporal/TemporalUnit;)J A: $1
    function &with(adjuster : JTemporalAdjuster) : JLocalDate; cdecl; overload; // (Ljava/time/temporal/TemporalAdjuster;)Ljava/time/LocalDate; A: $1
    function &with(field : JTemporalField; newValue : Int64) : JLocalDate; cdecl; overload;// (Ljava/time/temporal/TemporalField;J)Ljava/time/LocalDate; A: $1
    function adjustInto(temporal : JTemporal) : JTemporal; cdecl;               // (Ljava/time/temporal/Temporal;)Ljava/time/temporal/Temporal; A: $1
    function atStartOfDay : JLocalDateTime; cdecl; overload;                    // ()Ljava/time/LocalDateTime; A: $1
    function atStartOfDay(zone : JZoneId) : JZonedDateTime; cdecl; overload;    // (Ljava/time/ZoneId;)Ljava/time/ZonedDateTime; A: $1
    function atTime(hour : Integer; minute : Integer) : JLocalDateTime; cdecl; overload;// (II)Ljava/time/LocalDateTime; A: $1
    function atTime(hour : Integer; minute : Integer; second : Integer) : JLocalDateTime; cdecl; overload;// (III)Ljava/time/LocalDateTime; A: $1
    function atTime(hour : Integer; minute : Integer; second : Integer; nanoOfSecond : Integer) : JLocalDateTime; cdecl; overload;// (IIII)Ljava/time/LocalDateTime; A: $1
    function atTime(time : JLocalTime) : JLocalDateTime; cdecl; overload;       // (Ljava/time/LocalTime;)Ljava/time/LocalDateTime; A: $1
    function atTime(time : JOffsetTime) : JOffsetDateTime; cdecl; overload;     // (Ljava/time/OffsetTime;)Ljava/time/OffsetDateTime; A: $1
    function compareTo(other : JChronoLocalDate) : Integer; cdecl;              // (Ljava/time/chrono/ChronoLocalDate;)I A: $1
    function equals(obj : JObject) : boolean; cdecl;                            // (Ljava/lang/Object;)Z A: $1
    function format(formatter : JDateTimeFormatter) : JString; cdecl;           // (Ljava/time/format/DateTimeFormatter;)Ljava/lang/String; A: $1
    function get(field : JTemporalField) : Integer; cdecl;                      // (Ljava/time/temporal/TemporalField;)I A: $1
    function getChronology : JIsoChronology; cdecl;                             // ()Ljava/time/chrono/IsoChronology; A: $1
    function getDayOfMonth : Integer; cdecl;                                    // ()I A: $1
    function getDayOfWeek : JDayOfWeek; cdecl;                                  // ()Ljava/time/DayOfWeek; A: $1
    function getDayOfYear : Integer; cdecl;                                     // ()I A: $1
    function getEra : JEra; cdecl;                                              // ()Ljava/time/chrono/Era; A: $1
    function getLong(field : JTemporalField) : Int64; cdecl;                    // (Ljava/time/temporal/TemporalField;)J A: $1
    function getMonth : JMonth; cdecl;                                          // ()Ljava/time/Month; A: $1
    function getMonthValue : Integer; cdecl;                                    // ()I A: $1
    function getYear : Integer; cdecl;                                          // ()I A: $1
    function hashCode : Integer; cdecl;                                         // ()I A: $1
    function isAfter(other : JChronoLocalDate) : boolean; cdecl;                // (Ljava/time/chrono/ChronoLocalDate;)Z A: $1
    function isBefore(other : JChronoLocalDate) : boolean; cdecl;               // (Ljava/time/chrono/ChronoLocalDate;)Z A: $1
    function isEqual(other : JChronoLocalDate) : boolean; cdecl;                // (Ljava/time/chrono/ChronoLocalDate;)Z A: $1
    function isLeapYear : boolean; cdecl;                                       // ()Z A: $1
    function isSupported(&unit : JTemporalUnit) : boolean; cdecl; overload;     // (Ljava/time/temporal/TemporalUnit;)Z A: $1
    function isSupported(field : JTemporalField) : boolean; cdecl; overload;    // (Ljava/time/temporal/TemporalField;)Z A: $1
    function lengthOfMonth : Integer; cdecl;                                    // ()I A: $1
    function lengthOfYear : Integer; cdecl;                                     // ()I A: $1
    function minus(amountToSubtract : Int64; &unit : JTemporalUnit) : JLocalDate; cdecl; overload;// (JLjava/time/temporal/TemporalUnit;)Ljava/time/LocalDate; A: $1
    function minus(amountToSubtract : JTemporalAmount) : JLocalDate; cdecl; overload;// (Ljava/time/temporal/TemporalAmount;)Ljava/time/LocalDate; A: $1
    function minusDays(daysToSubtract : Int64) : JLocalDate; cdecl;             // (J)Ljava/time/LocalDate; A: $1
    function minusMonths(monthsToSubtract : Int64) : JLocalDate; cdecl;         // (J)Ljava/time/LocalDate; A: $1
    function minusWeeks(weeksToSubtract : Int64) : JLocalDate; cdecl;           // (J)Ljava/time/LocalDate; A: $1
    function minusYears(yearsToSubtract : Int64) : JLocalDate; cdecl;           // (J)Ljava/time/LocalDate; A: $1
    function plus(amountToAdd : Int64; &unit : JTemporalUnit) : JLocalDate; cdecl; overload;// (JLjava/time/temporal/TemporalUnit;)Ljava/time/LocalDate; A: $1
    function plus(amountToAdd : JTemporalAmount) : JLocalDate; cdecl; overload; // (Ljava/time/temporal/TemporalAmount;)Ljava/time/LocalDate; A: $1
    function plusDays(daysToAdd : Int64) : JLocalDate; cdecl;                   // (J)Ljava/time/LocalDate; A: $1
    function plusMonths(monthsToAdd : Int64) : JLocalDate; cdecl;               // (J)Ljava/time/LocalDate; A: $1
    function plusWeeks(weeksToAdd : Int64) : JLocalDate; cdecl;                 // (J)Ljava/time/LocalDate; A: $1
    function plusYears(yearsToAdd : Int64) : JLocalDate; cdecl;                 // (J)Ljava/time/LocalDate; A: $1
    function query(query : JTemporalQuery) : JObject; cdecl;                    // (Ljava/time/temporal/TemporalQuery;)Ljava/lang/Object; A: $1
    function range(field : JTemporalField) : JValueRange; cdecl;                // (Ljava/time/temporal/TemporalField;)Ljava/time/temporal/ValueRange; A: $1
    function toEpochDay : Int64; cdecl;                                         // ()J A: $1
    function toString : JString; cdecl;                                         // ()Ljava/lang/String; A: $1
    function withDayOfMonth(dayOfMonth : Integer) : JLocalDate; cdecl;          // (I)Ljava/time/LocalDate; A: $1
    function withDayOfYear(dayOfYear : Integer) : JLocalDate; cdecl;            // (I)Ljava/time/LocalDate; A: $1
    function withMonth(month : Integer) : JLocalDate; cdecl;                    // (I)Ljava/time/LocalDate; A: $1
    function withYear(year : Integer) : JLocalDate; cdecl;                      // (I)Ljava/time/LocalDate; A: $1
  end;

  TJLocalDate = class(TJavaGenericImport<JLocalDateClass, JLocalDate>)
  end;

implementation

end.
