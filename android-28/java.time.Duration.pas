//
// Generated by JavaToPas v1.5 20180804 - 083310
////////////////////////////////////////////////////////////////////////////////
unit java.time.Duration;

interface

uses
  AndroidAPI.JNIBridge,
  Androidapi.JNI.JavaTypes,
  java.time.format.ResolverStyle;

type
  JTemporalQuery = interface; // merged
  JTemporalAccessor = interface; // merged
  JValueRange = interface; // merged
  JTemporalAmount = interface; // merged
  JTemporalField = interface; // merged
  JTemporalAdjuster = interface; // merged
  JTemporal = interface; // merged
  JTemporalUnit = interface; // merged
  JDuration = interface;

  JDurationClass = interface(JObjectClass)
    ['{0C2F056A-5639-4B29-8121-4FB82C155F07}']
    function &of(amount : Int64; &unit : JTemporalUnit) : JDuration; cdecl;     // (JLjava/time/temporal/TemporalUnit;)Ljava/time/Duration; A: $9
    function _GetZERO : JDuration; cdecl;                                       //  A: $19
    function abs : JDuration; cdecl;                                            // ()Ljava/time/Duration; A: $1
    function addTo(temporal : JTemporal) : JTemporal; cdecl;                    // (Ljava/time/temporal/Temporal;)Ljava/time/temporal/Temporal; A: $1
    function between(startInclusive : JTemporal; endExclusive : JTemporal) : JDuration; cdecl;// (Ljava/time/temporal/Temporal;Ljava/time/temporal/Temporal;)Ljava/time/Duration; A: $9
    function compareTo(otherDuration : JDuration) : Integer; cdecl;             // (Ljava/time/Duration;)I A: $1
    function dividedBy(divisor : Int64) : JDuration; cdecl;                     // (J)Ljava/time/Duration; A: $1
    function equals(otherDuration : JObject) : boolean; cdecl;                  // (Ljava/lang/Object;)Z A: $1
    function from(amount : JTemporalAmount) : JDuration; cdecl;                 // (Ljava/time/temporal/TemporalAmount;)Ljava/time/Duration; A: $9
    function get(&unit : JTemporalUnit) : Int64; cdecl;                         // (Ljava/time/temporal/TemporalUnit;)J A: $1
    function getNano : Integer; cdecl;                                          // ()I A: $1
    function getSeconds : Int64; cdecl;                                         // ()J A: $1
    function getUnits : JList; cdecl;                                           // ()Ljava/util/List; A: $1
    function hashCode : Integer; cdecl;                                         // ()I A: $1
    function isNegative : boolean; cdecl;                                       // ()Z A: $1
    function isZero : boolean; cdecl;                                           // ()Z A: $1
    function minus(amountToSubtract : Int64; &unit : JTemporalUnit) : JDuration; cdecl; overload;// (JLjava/time/temporal/TemporalUnit;)Ljava/time/Duration; A: $1
    function minus(duration : JDuration) : JDuration; cdecl; overload;          // (Ljava/time/Duration;)Ljava/time/Duration; A: $1
    function minusDays(daysToSubtract : Int64) : JDuration; cdecl;              // (J)Ljava/time/Duration; A: $1
    function minusHours(hoursToSubtract : Int64) : JDuration; cdecl;            // (J)Ljava/time/Duration; A: $1
    function minusMillis(millisToSubtract : Int64) : JDuration; cdecl;          // (J)Ljava/time/Duration; A: $1
    function minusMinutes(minutesToSubtract : Int64) : JDuration; cdecl;        // (J)Ljava/time/Duration; A: $1
    function minusNanos(nanosToSubtract : Int64) : JDuration; cdecl;            // (J)Ljava/time/Duration; A: $1
    function minusSeconds(secondsToSubtract : Int64) : JDuration; cdecl;        // (J)Ljava/time/Duration; A: $1
    function multipliedBy(multiplicand : Int64) : JDuration; cdecl;             // (J)Ljava/time/Duration; A: $1
    function negated : JDuration; cdecl;                                        // ()Ljava/time/Duration; A: $1
    function ofDays(days : Int64) : JDuration; cdecl;                           // (J)Ljava/time/Duration; A: $9
    function ofHours(hours : Int64) : JDuration; cdecl;                         // (J)Ljava/time/Duration; A: $9
    function ofMillis(millis : Int64) : JDuration; cdecl;                       // (J)Ljava/time/Duration; A: $9
    function ofMinutes(minutes : Int64) : JDuration; cdecl;                     // (J)Ljava/time/Duration; A: $9
    function ofNanos(nanos : Int64) : JDuration; cdecl;                         // (J)Ljava/time/Duration; A: $9
    function ofSeconds(seconds : Int64) : JDuration; cdecl; overload;           // (J)Ljava/time/Duration; A: $9
    function ofSeconds(seconds : Int64; nanoAdjustment : Int64) : JDuration; cdecl; overload;// (JJ)Ljava/time/Duration; A: $9
    function parse(text : JCharSequence) : JDuration; cdecl;                    // (Ljava/lang/CharSequence;)Ljava/time/Duration; A: $9
    function plus(amountToAdd : Int64; &unit : JTemporalUnit) : JDuration; cdecl; overload;// (JLjava/time/temporal/TemporalUnit;)Ljava/time/Duration; A: $1
    function plus(duration : JDuration) : JDuration; cdecl; overload;           // (Ljava/time/Duration;)Ljava/time/Duration; A: $1
    function plusDays(daysToAdd : Int64) : JDuration; cdecl;                    // (J)Ljava/time/Duration; A: $1
    function plusHours(hoursToAdd : Int64) : JDuration; cdecl;                  // (J)Ljava/time/Duration; A: $1
    function plusMillis(millisToAdd : Int64) : JDuration; cdecl;                // (J)Ljava/time/Duration; A: $1
    function plusMinutes(minutesToAdd : Int64) : JDuration; cdecl;              // (J)Ljava/time/Duration; A: $1
    function plusNanos(nanosToAdd : Int64) : JDuration; cdecl;                  // (J)Ljava/time/Duration; A: $1
    function plusSeconds(secondsToAdd : Int64) : JDuration; cdecl;              // (J)Ljava/time/Duration; A: $1
    function subtractFrom(temporal : JTemporal) : JTemporal; cdecl;             // (Ljava/time/temporal/Temporal;)Ljava/time/temporal/Temporal; A: $1
    function toDays : Int64; cdecl;                                             // ()J A: $1
    function toHours : Int64; cdecl;                                            // ()J A: $1
    function toMillis : Int64; cdecl;                                           // ()J A: $1
    function toMinutes : Int64; cdecl;                                          // ()J A: $1
    function toNanos : Int64; cdecl;                                            // ()J A: $1
    function toString : JString; cdecl;                                         // ()Ljava/lang/String; A: $1
    function withNanos(nanoOfSecond : Integer) : JDuration; cdecl;              // (I)Ljava/time/Duration; A: $1
    function withSeconds(seconds : Int64) : JDuration; cdecl;                   // (J)Ljava/time/Duration; A: $1
    property ZERO : JDuration read _GetZERO;                                    // Ljava/time/Duration; A: $19
  end;

  [JavaSignature('java/time/Duration')]
  JDuration = interface(JObject)
    ['{2A857068-587D-4A6C-BE59-BC4D0BB0563D}']
    function abs : JDuration; cdecl;                                            // ()Ljava/time/Duration; A: $1
    function addTo(temporal : JTemporal) : JTemporal; cdecl;                    // (Ljava/time/temporal/Temporal;)Ljava/time/temporal/Temporal; A: $1
    function compareTo(otherDuration : JDuration) : Integer; cdecl;             // (Ljava/time/Duration;)I A: $1
    function dividedBy(divisor : Int64) : JDuration; cdecl;                     // (J)Ljava/time/Duration; A: $1
    function equals(otherDuration : JObject) : boolean; cdecl;                  // (Ljava/lang/Object;)Z A: $1
    function get(&unit : JTemporalUnit) : Int64; cdecl;                         // (Ljava/time/temporal/TemporalUnit;)J A: $1
    function getNano : Integer; cdecl;                                          // ()I A: $1
    function getSeconds : Int64; cdecl;                                         // ()J A: $1
    function getUnits : JList; cdecl;                                           // ()Ljava/util/List; A: $1
    function hashCode : Integer; cdecl;                                         // ()I A: $1
    function isNegative : boolean; cdecl;                                       // ()Z A: $1
    function isZero : boolean; cdecl;                                           // ()Z A: $1
    function minus(amountToSubtract : Int64; &unit : JTemporalUnit) : JDuration; cdecl; overload;// (JLjava/time/temporal/TemporalUnit;)Ljava/time/Duration; A: $1
    function minus(duration : JDuration) : JDuration; cdecl; overload;          // (Ljava/time/Duration;)Ljava/time/Duration; A: $1
    function minusDays(daysToSubtract : Int64) : JDuration; cdecl;              // (J)Ljava/time/Duration; A: $1
    function minusHours(hoursToSubtract : Int64) : JDuration; cdecl;            // (J)Ljava/time/Duration; A: $1
    function minusMillis(millisToSubtract : Int64) : JDuration; cdecl;          // (J)Ljava/time/Duration; A: $1
    function minusMinutes(minutesToSubtract : Int64) : JDuration; cdecl;        // (J)Ljava/time/Duration; A: $1
    function minusNanos(nanosToSubtract : Int64) : JDuration; cdecl;            // (J)Ljava/time/Duration; A: $1
    function minusSeconds(secondsToSubtract : Int64) : JDuration; cdecl;        // (J)Ljava/time/Duration; A: $1
    function multipliedBy(multiplicand : Int64) : JDuration; cdecl;             // (J)Ljava/time/Duration; A: $1
    function negated : JDuration; cdecl;                                        // ()Ljava/time/Duration; A: $1
    function plus(amountToAdd : Int64; &unit : JTemporalUnit) : JDuration; cdecl; overload;// (JLjava/time/temporal/TemporalUnit;)Ljava/time/Duration; A: $1
    function plus(duration : JDuration) : JDuration; cdecl; overload;           // (Ljava/time/Duration;)Ljava/time/Duration; A: $1
    function plusDays(daysToAdd : Int64) : JDuration; cdecl;                    // (J)Ljava/time/Duration; A: $1
    function plusHours(hoursToAdd : Int64) : JDuration; cdecl;                  // (J)Ljava/time/Duration; A: $1
    function plusMillis(millisToAdd : Int64) : JDuration; cdecl;                // (J)Ljava/time/Duration; A: $1
    function plusMinutes(minutesToAdd : Int64) : JDuration; cdecl;              // (J)Ljava/time/Duration; A: $1
    function plusNanos(nanosToAdd : Int64) : JDuration; cdecl;                  // (J)Ljava/time/Duration; A: $1
    function plusSeconds(secondsToAdd : Int64) : JDuration; cdecl;              // (J)Ljava/time/Duration; A: $1
    function subtractFrom(temporal : JTemporal) : JTemporal; cdecl;             // (Ljava/time/temporal/Temporal;)Ljava/time/temporal/Temporal; A: $1
    function toDays : Int64; cdecl;                                             // ()J A: $1
    function toHours : Int64; cdecl;                                            // ()J A: $1
    function toMillis : Int64; cdecl;                                           // ()J A: $1
    function toMinutes : Int64; cdecl;                                          // ()J A: $1
    function toNanos : Int64; cdecl;                                            // ()J A: $1
    function toString : JString; cdecl;                                         // ()Ljava/lang/String; A: $1
    function withNanos(nanoOfSecond : Integer) : JDuration; cdecl;              // (I)Ljava/time/Duration; A: $1
    function withSeconds(seconds : Int64) : JDuration; cdecl;                   // (J)Ljava/time/Duration; A: $1
  end;

  TJDuration = class(TJavaGenericImport<JDurationClass, JDuration>)
  end;

  // Merged from: .\java.time.temporal.TemporalUnit.pas
  JTemporalUnitClass = interface(JObjectClass)
    ['{30A7A912-5C58-4DF6-8D12-43B1D231E4EF}']
    function addTo(JTemporalparam0 : JTemporal; Int64param1 : Int64) : JTemporal; cdecl;// (Ljava/time/temporal/Temporal;J)Ljava/time/temporal/Temporal; A: $401
    function between(JTemporalparam0 : JTemporal; JTemporalparam1 : JTemporal) : Int64; cdecl;// (Ljava/time/temporal/Temporal;Ljava/time/temporal/Temporal;)J A: $401
    function getDuration : JDuration; cdecl;                                    // ()Ljava/time/Duration; A: $401
    function isDateBased : boolean; cdecl;                                      // ()Z A: $401
    function isDurationEstimated : boolean; cdecl;                              // ()Z A: $401
    function isSupportedBy(temporal : JTemporal) : boolean; cdecl;              // (Ljava/time/temporal/Temporal;)Z A: $1
    function isTimeBased : boolean; cdecl;                                      // ()Z A: $401
    function toString : JString; cdecl;                                         // ()Ljava/lang/String; A: $401
  end;

  [JavaSignature('java/time/temporal/TemporalUnit')]
  JTemporalUnit = interface(JObject)
    ['{046BBBA9-7932-4D47-8341-ADFF7213D91A}']
    function addTo(JTemporalparam0 : JTemporal; Int64param1 : Int64) : JTemporal; cdecl;// (Ljava/time/temporal/Temporal;J)Ljava/time/temporal/Temporal; A: $401
    function between(JTemporalparam0 : JTemporal; JTemporalparam1 : JTemporal) : Int64; cdecl;// (Ljava/time/temporal/Temporal;Ljava/time/temporal/Temporal;)J A: $401
    function getDuration : JDuration; cdecl;                                    // ()Ljava/time/Duration; A: $401
    function isDateBased : boolean; cdecl;                                      // ()Z A: $401
    function isDurationEstimated : boolean; cdecl;                              // ()Z A: $401
    function isSupportedBy(temporal : JTemporal) : boolean; cdecl;              // (Ljava/time/temporal/Temporal;)Z A: $1
    function isTimeBased : boolean; cdecl;                                      // ()Z A: $401
    function toString : JString; cdecl;                                         // ()Ljava/lang/String; A: $401
  end;

  TJTemporalUnit = class(TJavaGenericImport<JTemporalUnitClass, JTemporalUnit>)
  end;


  // Merged from: .\java.time.temporal.Temporal.pas
  JTemporalClass = interface(JObjectClass)
    ['{E3AC1587-4FB2-4F7A-8869-D47FF70A85F3}']
    function &until(JTemporalparam0 : JTemporal; JTemporalUnitparam1 : JTemporalUnit) : Int64; cdecl;// (Ljava/time/temporal/Temporal;Ljava/time/temporal/TemporalUnit;)J A: $401
    function &with(JTemporalFieldparam0 : JTemporalField; Int64param1 : Int64) : JTemporal; cdecl; overload;// (Ljava/time/temporal/TemporalField;J)Ljava/time/temporal/Temporal; A: $401
    function &with(adjuster : JTemporalAdjuster) : JTemporal; cdecl; overload;  // (Ljava/time/temporal/TemporalAdjuster;)Ljava/time/temporal/Temporal; A: $1
    function isSupported(JTemporalUnitparam0 : JTemporalUnit) : boolean; cdecl; // (Ljava/time/temporal/TemporalUnit;)Z A: $401
    function minus(amount : JTemporalAmount) : JTemporal; cdecl; overload;      // (Ljava/time/temporal/TemporalAmount;)Ljava/time/temporal/Temporal; A: $1
    function minus(amountToSubtract : Int64; &unit : JTemporalUnit) : JTemporal; cdecl; overload;// (JLjava/time/temporal/TemporalUnit;)Ljava/time/temporal/Temporal; A: $1
    function plus(Int64param0 : Int64; JTemporalUnitparam1 : JTemporalUnit) : JTemporal; cdecl; overload;// (JLjava/time/temporal/TemporalUnit;)Ljava/time/temporal/Temporal; A: $401
    function plus(amount : JTemporalAmount) : JTemporal; cdecl; overload;       // (Ljava/time/temporal/TemporalAmount;)Ljava/time/temporal/Temporal; A: $1
  end;

  [JavaSignature('java/time/temporal/Temporal')]
  JTemporal = interface(JObject)
    ['{27F27223-DEAF-4703-844F-1C8655FF1159}']
    function &until(JTemporalparam0 : JTemporal; JTemporalUnitparam1 : JTemporalUnit) : Int64; cdecl;// (Ljava/time/temporal/Temporal;Ljava/time/temporal/TemporalUnit;)J A: $401
    function &with(JTemporalFieldparam0 : JTemporalField; Int64param1 : Int64) : JTemporal; cdecl; overload;// (Ljava/time/temporal/TemporalField;J)Ljava/time/temporal/Temporal; A: $401
    function &with(adjuster : JTemporalAdjuster) : JTemporal; cdecl; overload;  // (Ljava/time/temporal/TemporalAdjuster;)Ljava/time/temporal/Temporal; A: $1
    function isSupported(JTemporalUnitparam0 : JTemporalUnit) : boolean; cdecl; // (Ljava/time/temporal/TemporalUnit;)Z A: $401
    function minus(amount : JTemporalAmount) : JTemporal; cdecl; overload;      // (Ljava/time/temporal/TemporalAmount;)Ljava/time/temporal/Temporal; A: $1
    function minus(amountToSubtract : Int64; &unit : JTemporalUnit) : JTemporal; cdecl; overload;// (JLjava/time/temporal/TemporalUnit;)Ljava/time/temporal/Temporal; A: $1
    function plus(Int64param0 : Int64; JTemporalUnitparam1 : JTemporalUnit) : JTemporal; cdecl; overload;// (JLjava/time/temporal/TemporalUnit;)Ljava/time/temporal/Temporal; A: $401
    function plus(amount : JTemporalAmount) : JTemporal; cdecl; overload;       // (Ljava/time/temporal/TemporalAmount;)Ljava/time/temporal/Temporal; A: $1
  end;

  TJTemporal = class(TJavaGenericImport<JTemporalClass, JTemporal>)
  end;

  // Merged from: .\java.time.temporal.TemporalAdjuster.pas
  JTemporalAdjusterClass = interface(JObjectClass)
    ['{BDFD8BD4-CF41-41D3-A02A-BE2A20D0955E}']
    function adjustInto(JTemporalparam0 : JTemporal) : JTemporal; cdecl;        // (Ljava/time/temporal/Temporal;)Ljava/time/temporal/Temporal; A: $401
  end;

  [JavaSignature('java/time/temporal/TemporalAdjuster')]
  JTemporalAdjuster = interface(JObject)
    ['{1BDC7ECD-C46F-425D-A9A1-8BA37049BB5B}']
    function adjustInto(JTemporalparam0 : JTemporal) : JTemporal; cdecl;        // (Ljava/time/temporal/Temporal;)Ljava/time/temporal/Temporal; A: $401
  end;

  TJTemporalAdjuster = class(TJavaGenericImport<JTemporalAdjusterClass, JTemporalAdjuster>)
  end;


  // Merged from: .\java.time.temporal.TemporalField.pas
  JTemporalFieldClass = interface(JObjectClass)
    ['{C7F6F16E-C9B4-429C-A068-8262C45A957E}']
    function adjustInto(JTemporalparam0 : JTemporal; Int64param1 : Int64) : JTemporal; cdecl;// (Ljava/time/temporal/Temporal;J)Ljava/time/temporal/Temporal; A: $401
    function getBaseUnit : JTemporalUnit; cdecl;                                // ()Ljava/time/temporal/TemporalUnit; A: $401
    function getDisplayName(locale : JLocale) : JString; cdecl;                 // (Ljava/util/Locale;)Ljava/lang/String; A: $1
    function getFrom(JTemporalAccessorparam0 : JTemporalAccessor) : Int64; cdecl;// (Ljava/time/temporal/TemporalAccessor;)J A: $401
    function getRangeUnit : JTemporalUnit; cdecl;                               // ()Ljava/time/temporal/TemporalUnit; A: $401
    function isDateBased : boolean; cdecl;                                      // ()Z A: $401
    function isSupportedBy(JTemporalAccessorparam0 : JTemporalAccessor) : boolean; cdecl;// (Ljava/time/temporal/TemporalAccessor;)Z A: $401
    function isTimeBased : boolean; cdecl;                                      // ()Z A: $401
    function range : JValueRange; cdecl;                                        // ()Ljava/time/temporal/ValueRange; A: $401
    function rangeRefinedBy(JTemporalAccessorparam0 : JTemporalAccessor) : JValueRange; cdecl;// (Ljava/time/temporal/TemporalAccessor;)Ljava/time/temporal/ValueRange; A: $401
    function resolve(fieldValues : JMap; partialTemporal : JTemporalAccessor; resolverStyle : JResolverStyle) : JTemporalAccessor; cdecl;// (Ljava/util/Map;Ljava/time/temporal/TemporalAccessor;Ljava/time/format/ResolverStyle;)Ljava/time/temporal/TemporalAccessor; A: $1
    function toString : JString; cdecl;                                         // ()Ljava/lang/String; A: $401
  end;

  [JavaSignature('java/time/temporal/TemporalField')]
  JTemporalField = interface(JObject)
    ['{73573CF7-8AEF-415F-8E73-1056F247BBF6}']
    function adjustInto(JTemporalparam0 : JTemporal; Int64param1 : Int64) : JTemporal; cdecl;// (Ljava/time/temporal/Temporal;J)Ljava/time/temporal/Temporal; A: $401
    function getBaseUnit : JTemporalUnit; cdecl;                                // ()Ljava/time/temporal/TemporalUnit; A: $401
    function getDisplayName(locale : JLocale) : JString; cdecl;                 // (Ljava/util/Locale;)Ljava/lang/String; A: $1
    function getFrom(JTemporalAccessorparam0 : JTemporalAccessor) : Int64; cdecl;// (Ljava/time/temporal/TemporalAccessor;)J A: $401
    function getRangeUnit : JTemporalUnit; cdecl;                               // ()Ljava/time/temporal/TemporalUnit; A: $401
    function isDateBased : boolean; cdecl;                                      // ()Z A: $401
    function isSupportedBy(JTemporalAccessorparam0 : JTemporalAccessor) : boolean; cdecl;// (Ljava/time/temporal/TemporalAccessor;)Z A: $401
    function isTimeBased : boolean; cdecl;                                      // ()Z A: $401
    function range : JValueRange; cdecl;                                        // ()Ljava/time/temporal/ValueRange; A: $401
    function rangeRefinedBy(JTemporalAccessorparam0 : JTemporalAccessor) : JValueRange; cdecl;// (Ljava/time/temporal/TemporalAccessor;)Ljava/time/temporal/ValueRange; A: $401
    function resolve(fieldValues : JMap; partialTemporal : JTemporalAccessor; resolverStyle : JResolverStyle) : JTemporalAccessor; cdecl;// (Ljava/util/Map;Ljava/time/temporal/TemporalAccessor;Ljava/time/format/ResolverStyle;)Ljava/time/temporal/TemporalAccessor; A: $1
    function toString : JString; cdecl;                                         // ()Ljava/lang/String; A: $401
  end;

  TJTemporalField = class(TJavaGenericImport<JTemporalFieldClass, JTemporalField>)
  end;


  // Merged from: .\java.time.temporal.TemporalAmount.pas
  JTemporalAmountClass = interface(JObjectClass)
    ['{87E9BA21-9FC0-48DD-A23C-CA01AC24CCFC}']
    function addTo(JTemporalparam0 : JTemporal) : JTemporal; cdecl;             // (Ljava/time/temporal/Temporal;)Ljava/time/temporal/Temporal; A: $401
    function get(JTemporalUnitparam0 : JTemporalUnit) : Int64; cdecl;           // (Ljava/time/temporal/TemporalUnit;)J A: $401
    function getUnits : JList; cdecl;                                           // ()Ljava/util/List; A: $401
    function subtractFrom(JTemporalparam0 : JTemporal) : JTemporal; cdecl;      // (Ljava/time/temporal/Temporal;)Ljava/time/temporal/Temporal; A: $401
  end;

  [JavaSignature('java/time/temporal/TemporalAmount')]
  JTemporalAmount = interface(JObject)
    ['{62D22B57-538D-4775-B72E-8B8EDBA34785}']
    function addTo(JTemporalparam0 : JTemporal) : JTemporal; cdecl;             // (Ljava/time/temporal/Temporal;)Ljava/time/temporal/Temporal; A: $401
    function get(JTemporalUnitparam0 : JTemporalUnit) : Int64; cdecl;           // (Ljava/time/temporal/TemporalUnit;)J A: $401
    function getUnits : JList; cdecl;                                           // ()Ljava/util/List; A: $401
    function subtractFrom(JTemporalparam0 : JTemporal) : JTemporal; cdecl;      // (Ljava/time/temporal/Temporal;)Ljava/time/temporal/Temporal; A: $401
  end;

  TJTemporalAmount = class(TJavaGenericImport<JTemporalAmountClass, JTemporalAmount>)
  end;



  // Merged from: .\java.time.temporal.ValueRange.pas
  JValueRangeClass = interface(JObjectClass)
    ['{906F48C5-64DD-44DE-9EC3-1E1F27BA0960}']
    function &of(min : Int64; max : Int64) : JValueRange; cdecl; overload;      // (JJ)Ljava/time/temporal/ValueRange; A: $9
    function &of(min : Int64; maxSmallest : Int64; maxLargest : Int64) : JValueRange; cdecl; overload;// (JJJ)Ljava/time/temporal/ValueRange; A: $9
    function &of(minSmallest : Int64; minLargest : Int64; maxSmallest : Int64; maxLargest : Int64) : JValueRange; cdecl; overload;// (JJJJ)Ljava/time/temporal/ValueRange; A: $9
    function checkValidIntValue(value : Int64; field : JTemporalField) : Integer; cdecl;// (JLjava/time/temporal/TemporalField;)I A: $1
    function checkValidValue(value : Int64; field : JTemporalField) : Int64; cdecl;// (JLjava/time/temporal/TemporalField;)J A: $1
    function equals(obj : JObject) : boolean; cdecl;                            // (Ljava/lang/Object;)Z A: $1
    function getLargestMinimum : Int64; cdecl;                                  // ()J A: $1
    function getMaximum : Int64; cdecl;                                         // ()J A: $1
    function getMinimum : Int64; cdecl;                                         // ()J A: $1
    function getSmallestMaximum : Int64; cdecl;                                 // ()J A: $1
    function hashCode : Integer; cdecl;                                         // ()I A: $1
    function isFixed : boolean; cdecl;                                          // ()Z A: $1
    function isIntValue : boolean; cdecl;                                       // ()Z A: $1
    function isValidIntValue(value : Int64) : boolean; cdecl;                   // (J)Z A: $1
    function isValidValue(value : Int64) : boolean; cdecl;                      // (J)Z A: $1
    function toString : JString; cdecl;                                         // ()Ljava/lang/String; A: $1
  end;

  [JavaSignature('java/time/temporal/ValueRange')]
  JValueRange = interface(JObject)
    ['{B1723690-DB6E-47AC-9E65-18BFF09B6551}']
    function checkValidIntValue(value : Int64; field : JTemporalField) : Integer; cdecl;// (JLjava/time/temporal/TemporalField;)I A: $1
    function checkValidValue(value : Int64; field : JTemporalField) : Int64; cdecl;// (JLjava/time/temporal/TemporalField;)J A: $1
    function equals(obj : JObject) : boolean; cdecl;                            // (Ljava/lang/Object;)Z A: $1
    function getLargestMinimum : Int64; cdecl;                                  // ()J A: $1
    function getMaximum : Int64; cdecl;                                         // ()J A: $1
    function getMinimum : Int64; cdecl;                                         // ()J A: $1
    function getSmallestMaximum : Int64; cdecl;                                 // ()J A: $1
    function hashCode : Integer; cdecl;                                         // ()I A: $1
    function isFixed : boolean; cdecl;                                          // ()Z A: $1
    function isIntValue : boolean; cdecl;                                       // ()Z A: $1
    function isValidIntValue(value : Int64) : boolean; cdecl;                   // (J)Z A: $1
    function isValidValue(value : Int64) : boolean; cdecl;                      // (J)Z A: $1
    function toString : JString; cdecl;                                         // ()Ljava/lang/String; A: $1
  end;

  TJValueRange = class(TJavaGenericImport<JValueRangeClass, JValueRange>)
  end;


  // Merged from: .\java.time.temporal.TemporalAccessor.pas
  JTemporalAccessorClass = interface(JObjectClass)
    ['{4756AF87-D6D7-45DB-A38B-D0E895D80CCD}']
    function get(field : JTemporalField) : Integer; cdecl;                      // (Ljava/time/temporal/TemporalField;)I A: $1
    function getLong(JTemporalFieldparam0 : JTemporalField) : Int64; cdecl;     // (Ljava/time/temporal/TemporalField;)J A: $401
    function isSupported(JTemporalFieldparam0 : JTemporalField) : boolean; cdecl;// (Ljava/time/temporal/TemporalField;)Z A: $401
    function query(query : JTemporalQuery) : JObject; cdecl;                    // (Ljava/time/temporal/TemporalQuery;)Ljava/lang/Object; A: $1
    function range(field : JTemporalField) : JValueRange; cdecl;                // (Ljava/time/temporal/TemporalField;)Ljava/time/temporal/ValueRange; A: $1
  end;

  [JavaSignature('java/time/temporal/TemporalAccessor')]
  JTemporalAccessor = interface(JObject)
    ['{77148DF2-458E-4F6A-840C-399A4BEFC66F}']
    function get(field : JTemporalField) : Integer; cdecl;                      // (Ljava/time/temporal/TemporalField;)I A: $1
    function getLong(JTemporalFieldparam0 : JTemporalField) : Int64; cdecl;     // (Ljava/time/temporal/TemporalField;)J A: $401
    function isSupported(JTemporalFieldparam0 : JTemporalField) : boolean; cdecl;// (Ljava/time/temporal/TemporalField;)Z A: $401
    function query(query : JTemporalQuery) : JObject; cdecl;                    // (Ljava/time/temporal/TemporalQuery;)Ljava/lang/Object; A: $1
    function range(field : JTemporalField) : JValueRange; cdecl;                // (Ljava/time/temporal/TemporalField;)Ljava/time/temporal/ValueRange; A: $1
  end;

  TJTemporalAccessor = class(TJavaGenericImport<JTemporalAccessorClass, JTemporalAccessor>)
  end;

  // Merged from: .\java.time.temporal.TemporalQuery.pas
  JTemporalQueryClass = interface(JObjectClass)
    ['{148B8762-BCAF-4BE1-8D1B-7F19E7A4F915}']
    function queryFrom(JTemporalAccessorparam0 : JTemporalAccessor) : JObject; cdecl;// (Ljava/time/temporal/TemporalAccessor;)Ljava/lang/Object; A: $401
  end;

  [JavaSignature('java/time/temporal/TemporalQuery')]
  JTemporalQuery = interface(JObject)
    ['{B7F12667-CD62-4091-8F26-A9B8B62EC0C7}']
    function queryFrom(JTemporalAccessorparam0 : JTemporalAccessor) : JObject; cdecl;// (Ljava/time/temporal/TemporalAccessor;)Ljava/lang/Object; A: $401
  end;

  TJTemporalQuery = class(TJavaGenericImport<JTemporalQueryClass, JTemporalQuery>)
  end;



implementation

end.
