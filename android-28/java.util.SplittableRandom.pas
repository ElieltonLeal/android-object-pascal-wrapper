//
// Generated by JavaToPas v1.5 20180804 - 083300
////////////////////////////////////////////////////////////////////////////////
unit java.util.SplittableRandom;

interface

uses
  AndroidAPI.JNIBridge,
  Androidapi.JNI.JavaTypes,
  java.util.stream.DoubleStream;

type
  JSplittableRandom = interface;

  JSplittableRandomClass = interface(JObjectClass)
    ['{81DCDD8B-41A4-4D43-9BF0-C38E2D6A82EB}']
    function doubles : JDoubleStream; cdecl; overload;                          // ()Ljava/util/stream/DoubleStream; A: $1
    function doubles(randomNumberOrigin : Double; randomNumberBound : Double) : JDoubleStream; cdecl; overload;// (DD)Ljava/util/stream/DoubleStream; A: $1
    function doubles(streamSize : Int64) : JDoubleStream; cdecl; overload;      // (J)Ljava/util/stream/DoubleStream; A: $1
    function doubles(streamSize : Int64; randomNumberOrigin : Double; randomNumberBound : Double) : JDoubleStream; cdecl; overload;// (JDD)Ljava/util/stream/DoubleStream; A: $1
    function init : JSplittableRandom; cdecl; overload;                         // ()V A: $1
    function init(seed : Int64) : JSplittableRandom; cdecl; overload;           // (J)V A: $1
    function ints : JIntStream; cdecl; overload;                                // ()Ljava/util/stream/IntStream; A: $1
    function ints(randomNumberOrigin : Integer; randomNumberBound : Integer) : JIntStream; cdecl; overload;// (II)Ljava/util/stream/IntStream; A: $1
    function ints(streamSize : Int64) : JIntStream; cdecl; overload;            // (J)Ljava/util/stream/IntStream; A: $1
    function ints(streamSize : Int64; randomNumberOrigin : Integer; randomNumberBound : Integer) : JIntStream; cdecl; overload;// (JII)Ljava/util/stream/IntStream; A: $1
    function longs : JLongStream; cdecl; overload;                              // ()Ljava/util/stream/LongStream; A: $1
    function longs(randomNumberOrigin : Int64; randomNumberBound : Int64) : JLongStream; cdecl; overload;// (JJ)Ljava/util/stream/LongStream; A: $1
    function longs(streamSize : Int64) : JLongStream; cdecl; overload;          // (J)Ljava/util/stream/LongStream; A: $1
    function longs(streamSize : Int64; randomNumberOrigin : Int64; randomNumberBound : Int64) : JLongStream; cdecl; overload;// (JJJ)Ljava/util/stream/LongStream; A: $1
    function nextBoolean : boolean; cdecl;                                      // ()Z A: $1
    function nextDouble : Double; cdecl; overload;                              // ()D A: $1
    function nextDouble(bound : Double) : Double; cdecl; overload;              // (D)D A: $1
    function nextDouble(origin : Double; bound : Double) : Double; cdecl; overload;// (DD)D A: $1
    function nextInt : Integer; cdecl; overload;                                // ()I A: $1
    function nextInt(bound : Integer) : Integer; cdecl; overload;               // (I)I A: $1
    function nextInt(origin : Integer; bound : Integer) : Integer; cdecl; overload;// (II)I A: $1
    function nextLong : Int64; cdecl; overload;                                 // ()J A: $1
    function nextLong(bound : Int64) : Int64; cdecl; overload;                  // (J)J A: $1
    function nextLong(origin : Int64; bound : Int64) : Int64; cdecl; overload;  // (JJ)J A: $1
    function split : JSplittableRandom; cdecl;                                  // ()Ljava/util/SplittableRandom; A: $1
  end;

  [JavaSignature('java/util/SplittableRandom')]
  JSplittableRandom = interface(JObject)
    ['{9BD1E0E3-6D97-477C-BC8B-FAA5D91884C8}']
    function doubles : JDoubleStream; cdecl; overload;                          // ()Ljava/util/stream/DoubleStream; A: $1
    function doubles(randomNumberOrigin : Double; randomNumberBound : Double) : JDoubleStream; cdecl; overload;// (DD)Ljava/util/stream/DoubleStream; A: $1
    function doubles(streamSize : Int64) : JDoubleStream; cdecl; overload;      // (J)Ljava/util/stream/DoubleStream; A: $1
    function doubles(streamSize : Int64; randomNumberOrigin : Double; randomNumberBound : Double) : JDoubleStream; cdecl; overload;// (JDD)Ljava/util/stream/DoubleStream; A: $1
    function ints : JIntStream; cdecl; overload;                                // ()Ljava/util/stream/IntStream; A: $1
    function ints(randomNumberOrigin : Integer; randomNumberBound : Integer) : JIntStream; cdecl; overload;// (II)Ljava/util/stream/IntStream; A: $1
    function ints(streamSize : Int64) : JIntStream; cdecl; overload;            // (J)Ljava/util/stream/IntStream; A: $1
    function ints(streamSize : Int64; randomNumberOrigin : Integer; randomNumberBound : Integer) : JIntStream; cdecl; overload;// (JII)Ljava/util/stream/IntStream; A: $1
    function longs : JLongStream; cdecl; overload;                              // ()Ljava/util/stream/LongStream; A: $1
    function longs(randomNumberOrigin : Int64; randomNumberBound : Int64) : JLongStream; cdecl; overload;// (JJ)Ljava/util/stream/LongStream; A: $1
    function longs(streamSize : Int64) : JLongStream; cdecl; overload;          // (J)Ljava/util/stream/LongStream; A: $1
    function longs(streamSize : Int64; randomNumberOrigin : Int64; randomNumberBound : Int64) : JLongStream; cdecl; overload;// (JJJ)Ljava/util/stream/LongStream; A: $1
    function nextBoolean : boolean; cdecl;                                      // ()Z A: $1
    function nextDouble : Double; cdecl; overload;                              // ()D A: $1
    function nextDouble(bound : Double) : Double; cdecl; overload;              // (D)D A: $1
    function nextDouble(origin : Double; bound : Double) : Double; cdecl; overload;// (DD)D A: $1
    function nextInt : Integer; cdecl; overload;                                // ()I A: $1
    function nextInt(bound : Integer) : Integer; cdecl; overload;               // (I)I A: $1
    function nextInt(origin : Integer; bound : Integer) : Integer; cdecl; overload;// (II)I A: $1
    function nextLong : Int64; cdecl; overload;                                 // ()J A: $1
    function nextLong(bound : Int64) : Int64; cdecl; overload;                  // (J)J A: $1
    function nextLong(origin : Int64; bound : Int64) : Int64; cdecl; overload;  // (JJ)J A: $1
    function split : JSplittableRandom; cdecl;                                  // ()Ljava/util/SplittableRandom; A: $1
  end;

  TJSplittableRandom = class(TJavaGenericImport<JSplittableRandomClass, JSplittableRandom>)
  end;

implementation

end.
