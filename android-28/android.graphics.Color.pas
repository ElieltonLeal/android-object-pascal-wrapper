//
// Generated by JavaToPas v1.5 20180804 - 083224
////////////////////////////////////////////////////////////////////////////////
unit android.graphics.Color;

interface

uses
  AndroidAPI.JNIBridge,
  Androidapi.JNI.JavaTypes,
  android.graphics.ColorSpace,
  android.graphics.ColorSpace_Model;

type
  JColor = interface;

  JColorClass = interface(JObjectClass)
    ['{C3B31C39-B895-4934-92DA-5F3D77C64933}']
    function HSVToColor(alpha : Integer; hsv : TJavaArray<Single>) : Integer; cdecl; overload;// (I[F)I A: $9
    function HSVToColor(hsv : TJavaArray<Single>) : Integer; cdecl; overload;   // ([F)I A: $9
    function _GetBLACK : Integer; cdecl;                                        //  A: $19
    function _GetBLUE : Integer; cdecl;                                         //  A: $19
    function _GetCYAN : Integer; cdecl;                                         //  A: $19
    function _GetDKGRAY : Integer; cdecl;                                       //  A: $19
    function _GetGRAY : Integer; cdecl;                                         //  A: $19
    function _GetGREEN : Integer; cdecl;                                        //  A: $19
    function _GetLTGRAY : Integer; cdecl;                                       //  A: $19
    function _GetMAGENTA : Integer; cdecl;                                      //  A: $19
    function _GetRED : Integer; cdecl;                                          //  A: $19
    function _GetTRANSPARENT : Integer; cdecl;                                  //  A: $19
    function _GetWHITE : Integer; cdecl;                                        //  A: $19
    function _GetYELLOW : Integer; cdecl;                                       //  A: $19
    function alpha : Single; cdecl; overload;                                   // ()F A: $1
    function alpha(color : Int64) : Single; cdecl; overload;                    // (J)F A: $9
    function alpha(color : Integer) : Integer; cdecl; overload;                 // (I)I A: $9
    function argb(alpha : Integer; red : Integer; green : Integer; blue : Integer) : Integer; cdecl; overload;// (IIII)I A: $9
    function argb(alpha : Single; red : Single; green : Single; blue : Single) : Integer; cdecl; overload;// (FFFF)I A: $9
    function blue : Single; cdecl; overload;                                    // ()F A: $1
    function blue(color : Int64) : Single; cdecl; overload;                     // (J)F A: $9
    function blue(color : Integer) : Integer; cdecl; overload;                  // (I)I A: $9
    function colorSpace(color : Int64) : JColorSpace; cdecl;                    // (J)Landroid/graphics/ColorSpace; A: $9
    function convert(color : Int64; colorSpace : JColorSpace) : Int64; cdecl; overload;// (JLandroid/graphics/ColorSpace;)J A: $9
    function convert(color : Int64; connector : JColorSpace_Connector) : Int64; cdecl; overload;// (JLandroid/graphics/ColorSpace$Connector;)J A: $9
    function convert(color : Integer; colorSpace : JColorSpace) : Int64; cdecl; overload;// (ILandroid/graphics/ColorSpace;)J A: $9
    function convert(colorSpace : JColorSpace) : JColor; cdecl; overload;       // (Landroid/graphics/ColorSpace;)Landroid/graphics/Color; A: $1
    function convert(r : Single; g : Single; b : Single; a : Single; connector : JColorSpace_Connector) : Int64; cdecl; overload;// (FFFFLandroid/graphics/ColorSpace$Connector;)J A: $9
    function convert(r : Single; g : Single; b : Single; a : Single; source : JColorSpace; destination : JColorSpace) : Int64; cdecl; overload;// (FFFFLandroid/graphics/ColorSpace;Landroid/graphics/ColorSpace;)J A: $9
    function equals(o : JObject) : boolean; cdecl;                              // (Ljava/lang/Object;)Z A: $1
    function getColorSpace : JColorSpace; cdecl;                                // ()Landroid/graphics/ColorSpace; A: $1
    function getComponent(component : Integer) : Single; cdecl;                 // (I)F A: $1
    function getComponentCount : Integer; cdecl;                                // ()I A: $1
    function getComponents : TJavaArray<Single>; cdecl; overload;               // ()[F A: $1
    function getComponents(components : TJavaArray<Single>) : TJavaArray<Single>; cdecl; overload;// ([F)[F A: $1
    function getModel : JColorSpace_Model; cdecl;                               // ()Landroid/graphics/ColorSpace$Model; A: $1
    function green : Single; cdecl; overload;                                   // ()F A: $1
    function green(color : Int64) : Single; cdecl; overload;                    // (J)F A: $9
    function green(color : Integer) : Integer; cdecl; overload;                 // (I)I A: $9
    function hashCode : Integer; cdecl;                                         // ()I A: $1
    function init : JColor; cdecl;                                              // ()V A: $1
    function isInColorSpace(color : Int64; colorSpace : JColorSpace) : boolean; cdecl;// (JLandroid/graphics/ColorSpace;)Z A: $9
    function isSrgb : boolean; cdecl; overload;                                 // ()Z A: $1
    function isSrgb(color : Int64) : boolean; cdecl; overload;                  // (J)Z A: $9
    function isWideGamut : boolean; cdecl; overload;                            // ()Z A: $1
    function isWideGamut(color : Int64) : boolean; cdecl; overload;             // (J)Z A: $9
    function luminance : Single; cdecl; overload;                               // ()F A: $1
    function luminance(color : Int64) : Single; cdecl; overload;                // (J)F A: $9
    function luminance(color : Integer) : Single; cdecl; overload;              // (I)F A: $9
    function pack : Int64; cdecl; overload;                                     // ()J A: $1
    function pack(color : Integer) : Int64; cdecl; overload;                    // (I)J A: $9
    function pack(red : Single; green : Single; blue : Single) : Int64; cdecl; overload;// (FFF)J A: $9
    function pack(red : Single; green : Single; blue : Single; alpha : Single) : Int64; cdecl; overload;// (FFFF)J A: $9
    function pack(red : Single; green : Single; blue : Single; alpha : Single; colorSpace : JColorSpace) : Int64; cdecl; overload;// (FFFFLandroid/graphics/ColorSpace;)J A: $9
    function parseColor(colorString : JString) : Integer; cdecl;                // (Ljava/lang/String;)I A: $9
    function red : Single; cdecl; overload;                                     // ()F A: $1
    function red(color : Int64) : Single; cdecl; overload;                      // (J)F A: $9
    function red(color : Integer) : Integer; cdecl; overload;                   // (I)I A: $9
    function rgb(red : Integer; green : Integer; blue : Integer) : Integer; cdecl; overload;// (III)I A: $9
    function rgb(red : Single; green : Single; blue : Single) : Integer; cdecl; overload;// (FFF)I A: $9
    function toArgb : Integer; cdecl; overload;                                 // ()I A: $1
    function toArgb(color : Int64) : Integer; cdecl; overload;                  // (J)I A: $9
    function toString : JString; cdecl;                                         // ()Ljava/lang/String; A: $1
    function valueOf(color : Int64) : JColor; cdecl; overload;                  // (J)Landroid/graphics/Color; A: $9
    function valueOf(color : Integer) : JColor; cdecl; overload;                // (I)Landroid/graphics/Color; A: $9
    function valueOf(components : TJavaArray<Single>; colorSpace : JColorSpace) : JColor; cdecl; overload;// ([FLandroid/graphics/ColorSpace;)Landroid/graphics/Color; A: $9
    function valueOf(r : Single; g : Single; b : Single) : JColor; cdecl; overload;// (FFF)Landroid/graphics/Color; A: $9
    function valueOf(r : Single; g : Single; b : Single; a : Single) : JColor; cdecl; overload;// (FFFF)Landroid/graphics/Color; A: $9
    function valueOf(r : Single; g : Single; b : Single; a : Single; colorSpace : JColorSpace) : JColor; cdecl; overload;// (FFFFLandroid/graphics/ColorSpace;)Landroid/graphics/Color; A: $9
    procedure RGBToHSV(red : Integer; green : Integer; blue : Integer; hsv : TJavaArray<Single>) ; cdecl;// (III[F)V A: $9
    procedure colorToHSV(color : Integer; hsv : TJavaArray<Single>) ; cdecl;    // (I[F)V A: $9
    property BLACK : Integer read _GetBLACK;                                    // I A: $19
    property BLUE : Integer read _GetBLUE;                                      // I A: $19
    property CYAN : Integer read _GetCYAN;                                      // I A: $19
    property DKGRAY : Integer read _GetDKGRAY;                                  // I A: $19
    property GRAY : Integer read _GetGRAY;                                      // I A: $19
    property GREEN : Integer read _GetGREEN;                                    // I A: $19
    property LTGRAY : Integer read _GetLTGRAY;                                  // I A: $19
    property MAGENTA : Integer read _GetMAGENTA;                                // I A: $19
    property RED : Integer read _GetRED;                                        // I A: $19
    property TRANSPARENT : Integer read _GetTRANSPARENT;                        // I A: $19
    property WHITE : Integer read _GetWHITE;                                    // I A: $19
    property YELLOW : Integer read _GetYELLOW;                                  // I A: $19
  end;

  [JavaSignature('android/graphics/Color')]
  JColor = interface(JObject)
    ['{F290FCF9-40C6-4999-83CC-5AB4C7EAA1C8}']
    function alpha : Single; cdecl; overload;                                   // ()F A: $1
    function blue : Single; cdecl; overload;                                    // ()F A: $1
    function convert(colorSpace : JColorSpace) : JColor; cdecl; overload;       // (Landroid/graphics/ColorSpace;)Landroid/graphics/Color; A: $1
    function equals(o : JObject) : boolean; cdecl;                              // (Ljava/lang/Object;)Z A: $1
    function getColorSpace : JColorSpace; cdecl;                                // ()Landroid/graphics/ColorSpace; A: $1
    function getComponent(component : Integer) : Single; cdecl;                 // (I)F A: $1
    function getComponentCount : Integer; cdecl;                                // ()I A: $1
    function getComponents : TJavaArray<Single>; cdecl; overload;               // ()[F A: $1
    function getComponents(components : TJavaArray<Single>) : TJavaArray<Single>; cdecl; overload;// ([F)[F A: $1
    function getModel : JColorSpace_Model; cdecl;                               // ()Landroid/graphics/ColorSpace$Model; A: $1
    function green : Single; cdecl; overload;                                   // ()F A: $1
    function hashCode : Integer; cdecl;                                         // ()I A: $1
    function isSrgb : boolean; cdecl; overload;                                 // ()Z A: $1
    function isWideGamut : boolean; cdecl; overload;                            // ()Z A: $1
    function luminance : Single; cdecl; overload;                               // ()F A: $1
    function pack : Int64; cdecl; overload;                                     // ()J A: $1
    function red : Single; cdecl; overload;                                     // ()F A: $1
    function toArgb : Integer; cdecl; overload;                                 // ()I A: $1
    function toString : JString; cdecl;                                         // ()Ljava/lang/String; A: $1
  end;

  TJColor = class(TJavaGenericImport<JColorClass, JColor>)
  end;

const
  TJColorBLACK = -16777216;
  TJColorBLUE = -16776961;
  TJColorCYAN = -16711681;
  TJColorDKGRAY = -12303292;
  TJColorGRAY = -7829368;
  TJColorGREEN = -16711936;
  TJColorLTGRAY = -3355444;
  TJColorMAGENTA = -65281;
  TJColorRED = -65536;
  TJColorTRANSPARENT = 0;
  TJColorWHITE = -1;
  TJColorYELLOW = -256;

implementation

end.
