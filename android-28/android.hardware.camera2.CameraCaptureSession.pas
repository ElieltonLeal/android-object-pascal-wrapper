//
// Generated by JavaToPas v1.5 20180804 - 083115
////////////////////////////////////////////////////////////////////////////////
unit android.hardware.camera2.CameraCaptureSession;

interface

uses
  AndroidAPI.JNIBridge,
  Androidapi.JNI.JavaTypes,
  android.hardware.camera2.CameraDevice,
  android.view.Surface,
  android.hardware.camera2.CaptureRequest,
  Androidapi.JNI.os,
  java.util.concurrent.Executor,
  android.hardware.camera2.params.OutputConfiguration,
  android.hardware.camera2.CaptureResult,
  android.hardware.camera2.TotalCaptureResult,
  android.hardware.camera2.CaptureFailure;

type
  JCameraCaptureSession_CaptureCallback = interface; // merged
  JCameraCaptureSession = interface;

  JCameraCaptureSessionClass = interface(JObjectClass)
    ['{9E59C174-7D60-4F65-96E8-A93627815EDE}']
    function capture(JCaptureRequestparam0 : JCaptureRequest; JCameraCaptureSession_CaptureCallbackparam1 : JCameraCaptureSession_CaptureCallback; JHandlerparam2 : JHandler) : Integer; cdecl;// (Landroid/hardware/camera2/CaptureRequest;Landroid/hardware/camera2/CameraCaptureSession$CaptureCallback;Landroid/os/Handler;)I A: $401
    function captureBurst(JListparam0 : JList; JCameraCaptureSession_CaptureCallbackparam1 : JCameraCaptureSession_CaptureCallback; JHandlerparam2 : JHandler) : Integer; cdecl;// (Ljava/util/List;Landroid/hardware/camera2/CameraCaptureSession$CaptureCallback;Landroid/os/Handler;)I A: $401
    function captureBurstRequests(requests : JList; executor : JExecutor; listener : JCameraCaptureSession_CaptureCallback) : Integer; cdecl;// (Ljava/util/List;Ljava/util/concurrent/Executor;Landroid/hardware/camera2/CameraCaptureSession$CaptureCallback;)I A: $1
    function captureSingleRequest(request : JCaptureRequest; executor : JExecutor; listener : JCameraCaptureSession_CaptureCallback) : Integer; cdecl;// (Landroid/hardware/camera2/CaptureRequest;Ljava/util/concurrent/Executor;Landroid/hardware/camera2/CameraCaptureSession$CaptureCallback;)I A: $1
    function getDevice : JCameraDevice; cdecl;                                  // ()Landroid/hardware/camera2/CameraDevice; A: $401
    function getInputSurface : JSurface; cdecl;                                 // ()Landroid/view/Surface; A: $401
    function init : JCameraCaptureSession; cdecl;                               // ()V A: $1
    function isReprocessable : boolean; cdecl;                                  // ()Z A: $401
    function setRepeatingBurst(JListparam0 : JList; JCameraCaptureSession_CaptureCallbackparam1 : JCameraCaptureSession_CaptureCallback; JHandlerparam2 : JHandler) : Integer; cdecl;// (Ljava/util/List;Landroid/hardware/camera2/CameraCaptureSession$CaptureCallback;Landroid/os/Handler;)I A: $401
    function setRepeatingBurstRequests(requests : JList; executor : JExecutor; listener : JCameraCaptureSession_CaptureCallback) : Integer; cdecl;// (Ljava/util/List;Ljava/util/concurrent/Executor;Landroid/hardware/camera2/CameraCaptureSession$CaptureCallback;)I A: $1
    function setRepeatingRequest(JCaptureRequestparam0 : JCaptureRequest; JCameraCaptureSession_CaptureCallbackparam1 : JCameraCaptureSession_CaptureCallback; JHandlerparam2 : JHandler) : Integer; cdecl;// (Landroid/hardware/camera2/CaptureRequest;Landroid/hardware/camera2/CameraCaptureSession$CaptureCallback;Landroid/os/Handler;)I A: $401
    function setSingleRepeatingRequest(request : JCaptureRequest; executor : JExecutor; listener : JCameraCaptureSession_CaptureCallback) : Integer; cdecl;// (Landroid/hardware/camera2/CaptureRequest;Ljava/util/concurrent/Executor;Landroid/hardware/camera2/CameraCaptureSession$CaptureCallback;)I A: $1
    procedure abortCaptures ; cdecl;                                            // ()V A: $401
    procedure close ; cdecl;                                                    // ()V A: $401
    procedure finalizeOutputConfigurations(JListparam0 : JList) ; cdecl;        // (Ljava/util/List;)V A: $401
    procedure prepare(JSurfaceparam0 : JSurface) ; cdecl;                       // (Landroid/view/Surface;)V A: $401
    procedure stopRepeating ; cdecl;                                            // ()V A: $401
    procedure updateOutputConfiguration(config : JOutputConfiguration) ; cdecl; // (Landroid/hardware/camera2/params/OutputConfiguration;)V A: $1
  end;

  [JavaSignature('android/hardware/camera2/CameraCaptureSession$CaptureCallback')]
  JCameraCaptureSession = interface(JObject)
    ['{3E4E15CD-064B-4BC1-ACF4-48A8F5C402C8}']
    function capture(JCaptureRequestparam0 : JCaptureRequest; JCameraCaptureSession_CaptureCallbackparam1 : JCameraCaptureSession_CaptureCallback; JHandlerparam2 : JHandler) : Integer; cdecl;// (Landroid/hardware/camera2/CaptureRequest;Landroid/hardware/camera2/CameraCaptureSession$CaptureCallback;Landroid/os/Handler;)I A: $401
    function captureBurst(JListparam0 : JList; JCameraCaptureSession_CaptureCallbackparam1 : JCameraCaptureSession_CaptureCallback; JHandlerparam2 : JHandler) : Integer; cdecl;// (Ljava/util/List;Landroid/hardware/camera2/CameraCaptureSession$CaptureCallback;Landroid/os/Handler;)I A: $401
    function captureBurstRequests(requests : JList; executor : JExecutor; listener : JCameraCaptureSession_CaptureCallback) : Integer; cdecl;// (Ljava/util/List;Ljava/util/concurrent/Executor;Landroid/hardware/camera2/CameraCaptureSession$CaptureCallback;)I A: $1
    function captureSingleRequest(request : JCaptureRequest; executor : JExecutor; listener : JCameraCaptureSession_CaptureCallback) : Integer; cdecl;// (Landroid/hardware/camera2/CaptureRequest;Ljava/util/concurrent/Executor;Landroid/hardware/camera2/CameraCaptureSession$CaptureCallback;)I A: $1
    function getDevice : JCameraDevice; cdecl;                                  // ()Landroid/hardware/camera2/CameraDevice; A: $401
    function getInputSurface : JSurface; cdecl;                                 // ()Landroid/view/Surface; A: $401
    function isReprocessable : boolean; cdecl;                                  // ()Z A: $401
    function setRepeatingBurst(JListparam0 : JList; JCameraCaptureSession_CaptureCallbackparam1 : JCameraCaptureSession_CaptureCallback; JHandlerparam2 : JHandler) : Integer; cdecl;// (Ljava/util/List;Landroid/hardware/camera2/CameraCaptureSession$CaptureCallback;Landroid/os/Handler;)I A: $401
    function setRepeatingBurstRequests(requests : JList; executor : JExecutor; listener : JCameraCaptureSession_CaptureCallback) : Integer; cdecl;// (Ljava/util/List;Ljava/util/concurrent/Executor;Landroid/hardware/camera2/CameraCaptureSession$CaptureCallback;)I A: $1
    function setRepeatingRequest(JCaptureRequestparam0 : JCaptureRequest; JCameraCaptureSession_CaptureCallbackparam1 : JCameraCaptureSession_CaptureCallback; JHandlerparam2 : JHandler) : Integer; cdecl;// (Landroid/hardware/camera2/CaptureRequest;Landroid/hardware/camera2/CameraCaptureSession$CaptureCallback;Landroid/os/Handler;)I A: $401
    function setSingleRepeatingRequest(request : JCaptureRequest; executor : JExecutor; listener : JCameraCaptureSession_CaptureCallback) : Integer; cdecl;// (Landroid/hardware/camera2/CaptureRequest;Ljava/util/concurrent/Executor;Landroid/hardware/camera2/CameraCaptureSession$CaptureCallback;)I A: $1
    procedure abortCaptures ; cdecl;                                            // ()V A: $401
    procedure close ; cdecl;                                                    // ()V A: $401
    procedure finalizeOutputConfigurations(JListparam0 : JList) ; cdecl;        // (Ljava/util/List;)V A: $401
    procedure prepare(JSurfaceparam0 : JSurface) ; cdecl;                       // (Landroid/view/Surface;)V A: $401
    procedure stopRepeating ; cdecl;                                            // ()V A: $401
    procedure updateOutputConfiguration(config : JOutputConfiguration) ; cdecl; // (Landroid/hardware/camera2/params/OutputConfiguration;)V A: $1
  end;

  TJCameraCaptureSession = class(TJavaGenericImport<JCameraCaptureSessionClass, JCameraCaptureSession>)
  end;

  // Merged from: .\android.hardware.camera2.CameraCaptureSession_CaptureCallback.pas
  JCameraCaptureSession_CaptureCallbackClass = interface(JObjectClass)
    ['{D7262687-E9C6-4FE9-B718-533A80760690}']
    function init : JCameraCaptureSession_CaptureCallback; cdecl;               // ()V A: $1
    procedure onCaptureBufferLost(session : JCameraCaptureSession; request : JCaptureRequest; target : JSurface; frameNumber : Int64) ; cdecl;// (Landroid/hardware/camera2/CameraCaptureSession;Landroid/hardware/camera2/CaptureRequest;Landroid/view/Surface;J)V A: $1
    procedure onCaptureCompleted(session : JCameraCaptureSession; request : JCaptureRequest; result : JTotalCaptureResult) ; cdecl;// (Landroid/hardware/camera2/CameraCaptureSession;Landroid/hardware/camera2/CaptureRequest;Landroid/hardware/camera2/TotalCaptureResult;)V A: $1
    procedure onCaptureFailed(session : JCameraCaptureSession; request : JCaptureRequest; failure : JCaptureFailure) ; cdecl;// (Landroid/hardware/camera2/CameraCaptureSession;Landroid/hardware/camera2/CaptureRequest;Landroid/hardware/camera2/CaptureFailure;)V A: $1
    procedure onCaptureProgressed(session : JCameraCaptureSession; request : JCaptureRequest; partialResult : JCaptureResult) ; cdecl;// (Landroid/hardware/camera2/CameraCaptureSession;Landroid/hardware/camera2/CaptureRequest;Landroid/hardware/camera2/CaptureResult;)V A: $1
    procedure onCaptureSequenceAborted(session : JCameraCaptureSession; sequenceId : Integer) ; cdecl;// (Landroid/hardware/camera2/CameraCaptureSession;I)V A: $1
    procedure onCaptureSequenceCompleted(session : JCameraCaptureSession; sequenceId : Integer; frameNumber : Int64) ; cdecl;// (Landroid/hardware/camera2/CameraCaptureSession;IJ)V A: $1
    procedure onCaptureStarted(session : JCameraCaptureSession; request : JCaptureRequest; timestamp : Int64; frameNumber : Int64) ; cdecl;// (Landroid/hardware/camera2/CameraCaptureSession;Landroid/hardware/camera2/CaptureRequest;JJ)V A: $1
  end;

  [JavaSignature('android/hardware/camera2/CameraCaptureSession_CaptureCallback')]
  JCameraCaptureSession_CaptureCallback = interface(JObject)
    ['{C1110B5F-C473-4C5C-8D8F-C04FCC0FF102}']
    procedure onCaptureBufferLost(session : JCameraCaptureSession; request : JCaptureRequest; target : JSurface; frameNumber : Int64) ; cdecl;// (Landroid/hardware/camera2/CameraCaptureSession;Landroid/hardware/camera2/CaptureRequest;Landroid/view/Surface;J)V A: $1
    procedure onCaptureCompleted(session : JCameraCaptureSession; request : JCaptureRequest; result : JTotalCaptureResult) ; cdecl;// (Landroid/hardware/camera2/CameraCaptureSession;Landroid/hardware/camera2/CaptureRequest;Landroid/hardware/camera2/TotalCaptureResult;)V A: $1
    procedure onCaptureFailed(session : JCameraCaptureSession; request : JCaptureRequest; failure : JCaptureFailure) ; cdecl;// (Landroid/hardware/camera2/CameraCaptureSession;Landroid/hardware/camera2/CaptureRequest;Landroid/hardware/camera2/CaptureFailure;)V A: $1
    procedure onCaptureProgressed(session : JCameraCaptureSession; request : JCaptureRequest; partialResult : JCaptureResult) ; cdecl;// (Landroid/hardware/camera2/CameraCaptureSession;Landroid/hardware/camera2/CaptureRequest;Landroid/hardware/camera2/CaptureResult;)V A: $1
    procedure onCaptureSequenceAborted(session : JCameraCaptureSession; sequenceId : Integer) ; cdecl;// (Landroid/hardware/camera2/CameraCaptureSession;I)V A: $1
    procedure onCaptureSequenceCompleted(session : JCameraCaptureSession; sequenceId : Integer; frameNumber : Int64) ; cdecl;// (Landroid/hardware/camera2/CameraCaptureSession;IJ)V A: $1
    procedure onCaptureStarted(session : JCameraCaptureSession; request : JCaptureRequest; timestamp : Int64; frameNumber : Int64) ; cdecl;// (Landroid/hardware/camera2/CameraCaptureSession;Landroid/hardware/camera2/CaptureRequest;JJ)V A: $1
  end;

  TJCameraCaptureSession_CaptureCallback = class(TJavaGenericImport<JCameraCaptureSession_CaptureCallbackClass, JCameraCaptureSession_CaptureCallback>)
  end;


implementation

end.
