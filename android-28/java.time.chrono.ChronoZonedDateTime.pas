//
// Generated by JavaToPas v1.5 20180804 - 083309
////////////////////////////////////////////////////////////////////////////////
unit java.time.chrono.ChronoZonedDateTime;

interface

uses
  AndroidAPI.JNIBridge,
  Androidapi.JNI.JavaTypes,
  java.time.chrono.ChronoLocalDate,
  java.time.Duration;

type
  JChronoZonedDateTime = interface;

  JChronoZonedDateTimeClass = interface(JObjectClass)
    ['{0B9F5BC0-EBE0-4C79-87FF-4C8350920AF2}']
    function &with(JTemporalFieldparam0 : JTemporalField; Int64param1 : Int64) : JChronoZonedDateTime; cdecl; overload;// (Ljava/time/temporal/TemporalField;J)Ljava/time/chrono/ChronoZonedDateTime; A: $401
    function &with(adjuster : JTemporalAdjuster) : JChronoZonedDateTime; cdecl; overload;// (Ljava/time/temporal/TemporalAdjuster;)Ljava/time/chrono/ChronoZonedDateTime; A: $1
    function compareTo(other : JChronoZonedDateTime) : Integer; cdecl;          // (Ljava/time/chrono/ChronoZonedDateTime;)I A: $1
    function equals(JObjectparam0 : JObject) : boolean; cdecl;                  // (Ljava/lang/Object;)Z A: $401
    function format(formatter : JDateTimeFormatter) : JString; cdecl;           // (Ljava/time/format/DateTimeFormatter;)Ljava/lang/String; A: $1
    function from(temporal : JTemporalAccessor) : JChronoZonedDateTime; cdecl;  // (Ljava/time/temporal/TemporalAccessor;)Ljava/time/chrono/ChronoZonedDateTime; A: $9
    function get(field : JTemporalField) : Integer; cdecl;                      // (Ljava/time/temporal/TemporalField;)I A: $1
    function getChronology : JChronology; cdecl;                                // ()Ljava/time/chrono/Chronology; A: $1
    function getLong(field : JTemporalField) : Int64; cdecl;                    // (Ljava/time/temporal/TemporalField;)J A: $1
    function getOffset : JZoneOffset; cdecl;                                    // ()Ljava/time/ZoneOffset; A: $401
    function getZone : JZoneId; cdecl;                                          // ()Ljava/time/ZoneId; A: $401
    function hashCode : Integer; cdecl;                                         // ()I A: $401
    function isAfter(other : JChronoZonedDateTime) : boolean; cdecl;            // (Ljava/time/chrono/ChronoZonedDateTime;)Z A: $1
    function isBefore(other : JChronoZonedDateTime) : boolean; cdecl;           // (Ljava/time/chrono/ChronoZonedDateTime;)Z A: $1
    function isEqual(other : JChronoZonedDateTime) : boolean; cdecl;            // (Ljava/time/chrono/ChronoZonedDateTime;)Z A: $1
    function isSupported(&unit : JTemporalUnit) : boolean; cdecl; overload;     // (Ljava/time/temporal/TemporalUnit;)Z A: $1
    function isSupported(JTemporalFieldparam0 : JTemporalField) : boolean; cdecl; overload;// (Ljava/time/temporal/TemporalField;)Z A: $401
    function minus(amount : JTemporalAmount) : JChronoZonedDateTime; cdecl; overload;// (Ljava/time/temporal/TemporalAmount;)Ljava/time/chrono/ChronoZonedDateTime; A: $1
    function minus(amountToSubtract : Int64; &unit : JTemporalUnit) : JChronoZonedDateTime; cdecl; overload;// (JLjava/time/temporal/TemporalUnit;)Ljava/time/chrono/ChronoZonedDateTime; A: $1
    function plus(Int64param0 : Int64; JTemporalUnitparam1 : JTemporalUnit) : JChronoZonedDateTime; cdecl; overload;// (JLjava/time/temporal/TemporalUnit;)Ljava/time/chrono/ChronoZonedDateTime; A: $401
    function plus(amount : JTemporalAmount) : JChronoZonedDateTime; cdecl; overload;// (Ljava/time/temporal/TemporalAmount;)Ljava/time/chrono/ChronoZonedDateTime; A: $1
    function query(query : JTemporalQuery) : JObject; cdecl;                    // (Ljava/time/temporal/TemporalQuery;)Ljava/lang/Object; A: $1
    function range(field : JTemporalField) : JValueRange; cdecl;                // (Ljava/time/temporal/TemporalField;)Ljava/time/temporal/ValueRange; A: $1
    function timeLineOrder : JComparator; cdecl;                                // ()Ljava/util/Comparator; A: $9
    function toEpochSecond : Int64; cdecl;                                      // ()J A: $1
    function toInstant : JInstant; cdecl;                                       // ()Ljava/time/Instant; A: $1
    function toLocalDate : JChronoLocalDate; cdecl;                             // ()Ljava/time/chrono/ChronoLocalDate; A: $1
    function toLocalDateTime : JChronoLocalDateTime; cdecl;                     // ()Ljava/time/chrono/ChronoLocalDateTime; A: $401
    function toLocalTime : JLocalTime; cdecl;                                   // ()Ljava/time/LocalTime; A: $1
    function toString : JString; cdecl;                                         // ()Ljava/lang/String; A: $401
    function withEarlierOffsetAtOverlap : JChronoZonedDateTime; cdecl;          // ()Ljava/time/chrono/ChronoZonedDateTime; A: $401
    function withLaterOffsetAtOverlap : JChronoZonedDateTime; cdecl;            // ()Ljava/time/chrono/ChronoZonedDateTime; A: $401
    function withZoneSameInstant(JZoneIdparam0 : JZoneId) : JChronoZonedDateTime; cdecl;// (Ljava/time/ZoneId;)Ljava/time/chrono/ChronoZonedDateTime; A: $401
    function withZoneSameLocal(JZoneIdparam0 : JZoneId) : JChronoZonedDateTime; cdecl;// (Ljava/time/ZoneId;)Ljava/time/chrono/ChronoZonedDateTime; A: $401
  end;

  [JavaSignature('java/time/chrono/ChronoZonedDateTime')]
  JChronoZonedDateTime = interface(JObject)
    ['{5815CC09-CB3F-4D4D-9C0A-ADA3FAB4C1B8}']
    function &with(JTemporalFieldparam0 : JTemporalField; Int64param1 : Int64) : JChronoZonedDateTime; cdecl; overload;// (Ljava/time/temporal/TemporalField;J)Ljava/time/chrono/ChronoZonedDateTime; A: $401
    function &with(adjuster : JTemporalAdjuster) : JChronoZonedDateTime; cdecl; overload;// (Ljava/time/temporal/TemporalAdjuster;)Ljava/time/chrono/ChronoZonedDateTime; A: $1
    function compareTo(other : JChronoZonedDateTime) : Integer; cdecl;          // (Ljava/time/chrono/ChronoZonedDateTime;)I A: $1
    function equals(JObjectparam0 : JObject) : boolean; cdecl;                  // (Ljava/lang/Object;)Z A: $401
    function format(formatter : JDateTimeFormatter) : JString; cdecl;           // (Ljava/time/format/DateTimeFormatter;)Ljava/lang/String; A: $1
    function get(field : JTemporalField) : Integer; cdecl;                      // (Ljava/time/temporal/TemporalField;)I A: $1
    function getChronology : JChronology; cdecl;                                // ()Ljava/time/chrono/Chronology; A: $1
    function getLong(field : JTemporalField) : Int64; cdecl;                    // (Ljava/time/temporal/TemporalField;)J A: $1
    function getOffset : JZoneOffset; cdecl;                                    // ()Ljava/time/ZoneOffset; A: $401
    function getZone : JZoneId; cdecl;                                          // ()Ljava/time/ZoneId; A: $401
    function hashCode : Integer; cdecl;                                         // ()I A: $401
    function isAfter(other : JChronoZonedDateTime) : boolean; cdecl;            // (Ljava/time/chrono/ChronoZonedDateTime;)Z A: $1
    function isBefore(other : JChronoZonedDateTime) : boolean; cdecl;           // (Ljava/time/chrono/ChronoZonedDateTime;)Z A: $1
    function isEqual(other : JChronoZonedDateTime) : boolean; cdecl;            // (Ljava/time/chrono/ChronoZonedDateTime;)Z A: $1
    function isSupported(&unit : JTemporalUnit) : boolean; cdecl; overload;     // (Ljava/time/temporal/TemporalUnit;)Z A: $1
    function isSupported(JTemporalFieldparam0 : JTemporalField) : boolean; cdecl; overload;// (Ljava/time/temporal/TemporalField;)Z A: $401
    function minus(amount : JTemporalAmount) : JChronoZonedDateTime; cdecl; overload;// (Ljava/time/temporal/TemporalAmount;)Ljava/time/chrono/ChronoZonedDateTime; A: $1
    function minus(amountToSubtract : Int64; &unit : JTemporalUnit) : JChronoZonedDateTime; cdecl; overload;// (JLjava/time/temporal/TemporalUnit;)Ljava/time/chrono/ChronoZonedDateTime; A: $1
    function plus(Int64param0 : Int64; JTemporalUnitparam1 : JTemporalUnit) : JChronoZonedDateTime; cdecl; overload;// (JLjava/time/temporal/TemporalUnit;)Ljava/time/chrono/ChronoZonedDateTime; A: $401
    function plus(amount : JTemporalAmount) : JChronoZonedDateTime; cdecl; overload;// (Ljava/time/temporal/TemporalAmount;)Ljava/time/chrono/ChronoZonedDateTime; A: $1
    function query(query : JTemporalQuery) : JObject; cdecl;                    // (Ljava/time/temporal/TemporalQuery;)Ljava/lang/Object; A: $1
    function range(field : JTemporalField) : JValueRange; cdecl;                // (Ljava/time/temporal/TemporalField;)Ljava/time/temporal/ValueRange; A: $1
    function toEpochSecond : Int64; cdecl;                                      // ()J A: $1
    function toInstant : JInstant; cdecl;                                       // ()Ljava/time/Instant; A: $1
    function toLocalDate : JChronoLocalDate; cdecl;                             // ()Ljava/time/chrono/ChronoLocalDate; A: $1
    function toLocalDateTime : JChronoLocalDateTime; cdecl;                     // ()Ljava/time/chrono/ChronoLocalDateTime; A: $401
    function toLocalTime : JLocalTime; cdecl;                                   // ()Ljava/time/LocalTime; A: $1
    function toString : JString; cdecl;                                         // ()Ljava/lang/String; A: $401
    function withEarlierOffsetAtOverlap : JChronoZonedDateTime; cdecl;          // ()Ljava/time/chrono/ChronoZonedDateTime; A: $401
    function withLaterOffsetAtOverlap : JChronoZonedDateTime; cdecl;            // ()Ljava/time/chrono/ChronoZonedDateTime; A: $401
    function withZoneSameInstant(JZoneIdparam0 : JZoneId) : JChronoZonedDateTime; cdecl;// (Ljava/time/ZoneId;)Ljava/time/chrono/ChronoZonedDateTime; A: $401
    function withZoneSameLocal(JZoneIdparam0 : JZoneId) : JChronoZonedDateTime; cdecl;// (Ljava/time/ZoneId;)Ljava/time/chrono/ChronoZonedDateTime; A: $401
  end;

  TJChronoZonedDateTime = class(TJavaGenericImport<JChronoZonedDateTimeClass, JChronoZonedDateTime>)
  end;

implementation

end.
