//
// Generated by JavaToPas v1.5 20140918 - 093058
////////////////////////////////////////////////////////////////////////////////
unit android.app.admin.DevicePolicyManager;

interface

uses
  AndroidAPI.JNIBridge,
  Androidapi.JNI.JavaTypes,
  android.content.ComponentName;

type
  JDevicePolicyManager = interface;

  JDevicePolicyManagerClass = interface(JObjectClass)
    ['{C7477F70-610F-490F-AF74-30383D0396F7}']
    function _GetACTION_ADD_DEVICE_ADMIN : JString; cdecl;                      //  A: $19
    function _GetACTION_SET_NEW_PASSWORD : JString; cdecl;                      //  A: $19
    function _GetACTION_START_ENCRYPTION : JString; cdecl;                      //  A: $19
    function _GetENCRYPTION_STATUS_ACTIVATING : Integer; cdecl;                 //  A: $19
    function _GetENCRYPTION_STATUS_ACTIVE : Integer; cdecl;                     //  A: $19
    function _GetENCRYPTION_STATUS_INACTIVE : Integer; cdecl;                   //  A: $19
    function _GetENCRYPTION_STATUS_UNSUPPORTED : Integer; cdecl;                //  A: $19
    function _GetEXTRA_ADD_EXPLANATION : JString; cdecl;                        //  A: $19
    function _GetEXTRA_DEVICE_ADMIN : JString; cdecl;                           //  A: $19
    function _GetKEYGUARD_DISABLE_FEATURES_ALL : Integer; cdecl;                //  A: $19
    function _GetKEYGUARD_DISABLE_FEATURES_NONE : Integer; cdecl;               //  A: $19
    function _GetKEYGUARD_DISABLE_SECURE_CAMERA : Integer; cdecl;               //  A: $19
    function _GetKEYGUARD_DISABLE_WIDGETS_ALL : Integer; cdecl;                 //  A: $19
    function _GetPASSWORD_QUALITY_ALPHABETIC : Integer; cdecl;                  //  A: $19
    function _GetPASSWORD_QUALITY_ALPHANUMERIC : Integer; cdecl;                //  A: $19
    function _GetPASSWORD_QUALITY_BIOMETRIC_WEAK : Integer; cdecl;              //  A: $19
    function _GetPASSWORD_QUALITY_COMPLEX : Integer; cdecl;                     //  A: $19
    function _GetPASSWORD_QUALITY_NUMERIC : Integer; cdecl;                     //  A: $19
    function _GetPASSWORD_QUALITY_SOMETHING : Integer; cdecl;                   //  A: $19
    function _GetPASSWORD_QUALITY_UNSPECIFIED : Integer; cdecl;                 //  A: $19
    function _GetRESET_PASSWORD_REQUIRE_ENTRY : Integer; cdecl;                 //  A: $19
    function _GetWIPE_EXTERNAL_STORAGE : Integer; cdecl;                        //  A: $19
    function getActiveAdmins : JList; cdecl;                                    // ()Ljava/util/List; A: $1
    function getCameraDisabled(admin : JComponentName) : boolean; cdecl;        // (Landroid/content/ComponentName;)Z A: $1
    function getCurrentFailedPasswordAttempts : Integer; cdecl;                 // ()I A: $1
    function getKeyguardDisabledFeatures(admin : JComponentName) : Integer; cdecl;// (Landroid/content/ComponentName;)I A: $1
    function getMaximumFailedPasswordsForWipe(admin : JComponentName) : Integer; cdecl;// (Landroid/content/ComponentName;)I A: $1
    function getMaximumTimeToLock(admin : JComponentName) : Int64; cdecl;       // (Landroid/content/ComponentName;)J A: $1
    function getPasswordExpiration(admin : JComponentName) : Int64; cdecl;      // (Landroid/content/ComponentName;)J A: $1
    function getPasswordExpirationTimeout(admin : JComponentName) : Int64; cdecl;// (Landroid/content/ComponentName;)J A: $1
    function getPasswordHistoryLength(admin : JComponentName) : Integer; cdecl; // (Landroid/content/ComponentName;)I A: $1
    function getPasswordMaximumLength(quality : Integer) : Integer; cdecl;      // (I)I A: $1
    function getPasswordMinimumLength(admin : JComponentName) : Integer; cdecl; // (Landroid/content/ComponentName;)I A: $1
    function getPasswordMinimumLetters(admin : JComponentName) : Integer; cdecl;// (Landroid/content/ComponentName;)I A: $1
    function getPasswordMinimumLowerCase(admin : JComponentName) : Integer; cdecl;// (Landroid/content/ComponentName;)I A: $1
    function getPasswordMinimumNonLetter(admin : JComponentName) : Integer; cdecl;// (Landroid/content/ComponentName;)I A: $1
    function getPasswordMinimumNumeric(admin : JComponentName) : Integer; cdecl;// (Landroid/content/ComponentName;)I A: $1
    function getPasswordMinimumSymbols(admin : JComponentName) : Integer; cdecl;// (Landroid/content/ComponentName;)I A: $1
    function getPasswordMinimumUpperCase(admin : JComponentName) : Integer; cdecl;// (Landroid/content/ComponentName;)I A: $1
    function getPasswordQuality(admin : JComponentName) : Integer; cdecl;       // (Landroid/content/ComponentName;)I A: $1
    function getStorageEncryption(admin : JComponentName) : boolean; cdecl;     // (Landroid/content/ComponentName;)Z A: $1
    function getStorageEncryptionStatus : Integer; cdecl;                       // ()I A: $1
    function hasGrantedPolicy(admin : JComponentName; usesPolicy : Integer) : boolean; cdecl;// (Landroid/content/ComponentName;I)Z A: $1
    function isActivePasswordSufficient : boolean; cdecl;                       // ()Z A: $1
    function isAdminActive(who : JComponentName) : boolean; cdecl;              // (Landroid/content/ComponentName;)Z A: $1
    function isDeviceOwnerApp(packageName : JString) : boolean; cdecl;          // (Ljava/lang/String;)Z A: $1
    function resetPassword(password : JString; flags : Integer) : boolean; cdecl;// (Ljava/lang/String;I)Z A: $1
    function setStorageEncryption(admin : JComponentName; encrypt : boolean) : Integer; cdecl;// (Landroid/content/ComponentName;Z)I A: $1
    procedure lockNow ; cdecl;                                                  // ()V A: $1
    procedure removeActiveAdmin(who : JComponentName) ; cdecl;                  // (Landroid/content/ComponentName;)V A: $1
    procedure setCameraDisabled(admin : JComponentName; disabled : boolean) ; cdecl;// (Landroid/content/ComponentName;Z)V A: $1
    procedure setKeyguardDisabledFeatures(admin : JComponentName; which : Integer) ; cdecl;// (Landroid/content/ComponentName;I)V A: $1
    procedure setMaximumFailedPasswordsForWipe(admin : JComponentName; num : Integer) ; cdecl;// (Landroid/content/ComponentName;I)V A: $1
    procedure setMaximumTimeToLock(admin : JComponentName; timeMs : Int64) ; cdecl;// (Landroid/content/ComponentName;J)V A: $1
    procedure setPasswordExpirationTimeout(admin : JComponentName; timeout : Int64) ; cdecl;// (Landroid/content/ComponentName;J)V A: $1
    procedure setPasswordHistoryLength(admin : JComponentName; length : Integer) ; cdecl;// (Landroid/content/ComponentName;I)V A: $1
    procedure setPasswordMinimumLength(admin : JComponentName; length : Integer) ; cdecl;// (Landroid/content/ComponentName;I)V A: $1
    procedure setPasswordMinimumLetters(admin : JComponentName; length : Integer) ; cdecl;// (Landroid/content/ComponentName;I)V A: $1
    procedure setPasswordMinimumLowerCase(admin : JComponentName; length : Integer) ; cdecl;// (Landroid/content/ComponentName;I)V A: $1
    procedure setPasswordMinimumNonLetter(admin : JComponentName; length : Integer) ; cdecl;// (Landroid/content/ComponentName;I)V A: $1
    procedure setPasswordMinimumNumeric(admin : JComponentName; length : Integer) ; cdecl;// (Landroid/content/ComponentName;I)V A: $1
    procedure setPasswordMinimumSymbols(admin : JComponentName; length : Integer) ; cdecl;// (Landroid/content/ComponentName;I)V A: $1
    procedure setPasswordMinimumUpperCase(admin : JComponentName; length : Integer) ; cdecl;// (Landroid/content/ComponentName;I)V A: $1
    procedure setPasswordQuality(admin : JComponentName; quality : Integer) ; cdecl;// (Landroid/content/ComponentName;I)V A: $1
    procedure wipeData(flags : Integer) ; cdecl;                                // (I)V A: $1
    property ACTION_ADD_DEVICE_ADMIN : JString read _GetACTION_ADD_DEVICE_ADMIN;// Ljava/lang/String; A: $19
    property ACTION_SET_NEW_PASSWORD : JString read _GetACTION_SET_NEW_PASSWORD;// Ljava/lang/String; A: $19
    property ACTION_START_ENCRYPTION : JString read _GetACTION_START_ENCRYPTION;// Ljava/lang/String; A: $19
    property ENCRYPTION_STATUS_ACTIVATING : Integer read _GetENCRYPTION_STATUS_ACTIVATING;// I A: $19
    property ENCRYPTION_STATUS_ACTIVE : Integer read _GetENCRYPTION_STATUS_ACTIVE;// I A: $19
    property ENCRYPTION_STATUS_INACTIVE : Integer read _GetENCRYPTION_STATUS_INACTIVE;// I A: $19
    property ENCRYPTION_STATUS_UNSUPPORTED : Integer read _GetENCRYPTION_STATUS_UNSUPPORTED;// I A: $19
    property EXTRA_ADD_EXPLANATION : JString read _GetEXTRA_ADD_EXPLANATION;    // Ljava/lang/String; A: $19
    property EXTRA_DEVICE_ADMIN : JString read _GetEXTRA_DEVICE_ADMIN;          // Ljava/lang/String; A: $19
    property KEYGUARD_DISABLE_FEATURES_ALL : Integer read _GetKEYGUARD_DISABLE_FEATURES_ALL;// I A: $19
    property KEYGUARD_DISABLE_FEATURES_NONE : Integer read _GetKEYGUARD_DISABLE_FEATURES_NONE;// I A: $19
    property KEYGUARD_DISABLE_SECURE_CAMERA : Integer read _GetKEYGUARD_DISABLE_SECURE_CAMERA;// I A: $19
    property KEYGUARD_DISABLE_WIDGETS_ALL : Integer read _GetKEYGUARD_DISABLE_WIDGETS_ALL;// I A: $19
    property PASSWORD_QUALITY_ALPHABETIC : Integer read _GetPASSWORD_QUALITY_ALPHABETIC;// I A: $19
    property PASSWORD_QUALITY_ALPHANUMERIC : Integer read _GetPASSWORD_QUALITY_ALPHANUMERIC;// I A: $19
    property PASSWORD_QUALITY_BIOMETRIC_WEAK : Integer read _GetPASSWORD_QUALITY_BIOMETRIC_WEAK;// I A: $19
    property PASSWORD_QUALITY_COMPLEX : Integer read _GetPASSWORD_QUALITY_COMPLEX;// I A: $19
    property PASSWORD_QUALITY_NUMERIC : Integer read _GetPASSWORD_QUALITY_NUMERIC;// I A: $19
    property PASSWORD_QUALITY_SOMETHING : Integer read _GetPASSWORD_QUALITY_SOMETHING;// I A: $19
    property PASSWORD_QUALITY_UNSPECIFIED : Integer read _GetPASSWORD_QUALITY_UNSPECIFIED;// I A: $19
    property RESET_PASSWORD_REQUIRE_ENTRY : Integer read _GetRESET_PASSWORD_REQUIRE_ENTRY;// I A: $19
    property WIPE_EXTERNAL_STORAGE : Integer read _GetWIPE_EXTERNAL_STORAGE;    // I A: $19
  end;

  [JavaSignature('android/app/admin/DevicePolicyManager')]
  JDevicePolicyManager = interface(JObject)
    ['{9A68C8B0-DF92-4DB7-B4B4-C6D79EA1F3B5}']
    function getActiveAdmins : JList; cdecl;                                    // ()Ljava/util/List; A: $1
    function getCameraDisabled(admin : JComponentName) : boolean; cdecl;        // (Landroid/content/ComponentName;)Z A: $1
    function getCurrentFailedPasswordAttempts : Integer; cdecl;                 // ()I A: $1
    function getKeyguardDisabledFeatures(admin : JComponentName) : Integer; cdecl;// (Landroid/content/ComponentName;)I A: $1
    function getMaximumFailedPasswordsForWipe(admin : JComponentName) : Integer; cdecl;// (Landroid/content/ComponentName;)I A: $1
    function getMaximumTimeToLock(admin : JComponentName) : Int64; cdecl;       // (Landroid/content/ComponentName;)J A: $1
    function getPasswordExpiration(admin : JComponentName) : Int64; cdecl;      // (Landroid/content/ComponentName;)J A: $1
    function getPasswordExpirationTimeout(admin : JComponentName) : Int64; cdecl;// (Landroid/content/ComponentName;)J A: $1
    function getPasswordHistoryLength(admin : JComponentName) : Integer; cdecl; // (Landroid/content/ComponentName;)I A: $1
    function getPasswordMaximumLength(quality : Integer) : Integer; cdecl;      // (I)I A: $1
    function getPasswordMinimumLength(admin : JComponentName) : Integer; cdecl; // (Landroid/content/ComponentName;)I A: $1
    function getPasswordMinimumLetters(admin : JComponentName) : Integer; cdecl;// (Landroid/content/ComponentName;)I A: $1
    function getPasswordMinimumLowerCase(admin : JComponentName) : Integer; cdecl;// (Landroid/content/ComponentName;)I A: $1
    function getPasswordMinimumNonLetter(admin : JComponentName) : Integer; cdecl;// (Landroid/content/ComponentName;)I A: $1
    function getPasswordMinimumNumeric(admin : JComponentName) : Integer; cdecl;// (Landroid/content/ComponentName;)I A: $1
    function getPasswordMinimumSymbols(admin : JComponentName) : Integer; cdecl;// (Landroid/content/ComponentName;)I A: $1
    function getPasswordMinimumUpperCase(admin : JComponentName) : Integer; cdecl;// (Landroid/content/ComponentName;)I A: $1
    function getPasswordQuality(admin : JComponentName) : Integer; cdecl;       // (Landroid/content/ComponentName;)I A: $1
    function getStorageEncryption(admin : JComponentName) : boolean; cdecl;     // (Landroid/content/ComponentName;)Z A: $1
    function getStorageEncryptionStatus : Integer; cdecl;                       // ()I A: $1
    function hasGrantedPolicy(admin : JComponentName; usesPolicy : Integer) : boolean; cdecl;// (Landroid/content/ComponentName;I)Z A: $1
    function isActivePasswordSufficient : boolean; cdecl;                       // ()Z A: $1
    function isAdminActive(who : JComponentName) : boolean; cdecl;              // (Landroid/content/ComponentName;)Z A: $1
    function isDeviceOwnerApp(packageName : JString) : boolean; cdecl;          // (Ljava/lang/String;)Z A: $1
    function resetPassword(password : JString; flags : Integer) : boolean; cdecl;// (Ljava/lang/String;I)Z A: $1
    function setStorageEncryption(admin : JComponentName; encrypt : boolean) : Integer; cdecl;// (Landroid/content/ComponentName;Z)I A: $1
    procedure lockNow ; cdecl;                                                  // ()V A: $1
    procedure removeActiveAdmin(who : JComponentName) ; cdecl;                  // (Landroid/content/ComponentName;)V A: $1
    procedure setCameraDisabled(admin : JComponentName; disabled : boolean) ; cdecl;// (Landroid/content/ComponentName;Z)V A: $1
    procedure setKeyguardDisabledFeatures(admin : JComponentName; which : Integer) ; cdecl;// (Landroid/content/ComponentName;I)V A: $1
    procedure setMaximumFailedPasswordsForWipe(admin : JComponentName; num : Integer) ; cdecl;// (Landroid/content/ComponentName;I)V A: $1
    procedure setMaximumTimeToLock(admin : JComponentName; timeMs : Int64) ; cdecl;// (Landroid/content/ComponentName;J)V A: $1
    procedure setPasswordExpirationTimeout(admin : JComponentName; timeout : Int64) ; cdecl;// (Landroid/content/ComponentName;J)V A: $1
    procedure setPasswordHistoryLength(admin : JComponentName; length : Integer) ; cdecl;// (Landroid/content/ComponentName;I)V A: $1
    procedure setPasswordMinimumLength(admin : JComponentName; length : Integer) ; cdecl;// (Landroid/content/ComponentName;I)V A: $1
    procedure setPasswordMinimumLetters(admin : JComponentName; length : Integer) ; cdecl;// (Landroid/content/ComponentName;I)V A: $1
    procedure setPasswordMinimumLowerCase(admin : JComponentName; length : Integer) ; cdecl;// (Landroid/content/ComponentName;I)V A: $1
    procedure setPasswordMinimumNonLetter(admin : JComponentName; length : Integer) ; cdecl;// (Landroid/content/ComponentName;I)V A: $1
    procedure setPasswordMinimumNumeric(admin : JComponentName; length : Integer) ; cdecl;// (Landroid/content/ComponentName;I)V A: $1
    procedure setPasswordMinimumSymbols(admin : JComponentName; length : Integer) ; cdecl;// (Landroid/content/ComponentName;I)V A: $1
    procedure setPasswordMinimumUpperCase(admin : JComponentName; length : Integer) ; cdecl;// (Landroid/content/ComponentName;I)V A: $1
    procedure setPasswordQuality(admin : JComponentName; quality : Integer) ; cdecl;// (Landroid/content/ComponentName;I)V A: $1
    procedure wipeData(flags : Integer) ; cdecl;                                // (I)V A: $1
  end;

  TJDevicePolicyManager = class(TJavaGenericImport<JDevicePolicyManagerClass, JDevicePolicyManager>)
  end;

const
  TJDevicePolicyManagerACTION_ADD_DEVICE_ADMIN = 'android.app.action.ADD_DEVICE_ADMIN';
  TJDevicePolicyManagerEXTRA_DEVICE_ADMIN = 'android.app.extra.DEVICE_ADMIN';
  TJDevicePolicyManagerEXTRA_ADD_EXPLANATION = 'android.app.extra.ADD_EXPLANATION';
  TJDevicePolicyManagerACTION_SET_NEW_PASSWORD = 'android.app.action.SET_NEW_PASSWORD';
  TJDevicePolicyManagerPASSWORD_QUALITY_UNSPECIFIED = 0;
  TJDevicePolicyManagerPASSWORD_QUALITY_BIOMETRIC_WEAK = 32768;
  TJDevicePolicyManagerPASSWORD_QUALITY_SOMETHING = 65536;
  TJDevicePolicyManagerPASSWORD_QUALITY_NUMERIC = 131072;
  TJDevicePolicyManagerPASSWORD_QUALITY_ALPHABETIC = 262144;
  TJDevicePolicyManagerPASSWORD_QUALITY_ALPHANUMERIC = 327680;
  TJDevicePolicyManagerPASSWORD_QUALITY_COMPLEX = 393216;
  TJDevicePolicyManagerRESET_PASSWORD_REQUIRE_ENTRY = 1;
  TJDevicePolicyManagerWIPE_EXTERNAL_STORAGE = 1;
  TJDevicePolicyManagerENCRYPTION_STATUS_UNSUPPORTED = 0;
  TJDevicePolicyManagerENCRYPTION_STATUS_INACTIVE = 1;
  TJDevicePolicyManagerENCRYPTION_STATUS_ACTIVATING = 2;
  TJDevicePolicyManagerENCRYPTION_STATUS_ACTIVE = 3;
  TJDevicePolicyManagerACTION_START_ENCRYPTION = 'android.app.action.START_ENCRYPTION';
  TJDevicePolicyManagerKEYGUARD_DISABLE_FEATURES_NONE = 0;
  TJDevicePolicyManagerKEYGUARD_DISABLE_WIDGETS_ALL = 1;
  TJDevicePolicyManagerKEYGUARD_DISABLE_SECURE_CAMERA = 2;
  TJDevicePolicyManagerKEYGUARD_DISABLE_FEATURES_ALL = 2147483647;

implementation

end.
