//
// Generated by JavaToPas v1.5 20140918 - 093147
////////////////////////////////////////////////////////////////////////////////
unit android.media.MediaDrm;

interface

uses
  AndroidAPI.JNIBridge,
  Androidapi.JNI.JavaTypes,
  android.media.MediaDrm_KeyRequest,
  android.media.MediaDrm_ProvisionRequest;

type
  JMediaDrm_CryptoSession = interface; // merged
  JMediaDrm_OnEventListener = interface; // merged
  JMediaDrm = interface;

  JMediaDrmClass = interface(JObjectClass)
    ['{A345CF62-58B8-4341-B42B-A7DFF3D0FAF0}']
    function _GetEVENT_KEY_EXPIRED : Integer; cdecl;                            //  A: $19
    function _GetEVENT_KEY_REQUIRED : Integer; cdecl;                           //  A: $19
    function _GetEVENT_PROVISION_REQUIRED : Integer; cdecl;                     //  A: $19
    function _GetEVENT_VENDOR_DEFINED : Integer; cdecl;                         //  A: $19
    function _GetKEY_TYPE_OFFLINE : Integer; cdecl;                             //  A: $19
    function _GetKEY_TYPE_RELEASE : Integer; cdecl;                             //  A: $19
    function _GetKEY_TYPE_STREAMING : Integer; cdecl;                           //  A: $19
    function _GetPROPERTY_ALGORITHMS : JString; cdecl;                          //  A: $19
    function _GetPROPERTY_DESCRIPTION : JString; cdecl;                         //  A: $19
    function _GetPROPERTY_DEVICE_UNIQUE_ID : JString; cdecl;                    //  A: $19
    function _GetPROPERTY_VENDOR : JString; cdecl;                              //  A: $19
    function _GetPROPERTY_VERSION : JString; cdecl;                             //  A: $19
    function getCryptoSession(sessionId : TJavaArray<Byte>; cipherAlgorithm : JString; macAlgorithm : JString) : JMediaDrm_CryptoSession; cdecl;// ([BLjava/lang/String;Ljava/lang/String;)Landroid/media/MediaDrm$CryptoSession; A: $1
    function getKeyRequest(TJavaArrayByteparam0 : TJavaArray<Byte>; TJavaArrayByteparam1 : TJavaArray<Byte>; JStringparam2 : JString; Integerparam3 : Integer; JHashMapparam4 : JHashMap) : JMediaDrm_KeyRequest; cdecl;// ([B[BLjava/lang/String;ILjava/util/HashMap;)Landroid/media/MediaDrm$KeyRequest; A: $101
    function getPropertyByteArray(JStringparam0 : JString) : TJavaArray<Byte>; cdecl;// (Ljava/lang/String;)[B A: $101
    function getPropertyString(JStringparam0 : JString) : JString; cdecl;       // (Ljava/lang/String;)Ljava/lang/String; A: $101
    function getProvisionRequest : JMediaDrm_ProvisionRequest; cdecl;           // ()Landroid/media/MediaDrm$ProvisionRequest; A: $101
    function getSecureStops : JList; cdecl;                                     // ()Ljava/util/List; A: $101
    function init(uuid : JUUID) : JMediaDrm; cdecl;                             // (Ljava/util/UUID;)V A: $1
    function isCryptoSchemeSupported(uuid : JUUID) : boolean; cdecl; overload;  // (Ljava/util/UUID;)Z A: $19
    function isCryptoSchemeSupported(uuid : JUUID; mimeType : JString) : boolean; cdecl; overload;// (Ljava/util/UUID;Ljava/lang/String;)Z A: $19
    function openSession : TJavaArray<Byte>; cdecl;                             // ()[B A: $101
    function provideKeyResponse(TJavaArrayByteparam0 : TJavaArray<Byte>; TJavaArrayByteparam1 : TJavaArray<Byte>) : TJavaArray<Byte>; cdecl;// ([B[B)[B A: $101
    function queryKeyStatus(TJavaArrayByteparam0 : TJavaArray<Byte>) : JHashMap; cdecl;// ([B)Ljava/util/HashMap; A: $101
    procedure closeSession(TJavaArrayByteparam0 : TJavaArray<Byte>) ; cdecl;    // ([B)V A: $101
    procedure provideProvisionResponse(TJavaArrayByteparam0 : TJavaArray<Byte>) ; cdecl;// ([B)V A: $101
    procedure release ; cdecl;                                                  // ()V A: $111
    procedure releaseSecureStops(TJavaArrayByteparam0 : TJavaArray<Byte>) ; cdecl;// ([B)V A: $101
    procedure removeKeys(TJavaArrayByteparam0 : TJavaArray<Byte>) ; cdecl;      // ([B)V A: $101
    procedure restoreKeys(TJavaArrayByteparam0 : TJavaArray<Byte>; TJavaArrayByteparam1 : TJavaArray<Byte>) ; cdecl;// ([B[B)V A: $101
    procedure setOnEventListener(listener : JMediaDrm_OnEventListener) ; cdecl; // (Landroid/media/MediaDrm$OnEventListener;)V A: $1
    procedure setPropertyByteArray(JStringparam0 : JString; TJavaArrayByteparam1 : TJavaArray<Byte>) ; cdecl;// (Ljava/lang/String;[B)V A: $101
    procedure setPropertyString(JStringparam0 : JString; JStringparam1 : JString) ; cdecl;// (Ljava/lang/String;Ljava/lang/String;)V A: $101
    property EVENT_KEY_EXPIRED : Integer read _GetEVENT_KEY_EXPIRED;            // I A: $19
    property EVENT_KEY_REQUIRED : Integer read _GetEVENT_KEY_REQUIRED;          // I A: $19
    property EVENT_PROVISION_REQUIRED : Integer read _GetEVENT_PROVISION_REQUIRED;// I A: $19
    property EVENT_VENDOR_DEFINED : Integer read _GetEVENT_VENDOR_DEFINED;      // I A: $19
    property KEY_TYPE_OFFLINE : Integer read _GetKEY_TYPE_OFFLINE;              // I A: $19
    property KEY_TYPE_RELEASE : Integer read _GetKEY_TYPE_RELEASE;              // I A: $19
    property KEY_TYPE_STREAMING : Integer read _GetKEY_TYPE_STREAMING;          // I A: $19
    property PROPERTY_ALGORITHMS : JString read _GetPROPERTY_ALGORITHMS;        // Ljava/lang/String; A: $19
    property PROPERTY_DESCRIPTION : JString read _GetPROPERTY_DESCRIPTION;      // Ljava/lang/String; A: $19
    property PROPERTY_DEVICE_UNIQUE_ID : JString read _GetPROPERTY_DEVICE_UNIQUE_ID;// Ljava/lang/String; A: $19
    property PROPERTY_VENDOR : JString read _GetPROPERTY_VENDOR;                // Ljava/lang/String; A: $19
    property PROPERTY_VERSION : JString read _GetPROPERTY_VERSION;              // Ljava/lang/String; A: $19
  end;

  [JavaSignature('android/media/MediaDrm$CryptoSession')]
  JMediaDrm = interface(JObject)
    ['{1CEFA3D0-837F-4F19-8BC9-EA7658A60C74}']
    function getCryptoSession(sessionId : TJavaArray<Byte>; cipherAlgorithm : JString; macAlgorithm : JString) : JMediaDrm_CryptoSession; cdecl;// ([BLjava/lang/String;Ljava/lang/String;)Landroid/media/MediaDrm$CryptoSession; A: $1
    procedure setOnEventListener(listener : JMediaDrm_OnEventListener) ; cdecl; // (Landroid/media/MediaDrm$OnEventListener;)V A: $1
  end;

  TJMediaDrm = class(TJavaGenericImport<JMediaDrmClass, JMediaDrm>)
  end;

  // Merged from: .\android-19\android.media.MediaDrm_OnEventListener.pas
  JMediaDrm_OnEventListenerClass = interface(JObjectClass)
    ['{0EC53123-83D7-4336-BDA8-8B5803E1C6C5}']
    procedure onEvent(JMediaDrmparam0 : JMediaDrm; TJavaArrayByteparam1 : TJavaArray<Byte>; Integerparam2 : Integer; Integerparam3 : Integer; TJavaArrayByteparam4 : TJavaArray<Byte>) ; cdecl;// (Landroid/media/MediaDrm;[BII[B)V A: $401
  end;

  [JavaSignature('android/media/MediaDrm_OnEventListener')]
  JMediaDrm_OnEventListener = interface(JObject)
    ['{96CE86C7-2D19-4E65-8D7A-21521673351A}']
    procedure onEvent(JMediaDrmparam0 : JMediaDrm; TJavaArrayByteparam1 : TJavaArray<Byte>; Integerparam2 : Integer; Integerparam3 : Integer; TJavaArrayByteparam4 : TJavaArray<Byte>) ; cdecl;// (Landroid/media/MediaDrm;[BII[B)V A: $401
  end;

  TJMediaDrm_OnEventListener = class(TJavaGenericImport<JMediaDrm_OnEventListenerClass, JMediaDrm_OnEventListener>)
  end;


  // Merged from: .\android-19\android.media.MediaDrm_CryptoSession.pas
  JMediaDrm_CryptoSessionClass = interface(JObjectClass)
    ['{FF0E3709-5DDB-436E-9F7F-596D485F081D}']
    function decrypt(keyid : TJavaArray<Byte>; input : TJavaArray<Byte>; iv : TJavaArray<Byte>) : TJavaArray<Byte>; cdecl;// ([B[B[B)[B A: $1
    function encrypt(keyid : TJavaArray<Byte>; input : TJavaArray<Byte>; iv : TJavaArray<Byte>) : TJavaArray<Byte>; cdecl;// ([B[B[B)[B A: $1
    function sign(keyid : TJavaArray<Byte>; &message : TJavaArray<Byte>) : TJavaArray<Byte>; cdecl;// ([B[B)[B A: $1
    function verify(keyid : TJavaArray<Byte>; &message : TJavaArray<Byte>; signature : TJavaArray<Byte>) : boolean; cdecl;// ([B[B[B)Z A: $1
  end;

  [JavaSignature('android/media/MediaDrm_CryptoSession')]
  JMediaDrm_CryptoSession = interface(JObject)
    ['{6669F693-19B4-4A2A-ADBA-986DA8E3A66D}']
    function decrypt(keyid : TJavaArray<Byte>; input : TJavaArray<Byte>; iv : TJavaArray<Byte>) : TJavaArray<Byte>; cdecl;// ([B[B[B)[B A: $1
    function encrypt(keyid : TJavaArray<Byte>; input : TJavaArray<Byte>; iv : TJavaArray<Byte>) : TJavaArray<Byte>; cdecl;// ([B[B[B)[B A: $1
    function sign(keyid : TJavaArray<Byte>; &message : TJavaArray<Byte>) : TJavaArray<Byte>; cdecl;// ([B[B)[B A: $1
    function verify(keyid : TJavaArray<Byte>; &message : TJavaArray<Byte>; signature : TJavaArray<Byte>) : boolean; cdecl;// ([B[B[B)Z A: $1
  end;

  TJMediaDrm_CryptoSession = class(TJavaGenericImport<JMediaDrm_CryptoSessionClass, JMediaDrm_CryptoSession>)
  end;


const
  TJMediaDrmEVENT_PROVISION_REQUIRED = 1;
  TJMediaDrmEVENT_KEY_REQUIRED = 2;
  TJMediaDrmEVENT_KEY_EXPIRED = 3;
  TJMediaDrmEVENT_VENDOR_DEFINED = 4;
  TJMediaDrmKEY_TYPE_STREAMING = 1;
  TJMediaDrmKEY_TYPE_OFFLINE = 2;
  TJMediaDrmKEY_TYPE_RELEASE = 3;
  TJMediaDrmPROPERTY_VENDOR = 'vendor';
  TJMediaDrmPROPERTY_VERSION = 'version';
  TJMediaDrmPROPERTY_DESCRIPTION = 'description';
  TJMediaDrmPROPERTY_ALGORITHMS = 'algorithms';
  TJMediaDrmPROPERTY_DEVICE_UNIQUE_ID = 'deviceUniqueId';

implementation

end.
