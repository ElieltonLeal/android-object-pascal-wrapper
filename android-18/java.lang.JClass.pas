//
// Generated by JavaToPas v1.5 20140918 - 132134
////////////////////////////////////////////////////////////////////////////////
unit java.lang.JClass;

interface

uses
  AndroidAPI.JNIBridge,
  Androidapi.JNI.JavaTypes,
  java.lang.reflect.JType,
  java.lang.reflect.GenericDeclaration,
  java.security.Principal,
  java.security.Permission,
  java.net.Proxy_Type,
  java.net.SocketAddress,
  java.security.PublicKey,
  java.security.cert.CertPath,
  java.security.Timestamp;

type
  JCodeSigner = interface; // merged
  JCertificate = interface; // merged
  JPermission = interface; // merged
  JFileNameMap = interface; // merged
  JProxy = interface; // merged
  JPackage = interface; // merged
  JProtectionDomain = interface; // merged
  JCodeSource = interface; // merged
  JContentHandlerFactory = interface; // merged
  JContentHandler = interface; // merged
  JURLStreamHandlerFactory = interface; // merged
  JURLConnection = interface; // merged
  JURLStreamHandler = interface; // merged
  JURL = interface; // merged
  JURI = interface; // merged
  JConstructor = interface; // merged
  JMethod = interface; // merged
  JField = interface; // merged
  JClass = interface;

  JClassClass = interface(JObjectClass)
    ['{FB339F33-BE1F-4008-9926-BF4B81151423}']
    function asSubclass(c : JClass) : JClass; cdecl;                            // (Ljava/lang/Class;)Ljava/lang/Class; A: $1
    function cast(obj : JObject) : JObject; cdecl;                              // (Ljava/lang/Object;)Ljava/lang/Object; A: $1
    function desiredAssertionStatus : boolean; cdecl;                           // ()Z A: $101
    function forName(className : JString) : JClass; cdecl; overload;            // (Ljava/lang/String;)Ljava/lang/Class; A: $9
    function forName(className : JString; shouldInitialize : boolean; classLoader : JClassLoader) : JClass; cdecl; overload;// (Ljava/lang/String;ZLjava/lang/ClassLoader;)Ljava/lang/Class; A: $9
    function getAnnotation(annotationType : JClass) : JAnnotation; cdecl;       // (Ljava/lang/Class;)Ljava/lang/annotation/Annotation; A: $1
    function getAnnotations : TJavaArray<JAnnotation>; cdecl;                   // ()[Ljava/lang/annotation/Annotation; A: $1
    function getCanonicalName : JString; cdecl;                                 // ()Ljava/lang/String; A: $1
    function getClassLoader : JClassLoader; cdecl;                              // ()Ljava/lang/ClassLoader; A: $1
    function getClasses : TJavaArray<JClass>; cdecl;                            // ()[Ljava/lang/Class; A: $1
    function getComponentType : JClass; cdecl;                                  // ()Ljava/lang/Class; A: $101
    function getConstructor(parameterTypes : TJavaArray<JClass>) : JConstructor; cdecl;// ([Ljava/lang/Class;)Ljava/lang/reflect/Constructor; A: $81
    function getConstructors : TJavaArray<JConstructor>; cdecl;                 // ()[Ljava/lang/reflect/Constructor; A: $1
    function getDeclaredAnnotations : TJavaArray<JAnnotation>; cdecl;           // ()[Ljava/lang/annotation/Annotation; A: $101
    function getDeclaredClasses : TJavaArray<JClass>; cdecl;                    // ()[Ljava/lang/Class; A: $1
    function getDeclaredConstructor(parameterTypes : TJavaArray<JClass>) : JConstructor; cdecl;// ([Ljava/lang/Class;)Ljava/lang/reflect/Constructor; A: $81
    function getDeclaredConstructors : TJavaArray<JConstructor>; cdecl;         // ()[Ljava/lang/reflect/Constructor; A: $1
    function getDeclaredField(&name : JString) : JField; cdecl;                 // (Ljava/lang/String;)Ljava/lang/reflect/Field; A: $1
    function getDeclaredFields : TJavaArray<JField>; cdecl;                     // ()[Ljava/lang/reflect/Field; A: $1
    function getDeclaredMethod(&name : JString; parameterTypes : TJavaArray<JClass>) : JMethod; cdecl;// (Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method; A: $81
    function getDeclaredMethods : TJavaArray<JMethod>; cdecl;                   // ()[Ljava/lang/reflect/Method; A: $1
    function getDeclaringClass : JClass; cdecl;                                 // ()Ljava/lang/Class; A: $101
    function getEnclosingClass : JClass; cdecl;                                 // ()Ljava/lang/Class; A: $101
    function getEnclosingConstructor : JConstructor; cdecl;                     // ()Ljava/lang/reflect/Constructor; A: $101
    function getEnclosingMethod : JMethod; cdecl;                               // ()Ljava/lang/reflect/Method; A: $101
    function getEnumConstants : TJavaArray<JObject>; cdecl;                     // ()[Ljava/lang/Object; A: $1
    function getField(&name : JString) : JField; cdecl;                         // (Ljava/lang/String;)Ljava/lang/reflect/Field; A: $1
    function getFields : TJavaArray<JField>; cdecl;                             // ()[Ljava/lang/reflect/Field; A: $1
    function getGenericInterfaces : TJavaArray<JType>; cdecl;                   // ()[Ljava/lang/reflect/Type; A: $1
    function getGenericSuperclass : JType; cdecl;                               // ()Ljava/lang/reflect/Type; A: $1
    function getInterfaces : TJavaArray<JClass>; cdecl;                         // ()[Ljava/lang/Class; A: $101
    function getMethod(&name : JString; parameterTypes : TJavaArray<JClass>) : JMethod; cdecl;// (Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method; A: $81
    function getMethods : TJavaArray<JMethod>; cdecl;                           // ()[Ljava/lang/reflect/Method; A: $1
    function getModifiers : Integer; cdecl;                                     // ()I A: $1
    function getName : JString; cdecl;                                          // ()Ljava/lang/String; A: $1
    function getPackage : JPackage; cdecl;                                      // ()Ljava/lang/Package; A: $1
    function getProtectionDomain : JProtectionDomain; cdecl;                    // ()Ljava/security/ProtectionDomain; A: $1
    function getResource(resourceName : JString) : JURL; cdecl;                 // (Ljava/lang/String;)Ljava/net/URL; A: $1
    function getResourceAsStream(resourceName : JString) : JInputStream; cdecl; // (Ljava/lang/String;)Ljava/io/InputStream; A: $1
    function getSigners : TJavaArray<JObject>; cdecl;                           // ()[Ljava/lang/Object; A: $1
    function getSimpleName : JString; cdecl;                                    // ()Ljava/lang/String; A: $1
    function getSuperclass : JClass; cdecl;                                     // ()Ljava/lang/Class; A: $101
    function getTypeParameters : TJavaArray<JTypeVariable>; cdecl;              // ()[Ljava/lang/reflect/TypeVariable; A: $21
    function isAnnotation : boolean; cdecl;                                     // ()Z A: $1
    function isAnnotationPresent(annotationType : JClass) : boolean; cdecl;     // (Ljava/lang/Class;)Z A: $1
    function isAnonymousClass : boolean; cdecl;                                 // ()Z A: $101
    function isArray : boolean; cdecl;                                          // ()Z A: $1
    function isAssignableFrom(JClassparam0 : JClass) : boolean; cdecl;          // (Ljava/lang/Class;)Z A: $101
    function isEnum : boolean; cdecl;                                           // ()Z A: $1
    function isInstance(JObjectparam0 : JObject) : boolean; cdecl;              // (Ljava/lang/Object;)Z A: $101
    function isInterface : boolean; cdecl;                                      // ()Z A: $101
    function isLocalClass : boolean; cdecl;                                     // ()Z A: $1
    function isMemberClass : boolean; cdecl;                                    // ()Z A: $1
    function isPrimitive : boolean; cdecl;                                      // ()Z A: $101
    function isSynthetic : boolean; cdecl;                                      // ()Z A: $1
    function newInstance : JObject; cdecl;                                      // ()Ljava/lang/Object; A: $1
    function toString : JString; cdecl;                                         // ()Ljava/lang/String; A: $1
  end;

  [JavaSignature('java/lang/Class')]
  JClass = interface(JObject)
    ['{D2418F0B-1AB3-4D6B-975F-484C0E82ACB4}']
    function asSubclass(c : JClass) : JClass; cdecl;                            // (Ljava/lang/Class;)Ljava/lang/Class; A: $1
    function cast(obj : JObject) : JObject; cdecl;                              // (Ljava/lang/Object;)Ljava/lang/Object; A: $1
    function getAnnotation(annotationType : JClass) : JAnnotation; cdecl;       // (Ljava/lang/Class;)Ljava/lang/annotation/Annotation; A: $1
    function getAnnotations : TJavaArray<JAnnotation>; cdecl;                   // ()[Ljava/lang/annotation/Annotation; A: $1
    function getCanonicalName : JString; cdecl;                                 // ()Ljava/lang/String; A: $1
    function getClassLoader : JClassLoader; cdecl;                              // ()Ljava/lang/ClassLoader; A: $1
    function getClasses : TJavaArray<JClass>; cdecl;                            // ()[Ljava/lang/Class; A: $1
    function getConstructors : TJavaArray<JConstructor>; cdecl;                 // ()[Ljava/lang/reflect/Constructor; A: $1
    function getDeclaredClasses : TJavaArray<JClass>; cdecl;                    // ()[Ljava/lang/Class; A: $1
    function getDeclaredConstructors : TJavaArray<JConstructor>; cdecl;         // ()[Ljava/lang/reflect/Constructor; A: $1
    function getDeclaredField(&name : JString) : JField; cdecl;                 // (Ljava/lang/String;)Ljava/lang/reflect/Field; A: $1
    function getDeclaredFields : TJavaArray<JField>; cdecl;                     // ()[Ljava/lang/reflect/Field; A: $1
    function getDeclaredMethods : TJavaArray<JMethod>; cdecl;                   // ()[Ljava/lang/reflect/Method; A: $1
    function getEnumConstants : TJavaArray<JObject>; cdecl;                     // ()[Ljava/lang/Object; A: $1
    function getField(&name : JString) : JField; cdecl;                         // (Ljava/lang/String;)Ljava/lang/reflect/Field; A: $1
    function getFields : TJavaArray<JField>; cdecl;                             // ()[Ljava/lang/reflect/Field; A: $1
    function getGenericInterfaces : TJavaArray<JType>; cdecl;                   // ()[Ljava/lang/reflect/Type; A: $1
    function getGenericSuperclass : JType; cdecl;                               // ()Ljava/lang/reflect/Type; A: $1
    function getMethods : TJavaArray<JMethod>; cdecl;                           // ()[Ljava/lang/reflect/Method; A: $1
    function getModifiers : Integer; cdecl;                                     // ()I A: $1
    function getName : JString; cdecl;                                          // ()Ljava/lang/String; A: $1
    function getPackage : JPackage; cdecl;                                      // ()Ljava/lang/Package; A: $1
    function getProtectionDomain : JProtectionDomain; cdecl;                    // ()Ljava/security/ProtectionDomain; A: $1
    function getResource(resourceName : JString) : JURL; cdecl;                 // (Ljava/lang/String;)Ljava/net/URL; A: $1
    function getResourceAsStream(resourceName : JString) : JInputStream; cdecl; // (Ljava/lang/String;)Ljava/io/InputStream; A: $1
    function getSigners : TJavaArray<JObject>; cdecl;                           // ()[Ljava/lang/Object; A: $1
    function getSimpleName : JString; cdecl;                                    // ()Ljava/lang/String; A: $1
    function isAnnotation : boolean; cdecl;                                     // ()Z A: $1
    function isAnnotationPresent(annotationType : JClass) : boolean; cdecl;     // (Ljava/lang/Class;)Z A: $1
    function isArray : boolean; cdecl;                                          // ()Z A: $1
    function isEnum : boolean; cdecl;                                           // ()Z A: $1
    function isLocalClass : boolean; cdecl;                                     // ()Z A: $1
    function isMemberClass : boolean; cdecl;                                    // ()Z A: $1
    function isSynthetic : boolean; cdecl;                                      // ()Z A: $1
    function newInstance : JObject; cdecl;                                      // ()Ljava/lang/Object; A: $1
    function toString : JString; cdecl;                                         // ()Ljava/lang/String; A: $1
  end;

  TJClass = class(TJavaGenericImport<JClassClass, JClass>)
  end;

  JConstructorClass = interface(JObjectClass)
    ['{B773E9E3-F296-4EFD-A34F-0F1783D2CF70}']
    function equals(&object : JObject) : boolean; cdecl;                        // (Ljava/lang/Object;)Z A: $1
    function getAnnotation(annotationType : JClass) : JAnnotation; cdecl;       // (Ljava/lang/Class;)Ljava/lang/annotation/Annotation; A: $1
    function getDeclaredAnnotations : TJavaArray<JAnnotation>; cdecl;           // ()[Ljava/lang/annotation/Annotation; A: $1
    function getDeclaringClass : JClass; cdecl;                                 // ()Ljava/lang/Class; A: $1
    function getExceptionTypes : TJavaArray<JClass>; cdecl;                     // ()[Ljava/lang/Class; A: $1
    function getGenericExceptionTypes : TJavaArray<JType>; cdecl;               // ()[Ljava/lang/reflect/Type; A: $1
    function getGenericParameterTypes : TJavaArray<JType>; cdecl;               // ()[Ljava/lang/reflect/Type; A: $1
    function getModifiers : Integer; cdecl;                                     // ()I A: $1
    function getName : JString; cdecl;                                          // ()Ljava/lang/String; A: $1
    function getParameterAnnotations : TJavaArray<TJavaArray<JAnnotation>>; cdecl;// ()[[Ljava/lang/annotation/Annotation; A: $1
    function getParameterTypes : TJavaArray<JClass>; cdecl;                     // ()[Ljava/lang/Class; A: $1
    function getTypeParameters : TJavaArray<JTypeVariable>; cdecl;              // ()[Ljava/lang/reflect/TypeVariable; A: $1
    function hashCode : Integer; cdecl;                                         // ()I A: $1
    function isAnnotationPresent(annotationType : JClass) : boolean; cdecl;     // (Ljava/lang/Class;)Z A: $1
    function isSynthetic : boolean; cdecl;                                      // ()Z A: $1
    function isVarArgs : boolean; cdecl;                                        // ()Z A: $1
    function newInstance(args : TJavaArray<JObject>) : JObject; cdecl;          // ([Ljava/lang/Object;)Ljava/lang/Object; A: $81
    function toGenericString : JString; cdecl;                                  // ()Ljava/lang/String; A: $1
    function toString : JString; cdecl;                                         // ()Ljava/lang/String; A: $1
  end;

  [JavaSignature('java/lang/reflect/Constructor')]
  JConstructor = interface(JObject)
    ['{3B5D9A19-F240-4EA5-8912-7695984AC3EA}']
    function equals(&object : JObject) : boolean; cdecl;                        // (Ljava/lang/Object;)Z A: $1
    function getAnnotation(annotationType : JClass) : JAnnotation; cdecl;       // (Ljava/lang/Class;)Ljava/lang/annotation/Annotation; A: $1
    function getDeclaredAnnotations : TJavaArray<JAnnotation>; cdecl;           // ()[Ljava/lang/annotation/Annotation; A: $1
    function getDeclaringClass : JClass; cdecl;                                 // ()Ljava/lang/Class; A: $1
    function getExceptionTypes : TJavaArray<JClass>; cdecl;                     // ()[Ljava/lang/Class; A: $1
    function getGenericExceptionTypes : TJavaArray<JType>; cdecl;               // ()[Ljava/lang/reflect/Type; A: $1
    function getGenericParameterTypes : TJavaArray<JType>; cdecl;               // ()[Ljava/lang/reflect/Type; A: $1
    function getModifiers : Integer; cdecl;                                     // ()I A: $1
    function getName : JString; cdecl;                                          // ()Ljava/lang/String; A: $1
    function getParameterAnnotations : TJavaArray<TJavaArray<JAnnotation>>; cdecl;// ()[[Ljava/lang/annotation/Annotation; A: $1
    function getParameterTypes : TJavaArray<JClass>; cdecl;                     // ()[Ljava/lang/Class; A: $1
    function getTypeParameters : TJavaArray<JTypeVariable>; cdecl;              // ()[Ljava/lang/reflect/TypeVariable; A: $1
    function hashCode : Integer; cdecl;                                         // ()I A: $1
    function isAnnotationPresent(annotationType : JClass) : boolean; cdecl;     // (Ljava/lang/Class;)Z A: $1
    function isSynthetic : boolean; cdecl;                                      // ()Z A: $1
    function isVarArgs : boolean; cdecl;                                        // ()Z A: $1
    function toGenericString : JString; cdecl;                                  // ()Ljava/lang/String; A: $1
    function toString : JString; cdecl;                                         // ()Ljava/lang/String; A: $1
  end;

  TJConstructor = class(TJavaGenericImport<JConstructorClass, JConstructor>)
  end;

  JFieldClass = interface(JObjectClass)
    ['{2F4F3612-8F70-4DC4-9CD8-6FB13BEF1122}']
    function equals(&object : JObject) : boolean; cdecl;                        // (Ljava/lang/Object;)Z A: $1
    function get(&object : JObject) : JObject; cdecl;                           // (Ljava/lang/Object;)Ljava/lang/Object; A: $1
    function getAnnotation(annotationType : JClass) : JAnnotation; cdecl;       // (Ljava/lang/Class;)Ljava/lang/annotation/Annotation; A: $1
    function getBoolean(&object : JObject) : boolean; cdecl;                    // (Ljava/lang/Object;)Z A: $1
    function getByte(&object : JObject) : Byte; cdecl;                          // (Ljava/lang/Object;)B A: $1
    function getChar(&object : JObject) : Char; cdecl;                          // (Ljava/lang/Object;)C A: $1
    function getDeclaredAnnotations : TJavaArray<JAnnotation>; cdecl;           // ()[Ljava/lang/annotation/Annotation; A: $1
    function getDeclaringClass : JClass; cdecl;                                 // ()Ljava/lang/Class; A: $1
    function getDouble(&object : JObject) : Double; cdecl;                      // (Ljava/lang/Object;)D A: $1
    function getFloat(&object : JObject) : Single; cdecl;                       // (Ljava/lang/Object;)F A: $1
    function getGenericType : JType; cdecl;                                     // ()Ljava/lang/reflect/Type; A: $1
    function getInt(&object : JObject) : Integer; cdecl;                        // (Ljava/lang/Object;)I A: $1
    function getLong(&object : JObject) : Int64; cdecl;                         // (Ljava/lang/Object;)J A: $1
    function getModifiers : Integer; cdecl;                                     // ()I A: $1
    function getName : JString; cdecl;                                          // ()Ljava/lang/String; A: $1
    function getShort(&object : JObject) : SmallInt; cdecl;                     // (Ljava/lang/Object;)S A: $1
    function getType : JClass; cdecl;                                           // ()Ljava/lang/Class; A: $1
    function hashCode : Integer; cdecl;                                         // ()I A: $1
    function isAnnotationPresent(annotationType : JClass) : boolean; cdecl;     // (Ljava/lang/Class;)Z A: $1
    function isEnumConstant : boolean; cdecl;                                   // ()Z A: $1
    function isSynthetic : boolean; cdecl;                                      // ()Z A: $1
    function toGenericString : JString; cdecl;                                  // ()Ljava/lang/String; A: $1
    function toString : JString; cdecl;                                         // ()Ljava/lang/String; A: $1
    procedure &set(&object : JObject; value : JObject) ; cdecl;                 // (Ljava/lang/Object;Ljava/lang/Object;)V A: $1
    procedure setBoolean(&object : JObject; value : boolean) ; cdecl;           // (Ljava/lang/Object;Z)V A: $1
    procedure setByte(&object : JObject; value : Byte) ; cdecl;                 // (Ljava/lang/Object;B)V A: $1
    procedure setChar(&object : JObject; value : Char) ; cdecl;                 // (Ljava/lang/Object;C)V A: $1
    procedure setDouble(&object : JObject; value : Double) ; cdecl;             // (Ljava/lang/Object;D)V A: $1
    procedure setFloat(&object : JObject; value : Single) ; cdecl;              // (Ljava/lang/Object;F)V A: $1
    procedure setInt(&object : JObject; value : Integer) ; cdecl;               // (Ljava/lang/Object;I)V A: $1
    procedure setLong(&object : JObject; value : Int64) ; cdecl;                // (Ljava/lang/Object;J)V A: $1
    procedure setShort(&object : JObject; value : SmallInt) ; cdecl;            // (Ljava/lang/Object;S)V A: $1
  end;

  [JavaSignature('java/lang/reflect/Field')]
  JField = interface(JObject)
    ['{1E13244B-0980-464C-B2C8-DE17A58BCBE7}']
    function equals(&object : JObject) : boolean; cdecl;                        // (Ljava/lang/Object;)Z A: $1
    function get(&object : JObject) : JObject; cdecl;                           // (Ljava/lang/Object;)Ljava/lang/Object; A: $1
    function getAnnotation(annotationType : JClass) : JAnnotation; cdecl;       // (Ljava/lang/Class;)Ljava/lang/annotation/Annotation; A: $1
    function getBoolean(&object : JObject) : boolean; cdecl;                    // (Ljava/lang/Object;)Z A: $1
    function getByte(&object : JObject) : Byte; cdecl;                          // (Ljava/lang/Object;)B A: $1
    function getChar(&object : JObject) : Char; cdecl;                          // (Ljava/lang/Object;)C A: $1
    function getDeclaredAnnotations : TJavaArray<JAnnotation>; cdecl;           // ()[Ljava/lang/annotation/Annotation; A: $1
    function getDeclaringClass : JClass; cdecl;                                 // ()Ljava/lang/Class; A: $1
    function getDouble(&object : JObject) : Double; cdecl;                      // (Ljava/lang/Object;)D A: $1
    function getFloat(&object : JObject) : Single; cdecl;                       // (Ljava/lang/Object;)F A: $1
    function getGenericType : JType; cdecl;                                     // ()Ljava/lang/reflect/Type; A: $1
    function getInt(&object : JObject) : Integer; cdecl;                        // (Ljava/lang/Object;)I A: $1
    function getLong(&object : JObject) : Int64; cdecl;                         // (Ljava/lang/Object;)J A: $1
    function getModifiers : Integer; cdecl;                                     // ()I A: $1
    function getName : JString; cdecl;                                          // ()Ljava/lang/String; A: $1
    function getShort(&object : JObject) : SmallInt; cdecl;                     // (Ljava/lang/Object;)S A: $1
    function getType : JClass; cdecl;                                           // ()Ljava/lang/Class; A: $1
    function hashCode : Integer; cdecl;                                         // ()I A: $1
    function isAnnotationPresent(annotationType : JClass) : boolean; cdecl;     // (Ljava/lang/Class;)Z A: $1
    function isEnumConstant : boolean; cdecl;                                   // ()Z A: $1
    function isSynthetic : boolean; cdecl;                                      // ()Z A: $1
    function toGenericString : JString; cdecl;                                  // ()Ljava/lang/String; A: $1
    function toString : JString; cdecl;                                         // ()Ljava/lang/String; A: $1
    procedure &set(&object : JObject; value : JObject) ; cdecl;                 // (Ljava/lang/Object;Ljava/lang/Object;)V A: $1
    procedure setBoolean(&object : JObject; value : boolean) ; cdecl;           // (Ljava/lang/Object;Z)V A: $1
    procedure setByte(&object : JObject; value : Byte) ; cdecl;                 // (Ljava/lang/Object;B)V A: $1
    procedure setChar(&object : JObject; value : Char) ; cdecl;                 // (Ljava/lang/Object;C)V A: $1
    procedure setDouble(&object : JObject; value : Double) ; cdecl;             // (Ljava/lang/Object;D)V A: $1
    procedure setFloat(&object : JObject; value : Single) ; cdecl;              // (Ljava/lang/Object;F)V A: $1
    procedure setInt(&object : JObject; value : Integer) ; cdecl;               // (Ljava/lang/Object;I)V A: $1
    procedure setLong(&object : JObject; value : Int64) ; cdecl;                // (Ljava/lang/Object;J)V A: $1
    procedure setShort(&object : JObject; value : SmallInt) ; cdecl;            // (Ljava/lang/Object;S)V A: $1
  end;

  TJField = class(TJavaGenericImport<JFieldClass, JField>)
  end;

  JMethodClass = interface(JObjectClass)
    ['{238F7F9E-F8BA-4092-BEF6-EED1484A12AB}']
    function equals(&object : JObject) : boolean; cdecl;                        // (Ljava/lang/Object;)Z A: $1
    function getAnnotation(annotationType : JClass) : JAnnotation; cdecl;       // (Ljava/lang/Class;)Ljava/lang/annotation/Annotation; A: $1
    function getDeclaredAnnotations : TJavaArray<JAnnotation>; cdecl;           // ()[Ljava/lang/annotation/Annotation; A: $1
    function getDeclaringClass : JClass; cdecl;                                 // ()Ljava/lang/Class; A: $1
    function getDefaultValue : JObject; cdecl;                                  // ()Ljava/lang/Object; A: $1
    function getExceptionTypes : TJavaArray<JClass>; cdecl;                     // ()[Ljava/lang/Class; A: $1
    function getGenericExceptionTypes : TJavaArray<JType>; cdecl;               // ()[Ljava/lang/reflect/Type; A: $1
    function getGenericParameterTypes : TJavaArray<JType>; cdecl;               // ()[Ljava/lang/reflect/Type; A: $1
    function getGenericReturnType : JType; cdecl;                               // ()Ljava/lang/reflect/Type; A: $1
    function getModifiers : Integer; cdecl;                                     // ()I A: $1
    function getName : JString; cdecl;                                          // ()Ljava/lang/String; A: $1
    function getParameterAnnotations : TJavaArray<TJavaArray<JAnnotation>>; cdecl;// ()[[Ljava/lang/annotation/Annotation; A: $1
    function getParameterTypes : TJavaArray<JClass>; cdecl;                     // ()[Ljava/lang/Class; A: $1
    function getReturnType : JClass; cdecl;                                     // ()Ljava/lang/Class; A: $1
    function getTypeParameters : TJavaArray<JTypeVariable>; cdecl;              // ()[Ljava/lang/reflect/TypeVariable; A: $1
    function hashCode : Integer; cdecl;                                         // ()I A: $1
    function invoke(receiver : JObject; args : TJavaArray<JObject>) : JObject; cdecl;// (Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object; A: $81
    function isAnnotationPresent(annotationType : JClass) : boolean; cdecl;     // (Ljava/lang/Class;)Z A: $1
    function isBridge : boolean; cdecl;                                         // ()Z A: $1
    function isSynthetic : boolean; cdecl;                                      // ()Z A: $1
    function isVarArgs : boolean; cdecl;                                        // ()Z A: $1
    function toGenericString : JString; cdecl;                                  // ()Ljava/lang/String; A: $1
    function toString : JString; cdecl;                                         // ()Ljava/lang/String; A: $1
  end;

  [JavaSignature('java/lang/reflect/Method')]
  JMethod = interface(JObject)
    ['{137C877C-BED0-4A7F-A44B-F312E47BB5F4}']
    function equals(&object : JObject) : boolean; cdecl;                        // (Ljava/lang/Object;)Z A: $1
    function getAnnotation(annotationType : JClass) : JAnnotation; cdecl;       // (Ljava/lang/Class;)Ljava/lang/annotation/Annotation; A: $1
    function getDeclaredAnnotations : TJavaArray<JAnnotation>; cdecl;           // ()[Ljava/lang/annotation/Annotation; A: $1
    function getDeclaringClass : JClass; cdecl;                                 // ()Ljava/lang/Class; A: $1
    function getDefaultValue : JObject; cdecl;                                  // ()Ljava/lang/Object; A: $1
    function getExceptionTypes : TJavaArray<JClass>; cdecl;                     // ()[Ljava/lang/Class; A: $1
    function getGenericExceptionTypes : TJavaArray<JType>; cdecl;               // ()[Ljava/lang/reflect/Type; A: $1
    function getGenericParameterTypes : TJavaArray<JType>; cdecl;               // ()[Ljava/lang/reflect/Type; A: $1
    function getGenericReturnType : JType; cdecl;                               // ()Ljava/lang/reflect/Type; A: $1
    function getModifiers : Integer; cdecl;                                     // ()I A: $1
    function getName : JString; cdecl;                                          // ()Ljava/lang/String; A: $1
    function getParameterAnnotations : TJavaArray<TJavaArray<JAnnotation>>; cdecl;// ()[[Ljava/lang/annotation/Annotation; A: $1
    function getParameterTypes : TJavaArray<JClass>; cdecl;                     // ()[Ljava/lang/Class; A: $1
    function getReturnType : JClass; cdecl;                                     // ()Ljava/lang/Class; A: $1
    function getTypeParameters : TJavaArray<JTypeVariable>; cdecl;              // ()[Ljava/lang/reflect/TypeVariable; A: $1
    function hashCode : Integer; cdecl;                                         // ()I A: $1
    function isAnnotationPresent(annotationType : JClass) : boolean; cdecl;     // (Ljava/lang/Class;)Z A: $1
    function isBridge : boolean; cdecl;                                         // ()Z A: $1
    function isSynthetic : boolean; cdecl;                                      // ()Z A: $1
    function isVarArgs : boolean; cdecl;                                        // ()Z A: $1
    function toGenericString : JString; cdecl;                                  // ()Ljava/lang/String; A: $1
    function toString : JString; cdecl;                                         // ()Ljava/lang/String; A: $1
  end;

  TJMethod = class(TJavaGenericImport<JMethodClass, JMethod>)
  end;

  JURIClass = interface(JObjectClass)
    ['{E3C1D39D-D537-452E-B72C-E0408F759542}']
    function compareTo(uri : JURI) : Integer; cdecl;                            // (Ljava/net/URI;)I A: $1
    function create(uri : JString) : JURI; cdecl;                               // (Ljava/lang/String;)Ljava/net/URI; A: $9
    function equals(o : JObject) : boolean; cdecl;                              // (Ljava/lang/Object;)Z A: $1
    function getAuthority : JString; cdecl;                                     // ()Ljava/lang/String; A: $1
    function getFragment : JString; cdecl;                                      // ()Ljava/lang/String; A: $1
    function getHost : JString; cdecl;                                          // ()Ljava/lang/String; A: $1
    function getPath : JString; cdecl;                                          // ()Ljava/lang/String; A: $1
    function getPort : Integer; cdecl;                                          // ()I A: $1
    function getQuery : JString; cdecl;                                         // ()Ljava/lang/String; A: $1
    function getRawAuthority : JString; cdecl;                                  // ()Ljava/lang/String; A: $1
    function getRawFragment : JString; cdecl;                                   // ()Ljava/lang/String; A: $1
    function getRawPath : JString; cdecl;                                       // ()Ljava/lang/String; A: $1
    function getRawQuery : JString; cdecl;                                      // ()Ljava/lang/String; A: $1
    function getRawSchemeSpecificPart : JString; cdecl;                         // ()Ljava/lang/String; A: $1
    function getRawUserInfo : JString; cdecl;                                   // ()Ljava/lang/String; A: $1
    function getScheme : JString; cdecl;                                        // ()Ljava/lang/String; A: $1
    function getSchemeSpecificPart : JString; cdecl;                            // ()Ljava/lang/String; A: $1
    function getUserInfo : JString; cdecl;                                      // ()Ljava/lang/String; A: $1
    function hashCode : Integer; cdecl;                                         // ()I A: $1
    function init(scheme : JString; authority : JString; path : JString; query : JString; fragment : JString) : JURI; cdecl; overload;// (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V A: $1
    function init(scheme : JString; host : JString; path : JString; fragment : JString) : JURI; cdecl; overload;// (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V A: $1
    function init(scheme : JString; schemeSpecificPart : JString; fragment : JString) : JURI; cdecl; overload;// (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V A: $1
    function init(scheme : JString; userInfo : JString; host : JString; port : Integer; path : JString; query : JString; fragment : JString) : JURI; cdecl; overload;// (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;)V A: $1
    function init(spec : JString) : JURI; cdecl; overload;                      // (Ljava/lang/String;)V A: $1
    function isAbsolute : boolean; cdecl;                                       // ()Z A: $1
    function isOpaque : boolean; cdecl;                                         // ()Z A: $1
    function normalize : JURI; cdecl;                                           // ()Ljava/net/URI; A: $1
    function parseServerAuthority : JURI; cdecl;                                // ()Ljava/net/URI; A: $1
    function relativize(relative : JURI) : JURI; cdecl;                         // (Ljava/net/URI;)Ljava/net/URI; A: $1
    function resolve(relative : JString) : JURI; cdecl; overload;               // (Ljava/lang/String;)Ljava/net/URI; A: $1
    function resolve(relative : JURI) : JURI; cdecl; overload;                  // (Ljava/net/URI;)Ljava/net/URI; A: $1
    function toASCIIString : JString; cdecl;                                    // ()Ljava/lang/String; A: $1
    function toString : JString; cdecl;                                         // ()Ljava/lang/String; A: $1
    function toURL : JURL; cdecl;                                               // ()Ljava/net/URL; A: $1
  end;

  [JavaSignature('java/net/URI')]
  JURI = interface(JObject)
    ['{98639172-F767-475B-8FBD-067147393FD8}']
    function compareTo(uri : JURI) : Integer; cdecl;                            // (Ljava/net/URI;)I A: $1
    function equals(o : JObject) : boolean; cdecl;                              // (Ljava/lang/Object;)Z A: $1
    function getAuthority : JString; cdecl;                                     // ()Ljava/lang/String; A: $1
    function getFragment : JString; cdecl;                                      // ()Ljava/lang/String; A: $1
    function getHost : JString; cdecl;                                          // ()Ljava/lang/String; A: $1
    function getPath : JString; cdecl;                                          // ()Ljava/lang/String; A: $1
    function getPort : Integer; cdecl;                                          // ()I A: $1
    function getQuery : JString; cdecl;                                         // ()Ljava/lang/String; A: $1
    function getRawAuthority : JString; cdecl;                                  // ()Ljava/lang/String; A: $1
    function getRawFragment : JString; cdecl;                                   // ()Ljava/lang/String; A: $1
    function getRawPath : JString; cdecl;                                       // ()Ljava/lang/String; A: $1
    function getRawQuery : JString; cdecl;                                      // ()Ljava/lang/String; A: $1
    function getRawSchemeSpecificPart : JString; cdecl;                         // ()Ljava/lang/String; A: $1
    function getRawUserInfo : JString; cdecl;                                   // ()Ljava/lang/String; A: $1
    function getScheme : JString; cdecl;                                        // ()Ljava/lang/String; A: $1
    function getSchemeSpecificPart : JString; cdecl;                            // ()Ljava/lang/String; A: $1
    function getUserInfo : JString; cdecl;                                      // ()Ljava/lang/String; A: $1
    function hashCode : Integer; cdecl;                                         // ()I A: $1
    function isAbsolute : boolean; cdecl;                                       // ()Z A: $1
    function isOpaque : boolean; cdecl;                                         // ()Z A: $1
    function normalize : JURI; cdecl;                                           // ()Ljava/net/URI; A: $1
    function parseServerAuthority : JURI; cdecl;                                // ()Ljava/net/URI; A: $1
    function relativize(relative : JURI) : JURI; cdecl;                         // (Ljava/net/URI;)Ljava/net/URI; A: $1
    function resolve(relative : JString) : JURI; cdecl; overload;               // (Ljava/lang/String;)Ljava/net/URI; A: $1
    function resolve(relative : JURI) : JURI; cdecl; overload;                  // (Ljava/net/URI;)Ljava/net/URI; A: $1
    function toASCIIString : JString; cdecl;                                    // ()Ljava/lang/String; A: $1
    function toString : JString; cdecl;                                         // ()Ljava/lang/String; A: $1
    function toURL : JURL; cdecl;                                               // ()Ljava/net/URL; A: $1
  end;

  TJURI = class(TJavaGenericImport<JURIClass, JURI>)
  end;

  // Merged from: .\android-19\java.net.URL.pas
  JURLClass = interface(JObjectClass)
    ['{1FD08B28-77E3-4EE3-B518-86761D220278}']
    function equals(o : JObject) : boolean; cdecl;                              // (Ljava/lang/Object;)Z A: $1
    function getAuthority : JString; cdecl;                                     // ()Ljava/lang/String; A: $1
    function getContent : JObject; cdecl; overload;                             // ()Ljava/lang/Object; A: $11
    function getContent(types : TJavaArray<JClass>) : JObject; cdecl; overload; // ([Ljava/lang/Class;)Ljava/lang/Object; A: $11
    function getDefaultPort : Integer; cdecl;                                   // ()I A: $1
    function getFile : JString; cdecl;                                          // ()Ljava/lang/String; A: $1
    function getHost : JString; cdecl;                                          // ()Ljava/lang/String; A: $1
    function getPath : JString; cdecl;                                          // ()Ljava/lang/String; A: $1
    function getPort : Integer; cdecl;                                          // ()I A: $1
    function getProtocol : JString; cdecl;                                      // ()Ljava/lang/String; A: $1
    function getQuery : JString; cdecl;                                         // ()Ljava/lang/String; A: $1
    function getRef : JString; cdecl;                                           // ()Ljava/lang/String; A: $1
    function getUserInfo : JString; cdecl;                                      // ()Ljava/lang/String; A: $1
    function hashCode : Integer; cdecl;                                         // ()I A: $1
    function init(context : JURL; spec : JString) : JURL; cdecl; overload;      // (Ljava/net/URL;Ljava/lang/String;)V A: $1
    function init(context : JURL; spec : JString; handler : JURLStreamHandler) : JURL; cdecl; overload;// (Ljava/net/URL;Ljava/lang/String;Ljava/net/URLStreamHandler;)V A: $1
    function init(protocol : JString; host : JString; &file : JString) : JURL; cdecl; overload;// (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V A: $1
    function init(protocol : JString; host : JString; port : Integer; &file : JString) : JURL; cdecl; overload;// (Ljava/lang/String;Ljava/lang/String;ILjava/lang/String;)V A: $1
    function init(protocol : JString; host : JString; port : Integer; &file : JString; handler : JURLStreamHandler) : JURL; cdecl; overload;// (Ljava/lang/String;Ljava/lang/String;ILjava/lang/String;Ljava/net/URLStreamHandler;)V A: $1
    function init(spec : JString) : JURL; cdecl; overload;                      // (Ljava/lang/String;)V A: $1
    function openConnection : JURLConnection; cdecl; overload;                  // ()Ljava/net/URLConnection; A: $1
    function openConnection(proxy : JProxy) : JURLConnection; cdecl; overload;  // (Ljava/net/Proxy;)Ljava/net/URLConnection; A: $1
    function openStream : JInputStream; cdecl;                                  // ()Ljava/io/InputStream; A: $11
    function sameFile(otherURL : JURL) : boolean; cdecl;                        // (Ljava/net/URL;)Z A: $1
    function toExternalForm : JString; cdecl;                                   // ()Ljava/lang/String; A: $1
    function toString : JString; cdecl;                                         // ()Ljava/lang/String; A: $1
    function toURI : JURI; cdecl;                                               // ()Ljava/net/URI; A: $1
    procedure setURLStreamHandlerFactory(factory : JURLStreamHandlerFactory) ; cdecl;// (Ljava/net/URLStreamHandlerFactory;)V A: $29
  end;

  [JavaSignature('java/net/URL')]
  JURL = interface(JObject)
    ['{4E12AF31-343D-45BE-B677-650D8788C334}']
    function equals(o : JObject) : boolean; cdecl;                              // (Ljava/lang/Object;)Z A: $1
    function getAuthority : JString; cdecl;                                     // ()Ljava/lang/String; A: $1
    function getDefaultPort : Integer; cdecl;                                   // ()I A: $1
    function getFile : JString; cdecl;                                          // ()Ljava/lang/String; A: $1
    function getHost : JString; cdecl;                                          // ()Ljava/lang/String; A: $1
    function getPath : JString; cdecl;                                          // ()Ljava/lang/String; A: $1
    function getPort : Integer; cdecl;                                          // ()I A: $1
    function getProtocol : JString; cdecl;                                      // ()Ljava/lang/String; A: $1
    function getQuery : JString; cdecl;                                         // ()Ljava/lang/String; A: $1
    function getRef : JString; cdecl;                                           // ()Ljava/lang/String; A: $1
    function getUserInfo : JString; cdecl;                                      // ()Ljava/lang/String; A: $1
    function hashCode : Integer; cdecl;                                         // ()I A: $1
    function openConnection : JURLConnection; cdecl; overload;                  // ()Ljava/net/URLConnection; A: $1
    function openConnection(proxy : JProxy) : JURLConnection; cdecl; overload;  // (Ljava/net/Proxy;)Ljava/net/URLConnection; A: $1
    function sameFile(otherURL : JURL) : boolean; cdecl;                        // (Ljava/net/URL;)Z A: $1
    function toExternalForm : JString; cdecl;                                   // ()Ljava/lang/String; A: $1
    function toString : JString; cdecl;                                         // ()Ljava/lang/String; A: $1
    function toURI : JURI; cdecl;                                               // ()Ljava/net/URI; A: $1
  end;

  TJURL = class(TJavaGenericImport<JURLClass, JURL>)
  end;


  // Merged from: .\android-19\java.net.URLStreamHandler.pas
  JURLStreamHandlerClass = interface(JObjectClass)
    ['{07A3DB96-6801-490D-A988-3F841E15F3C4}']
    function init : JURLStreamHandler; cdecl;                                   // ()V A: $1
  end;

  [JavaSignature('java/net/URLStreamHandler')]
  JURLStreamHandler = interface(JObject)
    ['{D0143288-D8EE-46B4-84D5-D13932B57382}']
  end;

  TJURLStreamHandler = class(TJavaGenericImport<JURLStreamHandlerClass, JURLStreamHandler>)
  end;


  // Merged from: .\android-19\java.net.URLConnection.pas
  JURLConnectionClass = interface(JObjectClass)
    ['{EC92A83C-514E-4718-968C-CF8B50FDEA19}']
    function getAllowUserInteraction : boolean; cdecl;                          // ()Z A: $1
    function getConnectTimeout : Integer; cdecl;                                // ()I A: $1
    function getContent : JObject; cdecl; overload;                             // ()Ljava/lang/Object; A: $1
    function getContent(types : TJavaArray<JClass>) : JObject; cdecl; overload; // ([Ljava/lang/Class;)Ljava/lang/Object; A: $1
    function getContentEncoding : JString; cdecl;                               // ()Ljava/lang/String; A: $1
    function getContentLength : Integer; cdecl;                                 // ()I A: $1
    function getContentType : JString; cdecl;                                   // ()Ljava/lang/String; A: $1
    function getDate : Int64; cdecl;                                            // ()J A: $1
    function getDefaultAllowUserInteraction : boolean; cdecl;                   // ()Z A: $9
    function getDefaultRequestProperty(field : JString) : JString; deprecated; cdecl;// (Ljava/lang/String;)Ljava/lang/String; A: $9
    function getDefaultUseCaches : boolean; cdecl;                              // ()Z A: $1
    function getDoInput : boolean; cdecl;                                       // ()Z A: $1
    function getDoOutput : boolean; cdecl;                                      // ()Z A: $1
    function getExpiration : Int64; cdecl;                                      // ()J A: $1
    function getFileNameMap : JFileNameMap; cdecl;                              // ()Ljava/net/FileNameMap; A: $9
    function getHeaderField(key : JString) : JString; cdecl; overload;          // (Ljava/lang/String;)Ljava/lang/String; A: $1
    function getHeaderField(pos : Integer) : JString; cdecl; overload;          // (I)Ljava/lang/String; A: $1
    function getHeaderFieldDate(field : JString; defaultValue : Int64) : Int64; cdecl;// (Ljava/lang/String;J)J A: $1
    function getHeaderFieldInt(field : JString; defaultValue : Integer) : Integer; cdecl;// (Ljava/lang/String;I)I A: $1
    function getHeaderFieldKey(posn : Integer) : JString; cdecl;                // (I)Ljava/lang/String; A: $1
    function getHeaderFields : JMap; cdecl;                                     // ()Ljava/util/Map; A: $1
    function getIfModifiedSince : Int64; cdecl;                                 // ()J A: $1
    function getInputStream : JInputStream; cdecl;                              // ()Ljava/io/InputStream; A: $1
    function getLastModified : Int64; cdecl;                                    // ()J A: $1
    function getOutputStream : JOutputStream; cdecl;                            // ()Ljava/io/OutputStream; A: $1
    function getPermission : JPermission; cdecl;                                // ()Ljava/security/Permission; A: $1
    function getReadTimeout : Integer; cdecl;                                   // ()I A: $1
    function getRequestProperties : JMap; cdecl;                                // ()Ljava/util/Map; A: $1
    function getRequestProperty(field : JString) : JString; cdecl;              // (Ljava/lang/String;)Ljava/lang/String; A: $1
    function getURL : JURL; cdecl;                                              // ()Ljava/net/URL; A: $1
    function getUseCaches : boolean; cdecl;                                     // ()Z A: $1
    function guessContentTypeFromName(url : JString) : JString; cdecl;          // (Ljava/lang/String;)Ljava/lang/String; A: $9
    function guessContentTypeFromStream(&is : JInputStream) : JString; cdecl;   // (Ljava/io/InputStream;)Ljava/lang/String; A: $9
    function toString : JString; cdecl;                                         // ()Ljava/lang/String; A: $1
    procedure addRequestProperty(field : JString; newValue : JString) ; cdecl;  // (Ljava/lang/String;Ljava/lang/String;)V A: $1
    procedure connect ; cdecl;                                                  // ()V A: $401
    procedure setAllowUserInteraction(newValue : boolean) ; cdecl;              // (Z)V A: $1
    procedure setConnectTimeout(timeoutMillis : Integer) ; cdecl;               // (I)V A: $1
    procedure setContentHandlerFactory(contentFactory : JContentHandlerFactory) ; cdecl;// (Ljava/net/ContentHandlerFactory;)V A: $29
    procedure setDefaultAllowUserInteraction(allows : boolean) ; cdecl;         // (Z)V A: $9
    procedure setDefaultRequestProperty(field : JString; value : JString) ; deprecated; cdecl;// (Ljava/lang/String;Ljava/lang/String;)V A: $9
    procedure setDefaultUseCaches(newValue : boolean) ; cdecl;                  // (Z)V A: $1
    procedure setDoInput(newValue : boolean) ; cdecl;                           // (Z)V A: $1
    procedure setDoOutput(newValue : boolean) ; cdecl;                          // (Z)V A: $1
    procedure setFileNameMap(map : JFileNameMap) ; cdecl;                       // (Ljava/net/FileNameMap;)V A: $9
    procedure setIfModifiedSince(newValue : Int64) ; cdecl;                     // (J)V A: $1
    procedure setReadTimeout(timeoutMillis : Integer) ; cdecl;                  // (I)V A: $1
    procedure setRequestProperty(field : JString; newValue : JString) ; cdecl;  // (Ljava/lang/String;Ljava/lang/String;)V A: $1
    procedure setUseCaches(newValue : boolean) ; cdecl;                         // (Z)V A: $1
  end;

  [JavaSignature('java/net/URLConnection')]
  JURLConnection = interface(JObject)
    ['{506A2CE1-CC89-4A54-8793-D317BD07ADA2}']
    function getAllowUserInteraction : boolean; cdecl;                          // ()Z A: $1
    function getConnectTimeout : Integer; cdecl;                                // ()I A: $1
    function getContent : JObject; cdecl; overload;                             // ()Ljava/lang/Object; A: $1
    function getContent(types : TJavaArray<JClass>) : JObject; cdecl; overload; // ([Ljava/lang/Class;)Ljava/lang/Object; A: $1
    function getContentEncoding : JString; cdecl;                               // ()Ljava/lang/String; A: $1
    function getContentLength : Integer; cdecl;                                 // ()I A: $1
    function getContentType : JString; cdecl;                                   // ()Ljava/lang/String; A: $1
    function getDate : Int64; cdecl;                                            // ()J A: $1
    function getDefaultUseCaches : boolean; cdecl;                              // ()Z A: $1
    function getDoInput : boolean; cdecl;                                       // ()Z A: $1
    function getDoOutput : boolean; cdecl;                                      // ()Z A: $1
    function getExpiration : Int64; cdecl;                                      // ()J A: $1
    function getHeaderField(key : JString) : JString; cdecl; overload;          // (Ljava/lang/String;)Ljava/lang/String; A: $1
    function getHeaderField(pos : Integer) : JString; cdecl; overload;          // (I)Ljava/lang/String; A: $1
    function getHeaderFieldDate(field : JString; defaultValue : Int64) : Int64; cdecl;// (Ljava/lang/String;J)J A: $1
    function getHeaderFieldInt(field : JString; defaultValue : Integer) : Integer; cdecl;// (Ljava/lang/String;I)I A: $1
    function getHeaderFieldKey(posn : Integer) : JString; cdecl;                // (I)Ljava/lang/String; A: $1
    function getHeaderFields : JMap; cdecl;                                     // ()Ljava/util/Map; A: $1
    function getIfModifiedSince : Int64; cdecl;                                 // ()J A: $1
    function getInputStream : JInputStream; cdecl;                              // ()Ljava/io/InputStream; A: $1
    function getLastModified : Int64; cdecl;                                    // ()J A: $1
    function getOutputStream : JOutputStream; cdecl;                            // ()Ljava/io/OutputStream; A: $1
    function getPermission : JPermission; cdecl;                                // ()Ljava/security/Permission; A: $1
    function getReadTimeout : Integer; cdecl;                                   // ()I A: $1
    function getRequestProperties : JMap; cdecl;                                // ()Ljava/util/Map; A: $1
    function getRequestProperty(field : JString) : JString; cdecl;              // (Ljava/lang/String;)Ljava/lang/String; A: $1
    function getURL : JURL; cdecl;                                              // ()Ljava/net/URL; A: $1
    function getUseCaches : boolean; cdecl;                                     // ()Z A: $1
    function toString : JString; cdecl;                                         // ()Ljava/lang/String; A: $1
    procedure addRequestProperty(field : JString; newValue : JString) ; cdecl;  // (Ljava/lang/String;Ljava/lang/String;)V A: $1
    procedure connect ; cdecl;                                                  // ()V A: $401
    procedure setAllowUserInteraction(newValue : boolean) ; cdecl;              // (Z)V A: $1
    procedure setConnectTimeout(timeoutMillis : Integer) ; cdecl;               // (I)V A: $1
    procedure setDefaultUseCaches(newValue : boolean) ; cdecl;                  // (Z)V A: $1
    procedure setDoInput(newValue : boolean) ; cdecl;                           // (Z)V A: $1
    procedure setDoOutput(newValue : boolean) ; cdecl;                          // (Z)V A: $1
    procedure setIfModifiedSince(newValue : Int64) ; cdecl;                     // (J)V A: $1
    procedure setReadTimeout(timeoutMillis : Integer) ; cdecl;                  // (I)V A: $1
    procedure setRequestProperty(field : JString; newValue : JString) ; cdecl;  // (Ljava/lang/String;Ljava/lang/String;)V A: $1
    procedure setUseCaches(newValue : boolean) ; cdecl;                         // (Z)V A: $1
  end;

  TJURLConnection = class(TJavaGenericImport<JURLConnectionClass, JURLConnection>)
  end;


  // Merged from: .\android-19\java.net.URLStreamHandlerFactory.pas
  JURLStreamHandlerFactoryClass = interface(JObjectClass)
    ['{4BEB63DC-D96C-4DAE-BB99-BF12D82D0AFE}']
    function createURLStreamHandler(JStringparam0 : JString) : JURLStreamHandler; cdecl;// (Ljava/lang/String;)Ljava/net/URLStreamHandler; A: $401
  end;

  [JavaSignature('java/net/URLStreamHandlerFactory')]
  JURLStreamHandlerFactory = interface(JObject)
    ['{5C52C01D-5EAA-4DC2-AF07-1CEEB5EA972E}']
    function createURLStreamHandler(JStringparam0 : JString) : JURLStreamHandler; cdecl;// (Ljava/lang/String;)Ljava/net/URLStreamHandler; A: $401
  end;

  TJURLStreamHandlerFactory = class(TJavaGenericImport<JURLStreamHandlerFactoryClass, JURLStreamHandlerFactory>)
  end;


  JContentHandlerClass = interface(JObjectClass)
    ['{A59AF9B7-5AC9-4DBA-905D-C6E42F9F8F7A}']
    function getContent(JURLConnectionparam0 : JURLConnection) : JObject; cdecl; overload;// (Ljava/net/URLConnection;)Ljava/lang/Object; A: $401
    function getContent(uConn : JURLConnection; types : TJavaArray<JClass>) : JObject; cdecl; overload;// (Ljava/net/URLConnection;[Ljava/lang/Class;)Ljava/lang/Object; A: $1
    function init : JContentHandler; cdecl;                                     // ()V A: $1
  end;

  [JavaSignature('java/net/ContentHandler')]
  JContentHandler = interface(JObject)
    ['{286DC805-8A97-4D32-A416-4CE10548B120}']
    function getContent(JURLConnectionparam0 : JURLConnection) : JObject; cdecl; overload;// (Ljava/net/URLConnection;)Ljava/lang/Object; A: $401
    function getContent(uConn : JURLConnection; types : TJavaArray<JClass>) : JObject; cdecl; overload;// (Ljava/net/URLConnection;[Ljava/lang/Class;)Ljava/lang/Object; A: $1
  end;

  TJContentHandler = class(TJavaGenericImport<JContentHandlerClass, JContentHandler>)
  end;


  JContentHandlerFactoryClass = interface(JObjectClass)
    ['{0FBDFBC3-39FC-4B4C-830F-39498BD69718}']
    function createContentHandler(JStringparam0 : JString) : JContentHandler; cdecl;// (Ljava/lang/String;)Ljava/net/ContentHandler; A: $401
  end;

  [JavaSignature('java/net/ContentHandlerFactory')]
  JContentHandlerFactory = interface(JObject)
    ['{5B15CF13-040D-4EEE-8C1D-BE53A1F92F8D}']
    function createContentHandler(JStringparam0 : JString) : JContentHandler; cdecl;// (Ljava/lang/String;)Ljava/net/ContentHandler; A: $401
  end;

  TJContentHandlerFactory = class(TJavaGenericImport<JContentHandlerFactoryClass, JContentHandlerFactory>)
  end;

  JCodeSourceClass = interface(JObjectClass)
    ['{D43FA639-4BF5-4B93-A322-78AB7D43ABA5}']
    function getCertificates : TJavaArray<JCertificate>; cdecl;                 // ()[Ljava/security/cert/Certificate; A: $11
    function getCodeSigners : TJavaArray<JCodeSigner>; cdecl;                   // ()[Ljava/security/CodeSigner; A: $11
    function getLocation : JURL; cdecl;                                         // ()Ljava/net/URL; A: $11
    function implies(cs : JCodeSource) : boolean; cdecl;                        // (Ljava/security/CodeSource;)Z A: $1
    function init(location : JURL; certs : TJavaArray<JCertificate>) : JCodeSource; cdecl; overload;// (Ljava/net/URL;[Ljava/security/cert/Certificate;)V A: $1
    function init(location : JURL; signers : TJavaArray<JCodeSigner>) : JCodeSource; cdecl; overload;// (Ljava/net/URL;[Ljava/security/CodeSigner;)V A: $1
  end;

  [JavaSignature('java/security/CodeSource')]
  JCodeSource = interface(JObject)
    ['{15169E91-9693-4A85-97E5-BF0723D596D9}']
    function implies(cs : JCodeSource) : boolean; cdecl;                        // (Ljava/security/CodeSource;)Z A: $1
  end;

  TJCodeSource = class(TJavaGenericImport<JCodeSourceClass, JCodeSource>)
  end;

  JProtectionDomainClass = interface(JObjectClass)
    ['{98F1F920-5C35-442C-B9A7-61B6B49C537D}']
    function getClassLoader : JClassLoader; cdecl;                              // ()Ljava/lang/ClassLoader; A: $11
    function getCodeSource : JCodeSource; cdecl;                                // ()Ljava/security/CodeSource; A: $11
    function getPermissions : JPermissionCollection; cdecl;                     // ()Ljava/security/PermissionCollection; A: $11
    function getPrincipals : TJavaArray<JPrincipal>; cdecl;                     // ()[Ljava/security/Principal; A: $11
    function implies(permission : JPermission) : boolean; cdecl;                // (Ljava/security/Permission;)Z A: $1
    function init(cs : JCodeSource; permissions : JPermissionCollection) : JProtectionDomain; cdecl; overload;// (Ljava/security/CodeSource;Ljava/security/PermissionCollection;)V A: $1
    function init(cs : JCodeSource; permissions : JPermissionCollection; cl : JClassLoader; principals : TJavaArray<JPrincipal>) : JProtectionDomain; cdecl; overload;// (Ljava/security/CodeSource;Ljava/security/PermissionCollection;Ljava/lang/ClassLoader;[Ljava/security/Principal;)V A: $1
  end;

  [JavaSignature('java/security/ProtectionDomain')]
  JProtectionDomain = interface(JObject)
    ['{8E41ED91-AC30-4D4F-9D03-6565E440A76A}']
    function implies(permission : JPermission) : boolean; cdecl;                // (Ljava/security/Permission;)Z A: $1
  end;

  TJProtectionDomain = class(TJavaGenericImport<JProtectionDomainClass, JProtectionDomain>)
  end;

  JPackageClass = interface(JObjectClass)
    ['{FB4724C8-1965-4BCF-BDC8-6966503DC1E3}']
    function getAnnotation(annotationType : JClass) : JAnnotation; cdecl;       // (Ljava/lang/Class;)Ljava/lang/annotation/Annotation; A: $1
    function getAnnotations : TJavaArray<JAnnotation>; cdecl;                   // ()[Ljava/lang/annotation/Annotation; A: $1
    function getDeclaredAnnotations : TJavaArray<JAnnotation>; cdecl;           // ()[Ljava/lang/annotation/Annotation; A: $1
    function getImplementationTitle : JString; cdecl;                           // ()Ljava/lang/String; A: $1
    function getImplementationVendor : JString; cdecl;                          // ()Ljava/lang/String; A: $1
    function getImplementationVersion : JString; cdecl;                         // ()Ljava/lang/String; A: $1
    function getName : JString; cdecl;                                          // ()Ljava/lang/String; A: $1
    function getPackage(packageName : JString) : JPackage; cdecl;               // (Ljava/lang/String;)Ljava/lang/Package; A: $9
    function getPackages : TJavaArray<JPackage>; cdecl;                         // ()[Ljava/lang/Package; A: $9
    function getSpecificationTitle : JString; cdecl;                            // ()Ljava/lang/String; A: $1
    function getSpecificationVendor : JString; cdecl;                           // ()Ljava/lang/String; A: $1
    function getSpecificationVersion : JString; cdecl;                          // ()Ljava/lang/String; A: $1
    function hashCode : Integer; cdecl;                                         // ()I A: $1
    function isAnnotationPresent(annotationType : JClass) : boolean; cdecl;     // (Ljava/lang/Class;)Z A: $1
    function isCompatibleWith(version : JString) : boolean; cdecl;              // (Ljava/lang/String;)Z A: $1
    function isSealed : boolean; cdecl; overload;                               // ()Z A: $1
    function isSealed(url : JURL) : boolean; cdecl; overload;                   // (Ljava/net/URL;)Z A: $1
    function toString : JString; cdecl;                                         // ()Ljava/lang/String; A: $1
  end;

  [JavaSignature('java/lang/Package')]
  JPackage = interface(JObject)
    ['{443BD34C-2227-4BD9-ADFB-788CE222E1F1}']
    function getAnnotation(annotationType : JClass) : JAnnotation; cdecl;       // (Ljava/lang/Class;)Ljava/lang/annotation/Annotation; A: $1
    function getAnnotations : TJavaArray<JAnnotation>; cdecl;                   // ()[Ljava/lang/annotation/Annotation; A: $1
    function getDeclaredAnnotations : TJavaArray<JAnnotation>; cdecl;           // ()[Ljava/lang/annotation/Annotation; A: $1
    function getImplementationTitle : JString; cdecl;                           // ()Ljava/lang/String; A: $1
    function getImplementationVendor : JString; cdecl;                          // ()Ljava/lang/String; A: $1
    function getImplementationVersion : JString; cdecl;                         // ()Ljava/lang/String; A: $1
    function getName : JString; cdecl;                                          // ()Ljava/lang/String; A: $1
    function getSpecificationTitle : JString; cdecl;                            // ()Ljava/lang/String; A: $1
    function getSpecificationVendor : JString; cdecl;                           // ()Ljava/lang/String; A: $1
    function getSpecificationVersion : JString; cdecl;                          // ()Ljava/lang/String; A: $1
    function hashCode : Integer; cdecl;                                         // ()I A: $1
    function isAnnotationPresent(annotationType : JClass) : boolean; cdecl;     // (Ljava/lang/Class;)Z A: $1
    function isCompatibleWith(version : JString) : boolean; cdecl;              // (Ljava/lang/String;)Z A: $1
    function isSealed : boolean; cdecl; overload;                               // ()Z A: $1
    function isSealed(url : JURL) : boolean; cdecl; overload;                   // (Ljava/net/URL;)Z A: $1
    function toString : JString; cdecl;                                         // ()Ljava/lang/String; A: $1
  end;

  TJPackage = class(TJavaGenericImport<JPackageClass, JPackage>)
  end;

  JProxyClass = interface(JObjectClass)
    ['{41332309-D901-4ED7-BEAA-3698C95C3A09}']
    function &type : JProxy_Type; cdecl;                                        // ()Ljava/net/Proxy$Type; A: $1
    function _GetNO_PROXY : JProxy; cdecl;                                      //  A: $19
    function address : JSocketAddress; cdecl;                                   // ()Ljava/net/SocketAddress; A: $1
    function equals(obj : JObject) : boolean; cdecl;                            // (Ljava/lang/Object;)Z A: $11
    function hashCode : Integer; cdecl;                                         // ()I A: $11
    function init(&type : JProxy_Type; sa : JSocketAddress) : JProxy; cdecl;    // (Ljava/net/Proxy$Type;Ljava/net/SocketAddress;)V A: $1
    function toString : JString; cdecl;                                         // ()Ljava/lang/String; A: $1
    property NO_PROXY : JProxy read _GetNO_PROXY;                               // Ljava/net/Proxy; A: $19
  end;

  [JavaSignature('java/net/Proxy$Type')]
  JProxy = interface(JObject)
    ['{CAC14FDE-170A-4BD2-B43E-0DE366B962C1}']
    function &type : JProxy_Type; cdecl;                                        // ()Ljava/net/Proxy$Type; A: $1
    function address : JSocketAddress; cdecl;                                   // ()Ljava/net/SocketAddress; A: $1
    function toString : JString; cdecl;                                         // ()Ljava/lang/String; A: $1
  end;

  TJProxy = class(TJavaGenericImport<JProxyClass, JProxy>)
  end;


  JFileNameMapClass = interface(JObjectClass)
    ['{45F2D345-CA80-46D5-87B6-A472AB8EE4A0}']
    function getContentTypeFor(JStringparam0 : JString) : JString; cdecl;       // (Ljava/lang/String;)Ljava/lang/String; A: $401
  end;

  [JavaSignature('java/net/FileNameMap')]
  JFileNameMap = interface(JObject)
    ['{288E627D-5695-4BCB-AA03-C9945B4AC5CC}']
    function getContentTypeFor(JStringparam0 : JString) : JString; cdecl;       // (Ljava/lang/String;)Ljava/lang/String; A: $401
  end;

  TJFileNameMap = class(TJavaGenericImport<JFileNameMapClass, JFileNameMap>)
  end;

  JPermissionClass = interface(JObjectClass)
    ['{890D2BB9-00A6-4495-855D-4DA3C6E25DFB}']
    function equals(JObjectparam0 : JObject) : boolean; cdecl;                  // (Ljava/lang/Object;)Z A: $401
    function toString : JString; cdecl;                                         // ()Ljava/lang/String; A: $401
  end;

  [JavaSignature('java/security/acl/Permission')]
  JPermission = interface(JObject)
    ['{FDEFC8BF-4C61-4791-8E46-35025D980FCB}']
    function equals(JObjectparam0 : JObject) : boolean; cdecl;                  // (Ljava/lang/Object;)Z A: $401
    function toString : JString; cdecl;                                         // ()Ljava/lang/String; A: $401
  end;

  TJPermission = class(TJavaGenericImport<JPermissionClass, JPermission>)
  end;

  JCertificateClass = interface(JObjectClass)
    ['{C942F740-F56D-4162-B7F2-36FF9722BC1A}']
    function equals(other : JObject) : boolean; cdecl;                          // (Ljava/lang/Object;)Z A: $1
    function getEncoded : TJavaArray<Byte>; cdecl;                              // ()[B A: $401
    function getPublicKey : JPublicKey; cdecl;                                  // ()Ljava/security/PublicKey; A: $401
    function getType : JString; cdecl;                                          // ()Ljava/lang/String; A: $11
    function hashCode : Integer; cdecl;                                         // ()I A: $1
    function toString : JString; cdecl;                                         // ()Ljava/lang/String; A: $401
    procedure verify(JPublicKeyparam0 : JPublicKey) ; cdecl; overload;          // (Ljava/security/PublicKey;)V A: $401
    procedure verify(JPublicKeyparam0 : JPublicKey; JStringparam1 : JString) ; cdecl; overload;// (Ljava/security/PublicKey;Ljava/lang/String;)V A: $401
  end;

  [JavaSignature('java/security/cert/Certificate$CertificateRep')]
  JCertificate = interface(JObject)
    ['{8CBB04F7-8FC0-466A-B1C2-54D9F9EEDD9B}']
    function equals(other : JObject) : boolean; cdecl;                          // (Ljava/lang/Object;)Z A: $1
    function getEncoded : TJavaArray<Byte>; cdecl;                              // ()[B A: $401
    function getPublicKey : JPublicKey; cdecl;                                  // ()Ljava/security/PublicKey; A: $401
    function hashCode : Integer; cdecl;                                         // ()I A: $1
    function toString : JString; cdecl;                                         // ()Ljava/lang/String; A: $401
    procedure verify(JPublicKeyparam0 : JPublicKey) ; cdecl; overload;          // (Ljava/security/PublicKey;)V A: $401
    procedure verify(JPublicKeyparam0 : JPublicKey; JStringparam1 : JString) ; cdecl; overload;// (Ljava/security/PublicKey;Ljava/lang/String;)V A: $401
  end;

  TJCertificate = class(TJavaGenericImport<JCertificateClass, JCertificate>)
  end;

  JCodeSignerClass = interface(JObjectClass)
    ['{2BCE3069-7BCB-4868-B178-263DBC5D0EBC}']
    function equals(obj : JObject) : boolean; cdecl;                            // (Ljava/lang/Object;)Z A: $1
    function getSignerCertPath : JCertPath; cdecl;                              // ()Ljava/security/cert/CertPath; A: $1
    function getTimestamp : JTimestamp; cdecl;                                  // ()Ljava/security/Timestamp; A: $1
    function hashCode : Integer; cdecl;                                         // ()I A: $1
    function init(signerCertPath : JCertPath; timestamp : JTimestamp) : JCodeSigner; cdecl;// (Ljava/security/cert/CertPath;Ljava/security/Timestamp;)V A: $1
    function toString : JString; cdecl;                                         // ()Ljava/lang/String; A: $1
  end;

  [JavaSignature('java/security/CodeSigner')]
  JCodeSigner = interface(JObject)
    ['{EC16B2F9-62F8-4D48-9CF8-ABFA74BA5E22}']
    function equals(obj : JObject) : boolean; cdecl;                            // (Ljava/lang/Object;)Z A: $1
    function getSignerCertPath : JCertPath; cdecl;                              // ()Ljava/security/cert/CertPath; A: $1
    function getTimestamp : JTimestamp; cdecl;                                  // ()Ljava/security/Timestamp; A: $1
    function hashCode : Integer; cdecl;                                         // ()I A: $1
    function toString : JString; cdecl;                                         // ()Ljava/lang/String; A: $1
  end;

  TJCodeSigner = class(TJavaGenericImport<JCodeSignerClass, JCodeSigner>)
  end;



implementation

end.
