//
// Generated by JavaToPas v1.5 20140918 - 132127
////////////////////////////////////////////////////////////////////////////////
unit java.util.concurrent.locks.ReentrantReadWriteLock;

interface

uses
  AndroidAPI.JNIBridge,
  Androidapi.JNI.JavaTypes,
  java.util.concurrent.locks.Condition,
  java.util.concurrent.TimeUnit;

type
  JReentrantReadWriteLock_ReadLock = interface; // merged
  JReentrantReadWriteLock_WriteLock = interface; // merged
  JReentrantReadWriteLock = interface;

  JReentrantReadWriteLockClass = interface(JObjectClass)
    ['{85B8322F-EDAB-48C9-B317-CDAD71F0C75E}']
    function getQueueLength : Integer; cdecl;                                   // ()I A: $11
    function getReadHoldCount : Integer; cdecl;                                 // ()I A: $1
    function getReadLockCount : Integer; cdecl;                                 // ()I A: $1
    function getWaitQueueLength(condition : JCondition) : Integer; cdecl;       // (Ljava/util/concurrent/locks/Condition;)I A: $1
    function getWriteHoldCount : Integer; cdecl;                                // ()I A: $1
    function hasQueuedThread(thread : JThread) : boolean; cdecl;                // (Ljava/lang/Thread;)Z A: $11
    function hasQueuedThreads : boolean; cdecl;                                 // ()Z A: $11
    function hasWaiters(condition : JCondition) : boolean; cdecl;               // (Ljava/util/concurrent/locks/Condition;)Z A: $1
    function init : JReentrantReadWriteLock; cdecl; overload;                   // ()V A: $1
    function init(fair : boolean) : JReentrantReadWriteLock; cdecl; overload;   // (Z)V A: $1
    function isFair : boolean; cdecl;                                           // ()Z A: $11
    function isWriteLocked : boolean; cdecl;                                    // ()Z A: $1
    function isWriteLockedByCurrentThread : boolean; cdecl;                     // ()Z A: $1
    function readLock : JReentrantReadWriteLock_ReadLock; cdecl;                // ()Ljava/util/concurrent/locks/ReentrantReadWriteLock$ReadLock; A: $1
    function toString : JString; cdecl;                                         // ()Ljava/lang/String; A: $1
    function writeLock : JReentrantReadWriteLock_WriteLock; cdecl;              // ()Ljava/util/concurrent/locks/ReentrantReadWriteLock$WriteLock; A: $1
  end;

  [JavaSignature('java/util/concurrent/locks/ReentrantReadWriteLock$WriteLock')]
  JReentrantReadWriteLock = interface(JObject)
    ['{15B23628-9E61-4120-A275-E51ECF27DB3A}']
    function getReadHoldCount : Integer; cdecl;                                 // ()I A: $1
    function getReadLockCount : Integer; cdecl;                                 // ()I A: $1
    function getWaitQueueLength(condition : JCondition) : Integer; cdecl;       // (Ljava/util/concurrent/locks/Condition;)I A: $1
    function getWriteHoldCount : Integer; cdecl;                                // ()I A: $1
    function hasWaiters(condition : JCondition) : boolean; cdecl;               // (Ljava/util/concurrent/locks/Condition;)Z A: $1
    function isWriteLocked : boolean; cdecl;                                    // ()Z A: $1
    function isWriteLockedByCurrentThread : boolean; cdecl;                     // ()Z A: $1
    function readLock : JReentrantReadWriteLock_ReadLock; cdecl;                // ()Ljava/util/concurrent/locks/ReentrantReadWriteLock$ReadLock; A: $1
    function toString : JString; cdecl;                                         // ()Ljava/lang/String; A: $1
    function writeLock : JReentrantReadWriteLock_WriteLock; cdecl;              // ()Ljava/util/concurrent/locks/ReentrantReadWriteLock$WriteLock; A: $1
  end;

  TJReentrantReadWriteLock = class(TJavaGenericImport<JReentrantReadWriteLockClass, JReentrantReadWriteLock>)
  end;

  // Merged from: .\android-19\java.util.concurrent.locks.ReentrantReadWriteLock_WriteLock.pas
  JReentrantReadWriteLock_WriteLockClass = interface(JObjectClass)
    ['{E8B0AB60-48F5-4340-9B3C-BDE5B393521E}']
    function getHoldCount : Integer; cdecl;                                     // ()I A: $1
    function isHeldByCurrentThread : boolean; cdecl;                            // ()Z A: $1
    function newCondition : JCondition; cdecl;                                  // ()Ljava/util/concurrent/locks/Condition; A: $1
    function toString : JString; cdecl;                                         // ()Ljava/lang/String; A: $1
    function tryLock : boolean; cdecl; overload;                                // ()Z A: $1
    function tryLock(timeout : Int64; &unit : JTimeUnit) : boolean; cdecl; overload;// (JLjava/util/concurrent/TimeUnit;)Z A: $1
    procedure lock ; cdecl;                                                     // ()V A: $1
    procedure lockInterruptibly ; cdecl;                                        // ()V A: $1
    procedure unlock ; cdecl;                                                   // ()V A: $1
  end;

  [JavaSignature('java/util/concurrent/locks/ReentrantReadWriteLock_WriteLock')]
  JReentrantReadWriteLock_WriteLock = interface(JObject)
    ['{1DE53F43-48B2-46C5-B5D2-4C30622B4B58}']
    function getHoldCount : Integer; cdecl;                                     // ()I A: $1
    function isHeldByCurrentThread : boolean; cdecl;                            // ()Z A: $1
    function newCondition : JCondition; cdecl;                                  // ()Ljava/util/concurrent/locks/Condition; A: $1
    function toString : JString; cdecl;                                         // ()Ljava/lang/String; A: $1
    function tryLock : boolean; cdecl; overload;                                // ()Z A: $1
    function tryLock(timeout : Int64; &unit : JTimeUnit) : boolean; cdecl; overload;// (JLjava/util/concurrent/TimeUnit;)Z A: $1
    procedure lock ; cdecl;                                                     // ()V A: $1
    procedure lockInterruptibly ; cdecl;                                        // ()V A: $1
    procedure unlock ; cdecl;                                                   // ()V A: $1
  end;

  TJReentrantReadWriteLock_WriteLock = class(TJavaGenericImport<JReentrantReadWriteLock_WriteLockClass, JReentrantReadWriteLock_WriteLock>)
  end;


  // Merged from: .\android-19\java.util.concurrent.locks.ReentrantReadWriteLock_ReadLock.pas
  JReentrantReadWriteLock_ReadLockClass = interface(JObjectClass)
    ['{C617474D-B548-4DE4-9F12-4C2C7C17D5DE}']
    function newCondition : JCondition; cdecl;                                  // ()Ljava/util/concurrent/locks/Condition; A: $1
    function toString : JString; cdecl;                                         // ()Ljava/lang/String; A: $1
    function tryLock : boolean; cdecl; overload;                                // ()Z A: $1
    function tryLock(timeout : Int64; &unit : JTimeUnit) : boolean; cdecl; overload;// (JLjava/util/concurrent/TimeUnit;)Z A: $1
    procedure lock ; cdecl;                                                     // ()V A: $1
    procedure lockInterruptibly ; cdecl;                                        // ()V A: $1
    procedure unlock ; cdecl;                                                   // ()V A: $1
  end;

  [JavaSignature('java/util/concurrent/locks/ReentrantReadWriteLock_ReadLock')]
  JReentrantReadWriteLock_ReadLock = interface(JObject)
    ['{50897538-A242-40F1-AC07-8FCC89A5F10B}']
    function newCondition : JCondition; cdecl;                                  // ()Ljava/util/concurrent/locks/Condition; A: $1
    function toString : JString; cdecl;                                         // ()Ljava/lang/String; A: $1
    function tryLock : boolean; cdecl; overload;                                // ()Z A: $1
    function tryLock(timeout : Int64; &unit : JTimeUnit) : boolean; cdecl; overload;// (JLjava/util/concurrent/TimeUnit;)Z A: $1
    procedure lock ; cdecl;                                                     // ()V A: $1
    procedure lockInterruptibly ; cdecl;                                        // ()V A: $1
    procedure unlock ; cdecl;                                                   // ()V A: $1
  end;

  TJReentrantReadWriteLock_ReadLock = class(TJavaGenericImport<JReentrantReadWriteLock_ReadLockClass, JReentrantReadWriteLock_ReadLock>)
  end;


implementation

end.
