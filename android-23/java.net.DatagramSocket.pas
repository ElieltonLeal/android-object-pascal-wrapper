//
// Generated by JavaToPas v1.5 20150831 - 132238
////////////////////////////////////////////////////////////////////////////////
unit java.net.DatagramSocket;

interface

uses
  AndroidAPI.JNIBridge,
  Androidapi.JNI.JavaTypes,
  java.net.InetAddress,
  java.net.DatagramSocketImpl,
  java.net.SocketAddress,
  java.net.DatagramPacket,
  java.net.DatagramSocketImplFactory,
  java.nio.channels.spi.AbstractSelector,
  java.nio.ByteBuffer;

type
  JDatagramChannel = interface; // merged
  JDatagramSocket = interface;

  JDatagramSocketClass = interface(JObjectClass)
    ['{B2595E84-6CF3-4F61-940B-9B3CBEB5EC2E}']
    function getBroadcast : boolean; cdecl;                                     // ()Z A: $1
    function getChannel : JDatagramChannel; cdecl;                              // ()Ljava/nio/channels/DatagramChannel; A: $1
    function getInetAddress : JInetAddress; cdecl;                              // ()Ljava/net/InetAddress; A: $1
    function getLocalAddress : JInetAddress; cdecl;                             // ()Ljava/net/InetAddress; A: $1
    function getLocalPort : Integer; cdecl;                                     // ()I A: $1
    function getLocalSocketAddress : JSocketAddress; cdecl;                     // ()Ljava/net/SocketAddress; A: $1
    function getPort : Integer; cdecl;                                          // ()I A: $1
    function getReceiveBufferSize : Integer; cdecl;                             // ()I A: $21
    function getRemoteSocketAddress : JSocketAddress; cdecl;                    // ()Ljava/net/SocketAddress; A: $1
    function getReuseAddress : boolean; cdecl;                                  // ()Z A: $1
    function getSendBufferSize : Integer; cdecl;                                // ()I A: $21
    function getSoTimeout : Integer; cdecl;                                     // ()I A: $21
    function getTrafficClass : Integer; cdecl;                                  // ()I A: $1
    function init : JDatagramSocket; cdecl; overload;                           // ()V A: $1
    function init(aPort : Integer) : JDatagramSocket; cdecl; overload;          // (I)V A: $1
    function init(aPort : Integer; addr : JInetAddress) : JDatagramSocket; cdecl; overload;// (ILjava/net/InetAddress;)V A: $1
    function init(localAddr : JSocketAddress) : JDatagramSocket; cdecl; overload;// (Ljava/net/SocketAddress;)V A: $1
    function isBound : boolean; cdecl;                                          // ()Z A: $1
    function isClosed : boolean; cdecl;                                         // ()Z A: $1
    function isConnected : boolean; cdecl;                                      // ()Z A: $1
    procedure bind(localAddr : JSocketAddress) ; cdecl;                         // (Ljava/net/SocketAddress;)V A: $1
    procedure close ; cdecl;                                                    // ()V A: $1
    procedure connect(address : JInetAddress; port : Integer) ; cdecl; overload;// (Ljava/net/InetAddress;I)V A: $1
    procedure connect(peer : JSocketAddress) ; cdecl; overload;                 // (Ljava/net/SocketAddress;)V A: $1
    procedure disconnect ; cdecl;                                               // ()V A: $1
    procedure receive(pack : JDatagramPacket) ; cdecl;                          // (Ljava/net/DatagramPacket;)V A: $21
    procedure send(pack : JDatagramPacket) ; cdecl;                             // (Ljava/net/DatagramPacket;)V A: $1
    procedure setBroadcast(broadcast : boolean) ; cdecl;                        // (Z)V A: $1
    procedure setDatagramSocketImplFactory(fac : JDatagramSocketImplFactory) ; cdecl;// (Ljava/net/DatagramSocketImplFactory;)V A: $29
    procedure setReceiveBufferSize(size : Integer) ; cdecl;                     // (I)V A: $21
    procedure setReuseAddress(reuse : boolean) ; cdecl;                         // (Z)V A: $1
    procedure setSendBufferSize(size : Integer) ; cdecl;                        // (I)V A: $21
    procedure setSoTimeout(timeout : Integer) ; cdecl;                          // (I)V A: $21
    procedure setTrafficClass(value : Integer) ; cdecl;                         // (I)V A: $1
  end;

  [JavaSignature('java/net/DatagramSocket')]
  JDatagramSocket = interface(JObject)
    ['{124E6275-3998-4686-A747-1246A55728C9}']
    function getBroadcast : boolean; cdecl;                                     // ()Z A: $1
    function getChannel : JDatagramChannel; cdecl;                              // ()Ljava/nio/channels/DatagramChannel; A: $1
    function getInetAddress : JInetAddress; cdecl;                              // ()Ljava/net/InetAddress; A: $1
    function getLocalAddress : JInetAddress; cdecl;                             // ()Ljava/net/InetAddress; A: $1
    function getLocalPort : Integer; cdecl;                                     // ()I A: $1
    function getLocalSocketAddress : JSocketAddress; cdecl;                     // ()Ljava/net/SocketAddress; A: $1
    function getPort : Integer; cdecl;                                          // ()I A: $1
    function getRemoteSocketAddress : JSocketAddress; cdecl;                    // ()Ljava/net/SocketAddress; A: $1
    function getReuseAddress : boolean; cdecl;                                  // ()Z A: $1
    function getTrafficClass : Integer; cdecl;                                  // ()I A: $1
    function isBound : boolean; cdecl;                                          // ()Z A: $1
    function isClosed : boolean; cdecl;                                         // ()Z A: $1
    function isConnected : boolean; cdecl;                                      // ()Z A: $1
    procedure bind(localAddr : JSocketAddress) ; cdecl;                         // (Ljava/net/SocketAddress;)V A: $1
    procedure close ; cdecl;                                                    // ()V A: $1
    procedure connect(address : JInetAddress; port : Integer) ; cdecl; overload;// (Ljava/net/InetAddress;I)V A: $1
    procedure connect(peer : JSocketAddress) ; cdecl; overload;                 // (Ljava/net/SocketAddress;)V A: $1
    procedure disconnect ; cdecl;                                               // ()V A: $1
    procedure send(pack : JDatagramPacket) ; cdecl;                             // (Ljava/net/DatagramPacket;)V A: $1
    procedure setBroadcast(broadcast : boolean) ; cdecl;                        // (Z)V A: $1
    procedure setReuseAddress(reuse : boolean) ; cdecl;                         // (Z)V A: $1
    procedure setTrafficClass(value : Integer) ; cdecl;                         // (I)V A: $1
  end;

  TJDatagramSocket = class(TJavaGenericImport<JDatagramSocketClass, JDatagramSocket>)
  end;

  // Merged from: .\java.nio.channels.DatagramChannel.pas
  JDatagramChannelClass = interface(JObjectClass)
    ['{CCDA22C7-5A36-428F-8A21-FCF771858871}']
    function &read(JByteBufferparam0 : JByteBuffer) : Integer; cdecl; overload; // (Ljava/nio/ByteBuffer;)I A: $401
    function &read(TJavaArrayJByteBufferparam0 : TJavaArray<JByteBuffer>; Integerparam1 : Integer; Integerparam2 : Integer) : Int64; cdecl; overload;// ([Ljava/nio/ByteBuffer;II)J A: $401
    function &read(targets : TJavaArray<JByteBuffer>) : Int64; cdecl; overload; // ([Ljava/nio/ByteBuffer;)J A: $31
    function &write(JByteBufferparam0 : JByteBuffer) : Integer; cdecl; overload;// (Ljava/nio/ByteBuffer;)I A: $401
    function &write(TJavaArrayJByteBufferparam0 : TJavaArray<JByteBuffer>; Integerparam1 : Integer; Integerparam2 : Integer) : Int64; cdecl; overload;// ([Ljava/nio/ByteBuffer;II)J A: $401
    function &write(sources : TJavaArray<JByteBuffer>) : Int64; cdecl; overload;// ([Ljava/nio/ByteBuffer;)J A: $31
    function connect(JSocketAddressparam0 : JSocketAddress) : JDatagramChannel; cdecl;// (Ljava/net/SocketAddress;)Ljava/nio/channels/DatagramChannel; A: $401
    function disconnect : JDatagramChannel; cdecl;                              // ()Ljava/nio/channels/DatagramChannel; A: $401
    function isConnected : boolean; cdecl;                                      // ()Z A: $401
    function open : JDatagramChannel; cdecl;                                    // ()Ljava/nio/channels/DatagramChannel; A: $9
    function receive(JByteBufferparam0 : JByteBuffer) : JSocketAddress; cdecl;  // (Ljava/nio/ByteBuffer;)Ljava/net/SocketAddress; A: $401
    function send(JByteBufferparam0 : JByteBuffer; JSocketAddressparam1 : JSocketAddress) : Integer; cdecl;// (Ljava/nio/ByteBuffer;Ljava/net/SocketAddress;)I A: $401
    function socket : JDatagramSocket; cdecl;                                   // ()Ljava/net/DatagramSocket; A: $401
    function validOps : Integer; cdecl;                                         // ()I A: $11
  end;

  [JavaSignature('java/nio/channels/DatagramChannel')]
  JDatagramChannel = interface(JObject)
    ['{7B16C3C6-33FA-48A8-BEA6-173877616367}']
    function &read(JByteBufferparam0 : JByteBuffer) : Integer; cdecl; overload; // (Ljava/nio/ByteBuffer;)I A: $401
    function &read(TJavaArrayJByteBufferparam0 : TJavaArray<JByteBuffer>; Integerparam1 : Integer; Integerparam2 : Integer) : Int64; cdecl; overload;// ([Ljava/nio/ByteBuffer;II)J A: $401
    function &write(JByteBufferparam0 : JByteBuffer) : Integer; cdecl; overload;// (Ljava/nio/ByteBuffer;)I A: $401
    function &write(TJavaArrayJByteBufferparam0 : TJavaArray<JByteBuffer>; Integerparam1 : Integer; Integerparam2 : Integer) : Int64; cdecl; overload;// ([Ljava/nio/ByteBuffer;II)J A: $401
    function connect(JSocketAddressparam0 : JSocketAddress) : JDatagramChannel; cdecl;// (Ljava/net/SocketAddress;)Ljava/nio/channels/DatagramChannel; A: $401
    function disconnect : JDatagramChannel; cdecl;                              // ()Ljava/nio/channels/DatagramChannel; A: $401
    function isConnected : boolean; cdecl;                                      // ()Z A: $401
    function receive(JByteBufferparam0 : JByteBuffer) : JSocketAddress; cdecl;  // (Ljava/nio/ByteBuffer;)Ljava/net/SocketAddress; A: $401
    function send(JByteBufferparam0 : JByteBuffer; JSocketAddressparam1 : JSocketAddress) : Integer; cdecl;// (Ljava/nio/ByteBuffer;Ljava/net/SocketAddress;)I A: $401
    function socket : JDatagramSocket; cdecl;                                   // ()Ljava/net/DatagramSocket; A: $401
  end;

  TJDatagramChannel = class(TJavaGenericImport<JDatagramChannelClass, JDatagramChannel>)
  end;


implementation

end.
