//
// Generated by JavaToPas v1.5 20150831 - 132235
////////////////////////////////////////////////////////////////////////////////
unit java.util.logging.Logger;

interface

uses
  AndroidAPI.JNIBridge,
  Androidapi.JNI.JavaTypes,
  java.util.logging.Formatter,
  java.util.logging.Filter,
  java.util.logging.Level,
  java.util.ResourceBundle,
  java.util.logging.LogRecord;

type
  JLogger = interface;

  JLoggerClass = interface(JObjectClass)
    ['{A2310D73-8F48-4938-8E53-D84877CDE0EE}']
    function _GetGLOBAL_LOGGER_NAME : JString; cdecl;                           //  A: $19
    function _Getglobal : JLogger; cdecl;                                       //  A: $19
    function getAnonymousLogger : JLogger; cdecl; overload;                     // ()Ljava/util/logging/Logger; A: $9
    function getAnonymousLogger(resourceBundleName : JString) : JLogger; cdecl; overload;// (Ljava/lang/String;)Ljava/util/logging/Logger; A: $9
    function getFilter : JFilter; cdecl;                                        // ()Ljava/util/logging/Filter; A: $1
    function getGlobal : JLogger; cdecl;                                        // ()Ljava/util/logging/Logger; A: $9
    function getHandlers : TJavaArray<JHandler>; cdecl;                         // ()[Ljava/util/logging/Handler; A: $1
    function getLevel : JLevel; cdecl;                                          // ()Ljava/util/logging/Level; A: $1
    function getLogger(&name : JString) : JLogger; cdecl; overload;             // (Ljava/lang/String;)Ljava/util/logging/Logger; A: $9
    function getLogger(&name : JString; resourceBundleName : JString) : JLogger; cdecl; overload;// (Ljava/lang/String;Ljava/lang/String;)Ljava/util/logging/Logger; A: $9
    function getName : JString; cdecl;                                          // ()Ljava/lang/String; A: $1
    function getParent : JLogger; cdecl;                                        // ()Ljava/util/logging/Logger; A: $1
    function getResourceBundle : JResourceBundle; cdecl;                        // ()Ljava/util/ResourceBundle; A: $1
    function getResourceBundleName : JString; cdecl;                            // ()Ljava/lang/String; A: $1
    function getUseParentHandlers : boolean; cdecl;                             // ()Z A: $1
    function isLoggable(l : JLevel) : boolean; cdecl;                           // (Ljava/util/logging/Level;)Z A: $1
    procedure addHandler(handler : JHandler) ; cdecl;                           // (Ljava/util/logging/Handler;)V A: $1
    procedure config(msg : JString) ; cdecl;                                    // (Ljava/lang/String;)V A: $1
    procedure entering(sourceClass : JString; sourceMethod : JString) ; cdecl; overload;// (Ljava/lang/String;Ljava/lang/String;)V A: $1
    procedure entering(sourceClass : JString; sourceMethod : JString; param : JObject) ; cdecl; overload;// (Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;)V A: $1
    procedure entering(sourceClass : JString; sourceMethod : JString; params : TJavaArray<JObject>) ; cdecl; overload;// (Ljava/lang/String;Ljava/lang/String;[Ljava/lang/Object;)V A: $1
    procedure exiting(sourceClass : JString; sourceMethod : JString) ; cdecl; overload;// (Ljava/lang/String;Ljava/lang/String;)V A: $1
    procedure exiting(sourceClass : JString; sourceMethod : JString; result : JObject) ; cdecl; overload;// (Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;)V A: $1
    procedure fine(msg : JString) ; cdecl;                                      // (Ljava/lang/String;)V A: $1
    procedure finer(msg : JString) ; cdecl;                                     // (Ljava/lang/String;)V A: $1
    procedure finest(msg : JString) ; cdecl;                                    // (Ljava/lang/String;)V A: $1
    procedure info(msg : JString) ; cdecl;                                      // (Ljava/lang/String;)V A: $1
    procedure log(&record : JLogRecord) ; cdecl; overload;                      // (Ljava/util/logging/LogRecord;)V A: $1
    procedure log(logLevel : JLevel; msg : JString) ; cdecl; overload;          // (Ljava/util/logging/Level;Ljava/lang/String;)V A: $1
    procedure log(logLevel : JLevel; msg : JString; param : JObject) ; cdecl; overload;// (Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/Object;)V A: $1
    procedure log(logLevel : JLevel; msg : JString; params : TJavaArray<JObject>) ; cdecl; overload;// (Ljava/util/logging/Level;Ljava/lang/String;[Ljava/lang/Object;)V A: $1
    procedure log(logLevel : JLevel; msg : JString; thrown : JThrowable) ; cdecl; overload;// (Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/Throwable;)V A: $1
    procedure logp(logLevel : JLevel; sourceClass : JString; sourceMethod : JString; msg : JString) ; cdecl; overload;// (Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V A: $1
    procedure logp(logLevel : JLevel; sourceClass : JString; sourceMethod : JString; msg : JString; param : JObject) ; cdecl; overload;// (Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;)V A: $1
    procedure logp(logLevel : JLevel; sourceClass : JString; sourceMethod : JString; msg : JString; params : TJavaArray<JObject>) ; cdecl; overload;// (Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;[Ljava/lang/Object;)V A: $1
    procedure logp(logLevel : JLevel; sourceClass : JString; sourceMethod : JString; msg : JString; thrown : JThrowable) ; cdecl; overload;// (Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)V A: $1
    procedure logrb(logLevel : JLevel; sourceClass : JString; sourceMethod : JString; bundleName : JString; msg : JString) ; cdecl; overload;// (Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V A: $1
    procedure logrb(logLevel : JLevel; sourceClass : JString; sourceMethod : JString; bundleName : JString; msg : JString; param : JObject) ; cdecl; overload;// (Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;)V A: $1
    procedure logrb(logLevel : JLevel; sourceClass : JString; sourceMethod : JString; bundleName : JString; msg : JString; params : TJavaArray<JObject>) ; cdecl; overload;// (Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;[Ljava/lang/Object;)V A: $1
    procedure logrb(logLevel : JLevel; sourceClass : JString; sourceMethod : JString; bundleName : JString; msg : JString; thrown : JThrowable) ; cdecl; overload;// (Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)V A: $1
    procedure removeHandler(handler : JHandler) ; cdecl;                        // (Ljava/util/logging/Handler;)V A: $1
    procedure setFilter(newFilter : JFilter) ; cdecl;                           // (Ljava/util/logging/Filter;)V A: $1
    procedure setLevel(newLevel : JLevel) ; cdecl;                              // (Ljava/util/logging/Level;)V A: $1
    procedure setParent(parent : JLogger) ; cdecl;                              // (Ljava/util/logging/Logger;)V A: $1
    procedure setUseParentHandlers(notifyParentHandlers : boolean) ; cdecl;     // (Z)V A: $1
    procedure severe(msg : JString) ; cdecl;                                    // (Ljava/lang/String;)V A: $1
    procedure throwing(sourceClass : JString; sourceMethod : JString; thrown : JThrowable) ; cdecl;// (Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)V A: $1
    procedure warning(msg : JString) ; cdecl;                                   // (Ljava/lang/String;)V A: $1
    property GLOBAL_LOGGER_NAME : JString read _GetGLOBAL_LOGGER_NAME;          // Ljava/lang/String; A: $19
    property global : JLogger read _Getglobal;                                  // Ljava/util/logging/Logger; A: $19
  end;

  [JavaSignature('java/util/logging/Logger')]
  JLogger = interface(JObject)
    ['{96BBB6C0-4E82-4616-B707-293AC667E20A}']
    function getFilter : JFilter; cdecl;                                        // ()Ljava/util/logging/Filter; A: $1
    function getHandlers : TJavaArray<JHandler>; cdecl;                         // ()[Ljava/util/logging/Handler; A: $1
    function getLevel : JLevel; cdecl;                                          // ()Ljava/util/logging/Level; A: $1
    function getName : JString; cdecl;                                          // ()Ljava/lang/String; A: $1
    function getParent : JLogger; cdecl;                                        // ()Ljava/util/logging/Logger; A: $1
    function getResourceBundle : JResourceBundle; cdecl;                        // ()Ljava/util/ResourceBundle; A: $1
    function getResourceBundleName : JString; cdecl;                            // ()Ljava/lang/String; A: $1
    function getUseParentHandlers : boolean; cdecl;                             // ()Z A: $1
    function isLoggable(l : JLevel) : boolean; cdecl;                           // (Ljava/util/logging/Level;)Z A: $1
    procedure addHandler(handler : JHandler) ; cdecl;                           // (Ljava/util/logging/Handler;)V A: $1
    procedure config(msg : JString) ; cdecl;                                    // (Ljava/lang/String;)V A: $1
    procedure entering(sourceClass : JString; sourceMethod : JString) ; cdecl; overload;// (Ljava/lang/String;Ljava/lang/String;)V A: $1
    procedure entering(sourceClass : JString; sourceMethod : JString; param : JObject) ; cdecl; overload;// (Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;)V A: $1
    procedure entering(sourceClass : JString; sourceMethod : JString; params : TJavaArray<JObject>) ; cdecl; overload;// (Ljava/lang/String;Ljava/lang/String;[Ljava/lang/Object;)V A: $1
    procedure exiting(sourceClass : JString; sourceMethod : JString) ; cdecl; overload;// (Ljava/lang/String;Ljava/lang/String;)V A: $1
    procedure exiting(sourceClass : JString; sourceMethod : JString; result : JObject) ; cdecl; overload;// (Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;)V A: $1
    procedure fine(msg : JString) ; cdecl;                                      // (Ljava/lang/String;)V A: $1
    procedure finer(msg : JString) ; cdecl;                                     // (Ljava/lang/String;)V A: $1
    procedure finest(msg : JString) ; cdecl;                                    // (Ljava/lang/String;)V A: $1
    procedure info(msg : JString) ; cdecl;                                      // (Ljava/lang/String;)V A: $1
    procedure log(&record : JLogRecord) ; cdecl; overload;                      // (Ljava/util/logging/LogRecord;)V A: $1
    procedure log(logLevel : JLevel; msg : JString) ; cdecl; overload;          // (Ljava/util/logging/Level;Ljava/lang/String;)V A: $1
    procedure log(logLevel : JLevel; msg : JString; param : JObject) ; cdecl; overload;// (Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/Object;)V A: $1
    procedure log(logLevel : JLevel; msg : JString; params : TJavaArray<JObject>) ; cdecl; overload;// (Ljava/util/logging/Level;Ljava/lang/String;[Ljava/lang/Object;)V A: $1
    procedure log(logLevel : JLevel; msg : JString; thrown : JThrowable) ; cdecl; overload;// (Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/Throwable;)V A: $1
    procedure logp(logLevel : JLevel; sourceClass : JString; sourceMethod : JString; msg : JString) ; cdecl; overload;// (Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V A: $1
    procedure logp(logLevel : JLevel; sourceClass : JString; sourceMethod : JString; msg : JString; param : JObject) ; cdecl; overload;// (Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;)V A: $1
    procedure logp(logLevel : JLevel; sourceClass : JString; sourceMethod : JString; msg : JString; params : TJavaArray<JObject>) ; cdecl; overload;// (Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;[Ljava/lang/Object;)V A: $1
    procedure logp(logLevel : JLevel; sourceClass : JString; sourceMethod : JString; msg : JString; thrown : JThrowable) ; cdecl; overload;// (Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)V A: $1
    procedure logrb(logLevel : JLevel; sourceClass : JString; sourceMethod : JString; bundleName : JString; msg : JString) ; cdecl; overload;// (Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V A: $1
    procedure logrb(logLevel : JLevel; sourceClass : JString; sourceMethod : JString; bundleName : JString; msg : JString; param : JObject) ; cdecl; overload;// (Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;)V A: $1
    procedure logrb(logLevel : JLevel; sourceClass : JString; sourceMethod : JString; bundleName : JString; msg : JString; params : TJavaArray<JObject>) ; cdecl; overload;// (Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;[Ljava/lang/Object;)V A: $1
    procedure logrb(logLevel : JLevel; sourceClass : JString; sourceMethod : JString; bundleName : JString; msg : JString; thrown : JThrowable) ; cdecl; overload;// (Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)V A: $1
    procedure removeHandler(handler : JHandler) ; cdecl;                        // (Ljava/util/logging/Handler;)V A: $1
    procedure setFilter(newFilter : JFilter) ; cdecl;                           // (Ljava/util/logging/Filter;)V A: $1
    procedure setLevel(newLevel : JLevel) ; cdecl;                              // (Ljava/util/logging/Level;)V A: $1
    procedure setParent(parent : JLogger) ; cdecl;                              // (Ljava/util/logging/Logger;)V A: $1
    procedure setUseParentHandlers(notifyParentHandlers : boolean) ; cdecl;     // (Z)V A: $1
    procedure severe(msg : JString) ; cdecl;                                    // (Ljava/lang/String;)V A: $1
    procedure throwing(sourceClass : JString; sourceMethod : JString; thrown : JThrowable) ; cdecl;// (Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)V A: $1
    procedure warning(msg : JString) ; cdecl;                                   // (Ljava/lang/String;)V A: $1
  end;

  TJLogger = class(TJavaGenericImport<JLoggerClass, JLogger>)
  end;

const
  TJLoggerGLOBAL_LOGGER_NAME = 'global';

implementation

end.
