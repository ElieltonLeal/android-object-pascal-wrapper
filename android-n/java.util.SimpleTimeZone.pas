//
// Generated by JavaToPas v1.5 20160510 - 150035
////////////////////////////////////////////////////////////////////////////////
unit java.util.SimpleTimeZone;

interface

uses
  AndroidAPI.JNIBridge,
  Androidapi.JNI.JavaTypes;

type
  JSimpleTimeZone = interface;

  JSimpleTimeZoneClass = interface(JObjectClass)
    ['{FEA94E4C-3A4F-4733-B94C-B9E28908A84F}']
    function _GetSTANDARD_TIME : Integer; cdecl;                                //  A: $19
    function _GetUTC_TIME : Integer; cdecl;                                     //  A: $19
    function _GetWALL_TIME : Integer; cdecl;                                    //  A: $19
    function clone : JObject; cdecl;                                            // ()Ljava/lang/Object; A: $1
    function equals(obj : JObject) : boolean; cdecl;                            // (Ljava/lang/Object;)Z A: $1
    function getDSTSavings : Integer; cdecl;                                    // ()I A: $1
    function getOffset(date : Int64) : Integer; cdecl; overload;                // (J)I A: $1
    function getOffset(era : Integer; year : Integer; month : Integer; day : Integer; dayOfWeek : Integer; millis : Integer) : Integer; cdecl; overload;// (IIIIII)I A: $1
    function getRawOffset : Integer; cdecl;                                     // ()I A: $1
    function hasSameRules(other : JTimeZone) : boolean; cdecl;                  // (Ljava/util/TimeZone;)Z A: $1
    function hashCode : Integer; cdecl;                                         // ()I A: $21
    function inDaylightTime(date : JDate) : boolean; cdecl;                     // (Ljava/util/Date;)Z A: $1
    function init(rawOffset : Integer; ID : JString) : JSimpleTimeZone; cdecl; overload;// (ILjava/lang/String;)V A: $1
    function init(rawOffset : Integer; ID : JString; startMonth : Integer; startDay : Integer; startDayOfWeek : Integer; startTime : Integer; endMonth : Integer; endDay : Integer; endDayOfWeek : Integer; endTime : Integer) : JSimpleTimeZone; cdecl; overload;// (ILjava/lang/String;IIIIIIII)V A: $1
    function init(rawOffset : Integer; ID : JString; startMonth : Integer; startDay : Integer; startDayOfWeek : Integer; startTime : Integer; endMonth : Integer; endDay : Integer; endDayOfWeek : Integer; endTime : Integer; dstSavings : Integer) : JSimpleTimeZone; cdecl; overload;// (ILjava/lang/String;IIIIIIIII)V A: $1
    function init(rawOffset : Integer; ID : JString; startMonth : Integer; startDay : Integer; startDayOfWeek : Integer; startTime : Integer; startTimeMode : Integer; endMonth : Integer; endDay : Integer; endDayOfWeek : Integer; endTime : Integer; endTimeMode : Integer; dstSavings : Integer) : JSimpleTimeZone; cdecl; overload;// (ILjava/lang/String;IIIIIIIIIII)V A: $1
    function observesDaylightTime : boolean; cdecl;                             // ()Z A: $1
    function toString : JString; cdecl;                                         // ()Ljava/lang/String; A: $1
    function useDaylightTime : boolean; cdecl;                                  // ()Z A: $1
    procedure setDSTSavings(millisSavedDuringDST : Integer) ; cdecl;            // (I)V A: $1
    procedure setEndRule(endMonth : Integer; endDay : Integer; endDayOfWeek : Integer; endTime : Integer) ; cdecl; overload;// (IIII)V A: $1
    procedure setEndRule(endMonth : Integer; endDay : Integer; endDayOfWeek : Integer; endTime : Integer; after : boolean) ; cdecl; overload;// (IIIIZ)V A: $1
    procedure setEndRule(endMonth : Integer; endDay : Integer; endTime : Integer) ; cdecl; overload;// (III)V A: $1
    procedure setRawOffset(offsetMillis : Integer) ; cdecl;                     // (I)V A: $1
    procedure setStartRule(startMonth : Integer; startDay : Integer; startDayOfWeek : Integer; startTime : Integer) ; cdecl; overload;// (IIII)V A: $1
    procedure setStartRule(startMonth : Integer; startDay : Integer; startDayOfWeek : Integer; startTime : Integer; after : boolean) ; cdecl; overload;// (IIIIZ)V A: $1
    procedure setStartRule(startMonth : Integer; startDay : Integer; startTime : Integer) ; cdecl; overload;// (III)V A: $1
    procedure setStartYear(year : Integer) ; cdecl;                             // (I)V A: $1
    property STANDARD_TIME : Integer read _GetSTANDARD_TIME;                    // I A: $19
    property UTC_TIME : Integer read _GetUTC_TIME;                              // I A: $19
    property WALL_TIME : Integer read _GetWALL_TIME;                            // I A: $19
  end;

  [JavaSignature('java/util/SimpleTimeZone')]
  JSimpleTimeZone = interface(JObject)
    ['{E510790F-C414-42A0-9ACF-FC1BAA8FCFC4}']
    function clone : JObject; cdecl;                                            // ()Ljava/lang/Object; A: $1
    function equals(obj : JObject) : boolean; cdecl;                            // (Ljava/lang/Object;)Z A: $1
    function getDSTSavings : Integer; cdecl;                                    // ()I A: $1
    function getOffset(date : Int64) : Integer; cdecl; overload;                // (J)I A: $1
    function getOffset(era : Integer; year : Integer; month : Integer; day : Integer; dayOfWeek : Integer; millis : Integer) : Integer; cdecl; overload;// (IIIIII)I A: $1
    function getRawOffset : Integer; cdecl;                                     // ()I A: $1
    function hasSameRules(other : JTimeZone) : boolean; cdecl;                  // (Ljava/util/TimeZone;)Z A: $1
    function inDaylightTime(date : JDate) : boolean; cdecl;                     // (Ljava/util/Date;)Z A: $1
    function observesDaylightTime : boolean; cdecl;                             // ()Z A: $1
    function toString : JString; cdecl;                                         // ()Ljava/lang/String; A: $1
    function useDaylightTime : boolean; cdecl;                                  // ()Z A: $1
    procedure setDSTSavings(millisSavedDuringDST : Integer) ; cdecl;            // (I)V A: $1
    procedure setEndRule(endMonth : Integer; endDay : Integer; endDayOfWeek : Integer; endTime : Integer) ; cdecl; overload;// (IIII)V A: $1
    procedure setEndRule(endMonth : Integer; endDay : Integer; endDayOfWeek : Integer; endTime : Integer; after : boolean) ; cdecl; overload;// (IIIIZ)V A: $1
    procedure setEndRule(endMonth : Integer; endDay : Integer; endTime : Integer) ; cdecl; overload;// (III)V A: $1
    procedure setRawOffset(offsetMillis : Integer) ; cdecl;                     // (I)V A: $1
    procedure setStartRule(startMonth : Integer; startDay : Integer; startDayOfWeek : Integer; startTime : Integer) ; cdecl; overload;// (IIII)V A: $1
    procedure setStartRule(startMonth : Integer; startDay : Integer; startDayOfWeek : Integer; startTime : Integer; after : boolean) ; cdecl; overload;// (IIIIZ)V A: $1
    procedure setStartRule(startMonth : Integer; startDay : Integer; startTime : Integer) ; cdecl; overload;// (III)V A: $1
    procedure setStartYear(year : Integer) ; cdecl;                             // (I)V A: $1
  end;

  TJSimpleTimeZone = class(TJavaGenericImport<JSimpleTimeZoneClass, JSimpleTimeZone>)
  end;

const
  TJSimpleTimeZoneSTANDARD_TIME = 1;
  TJSimpleTimeZoneUTC_TIME = 2;
  TJSimpleTimeZoneWALL_TIME = 0;

implementation

end.
