//
// Generated by JavaToPas v1.5 20171018 - 171206
////////////////////////////////////////////////////////////////////////////////
unit java.time.Instant;

interface

uses
  AndroidAPI.JNIBridge,
  Androidapi.JNI.JavaTypes,
  java.time.Duration,
  java.time.chrono.ChronoLocalDate;

type
  JInstant = interface;

  JInstantClass = interface(JObjectClass)
    ['{5F41E21F-EC27-4243-9FDB-B6907CE9A2DF}']
    function &until(endExclusive : JTemporal; &unit : JTemporalUnit) : Int64; cdecl;// (Ljava/time/temporal/Temporal;Ljava/time/temporal/TemporalUnit;)J A: $1
    function &with(adjuster : JTemporalAdjuster) : JInstant; cdecl; overload;   // (Ljava/time/temporal/TemporalAdjuster;)Ljava/time/Instant; A: $1
    function &with(field : JTemporalField; newValue : Int64) : JInstant; cdecl; overload;// (Ljava/time/temporal/TemporalField;J)Ljava/time/Instant; A: $1
    function _GetEPOCH : JInstant; cdecl;                                       //  A: $19
    function _GetMAX : JInstant; cdecl;                                         //  A: $19
    function _GetMIN : JInstant; cdecl;                                         //  A: $19
    function adjustInto(temporal : JTemporal) : JTemporal; cdecl;               // (Ljava/time/temporal/Temporal;)Ljava/time/temporal/Temporal; A: $1
    function atOffset(offset : JZoneOffset) : JOffsetDateTime; cdecl;           // (Ljava/time/ZoneOffset;)Ljava/time/OffsetDateTime; A: $1
    function atZone(zone : JZoneId) : JZonedDateTime; cdecl;                    // (Ljava/time/ZoneId;)Ljava/time/ZonedDateTime; A: $1
    function compareTo(otherInstant : JInstant) : Integer; cdecl;               // (Ljava/time/Instant;)I A: $1
    function equals(otherInstant : JObject) : boolean; cdecl;                   // (Ljava/lang/Object;)Z A: $1
    function from(temporal : JTemporalAccessor) : JInstant; cdecl;              // (Ljava/time/temporal/TemporalAccessor;)Ljava/time/Instant; A: $9
    function get(field : JTemporalField) : Integer; cdecl;                      // (Ljava/time/temporal/TemporalField;)I A: $1
    function getEpochSecond : Int64; cdecl;                                     // ()J A: $1
    function getLong(field : JTemporalField) : Int64; cdecl;                    // (Ljava/time/temporal/TemporalField;)J A: $1
    function getNano : Integer; cdecl;                                          // ()I A: $1
    function hashCode : Integer; cdecl;                                         // ()I A: $1
    function isAfter(otherInstant : JInstant) : boolean; cdecl;                 // (Ljava/time/Instant;)Z A: $1
    function isBefore(otherInstant : JInstant) : boolean; cdecl;                // (Ljava/time/Instant;)Z A: $1
    function isSupported(&unit : JTemporalUnit) : boolean; cdecl; overload;     // (Ljava/time/temporal/TemporalUnit;)Z A: $1
    function isSupported(field : JTemporalField) : boolean; cdecl; overload;    // (Ljava/time/temporal/TemporalField;)Z A: $1
    function minus(amountToSubtract : Int64; &unit : JTemporalUnit) : JInstant; cdecl; overload;// (JLjava/time/temporal/TemporalUnit;)Ljava/time/Instant; A: $1
    function minus(amountToSubtract : JTemporalAmount) : JInstant; cdecl; overload;// (Ljava/time/temporal/TemporalAmount;)Ljava/time/Instant; A: $1
    function minusMillis(millisToSubtract : Int64) : JInstant; cdecl;           // (J)Ljava/time/Instant; A: $1
    function minusNanos(nanosToSubtract : Int64) : JInstant; cdecl;             // (J)Ljava/time/Instant; A: $1
    function minusSeconds(secondsToSubtract : Int64) : JInstant; cdecl;         // (J)Ljava/time/Instant; A: $1
    function now : JInstant; cdecl; overload;                                   // ()Ljava/time/Instant; A: $9
    function now(clock : JClock) : JInstant; cdecl; overload;                   // (Ljava/time/Clock;)Ljava/time/Instant; A: $9
    function ofEpochMilli(epochMilli : Int64) : JInstant; cdecl;                // (J)Ljava/time/Instant; A: $9
    function ofEpochSecond(epochSecond : Int64) : JInstant; cdecl; overload;    // (J)Ljava/time/Instant; A: $9
    function ofEpochSecond(epochSecond : Int64; nanoAdjustment : Int64) : JInstant; cdecl; overload;// (JJ)Ljava/time/Instant; A: $9
    function parse(text : JCharSequence) : JInstant; cdecl;                     // (Ljava/lang/CharSequence;)Ljava/time/Instant; A: $9
    function plus(amountToAdd : Int64; &unit : JTemporalUnit) : JInstant; cdecl; overload;// (JLjava/time/temporal/TemporalUnit;)Ljava/time/Instant; A: $1
    function plus(amountToAdd : JTemporalAmount) : JInstant; cdecl; overload;   // (Ljava/time/temporal/TemporalAmount;)Ljava/time/Instant; A: $1
    function plusMillis(millisToAdd : Int64) : JInstant; cdecl;                 // (J)Ljava/time/Instant; A: $1
    function plusNanos(nanosToAdd : Int64) : JInstant; cdecl;                   // (J)Ljava/time/Instant; A: $1
    function plusSeconds(secondsToAdd : Int64) : JInstant; cdecl;               // (J)Ljava/time/Instant; A: $1
    function query(query : JTemporalQuery) : JObject; cdecl;                    // (Ljava/time/temporal/TemporalQuery;)Ljava/lang/Object; A: $1
    function range(field : JTemporalField) : JValueRange; cdecl;                // (Ljava/time/temporal/TemporalField;)Ljava/time/temporal/ValueRange; A: $1
    function toEpochMilli : Int64; cdecl;                                       // ()J A: $1
    function toString : JString; cdecl;                                         // ()Ljava/lang/String; A: $1
    function truncatedTo(&unit : JTemporalUnit) : JInstant; cdecl;              // (Ljava/time/temporal/TemporalUnit;)Ljava/time/Instant; A: $1
    property EPOCH : JInstant read _GetEPOCH;                                   // Ljava/time/Instant; A: $19
    property MAX : JInstant read _GetMAX;                                       // Ljava/time/Instant; A: $19
    property MIN : JInstant read _GetMIN;                                       // Ljava/time/Instant; A: $19
  end;

  [JavaSignature('java/time/Instant')]
  JInstant = interface(JObject)
    ['{98575DAA-4C5E-4C79-A693-EF21BD5DAD37}']
    function &until(endExclusive : JTemporal; &unit : JTemporalUnit) : Int64; cdecl;// (Ljava/time/temporal/Temporal;Ljava/time/temporal/TemporalUnit;)J A: $1
    function &with(adjuster : JTemporalAdjuster) : JInstant; cdecl; overload;   // (Ljava/time/temporal/TemporalAdjuster;)Ljava/time/Instant; A: $1
    function &with(field : JTemporalField; newValue : Int64) : JInstant; cdecl; overload;// (Ljava/time/temporal/TemporalField;J)Ljava/time/Instant; A: $1
    function adjustInto(temporal : JTemporal) : JTemporal; cdecl;               // (Ljava/time/temporal/Temporal;)Ljava/time/temporal/Temporal; A: $1
    function atOffset(offset : JZoneOffset) : JOffsetDateTime; cdecl;           // (Ljava/time/ZoneOffset;)Ljava/time/OffsetDateTime; A: $1
    function atZone(zone : JZoneId) : JZonedDateTime; cdecl;                    // (Ljava/time/ZoneId;)Ljava/time/ZonedDateTime; A: $1
    function compareTo(otherInstant : JInstant) : Integer; cdecl;               // (Ljava/time/Instant;)I A: $1
    function equals(otherInstant : JObject) : boolean; cdecl;                   // (Ljava/lang/Object;)Z A: $1
    function get(field : JTemporalField) : Integer; cdecl;                      // (Ljava/time/temporal/TemporalField;)I A: $1
    function getEpochSecond : Int64; cdecl;                                     // ()J A: $1
    function getLong(field : JTemporalField) : Int64; cdecl;                    // (Ljava/time/temporal/TemporalField;)J A: $1
    function getNano : Integer; cdecl;                                          // ()I A: $1
    function hashCode : Integer; cdecl;                                         // ()I A: $1
    function isAfter(otherInstant : JInstant) : boolean; cdecl;                 // (Ljava/time/Instant;)Z A: $1
    function isBefore(otherInstant : JInstant) : boolean; cdecl;                // (Ljava/time/Instant;)Z A: $1
    function isSupported(&unit : JTemporalUnit) : boolean; cdecl; overload;     // (Ljava/time/temporal/TemporalUnit;)Z A: $1
    function isSupported(field : JTemporalField) : boolean; cdecl; overload;    // (Ljava/time/temporal/TemporalField;)Z A: $1
    function minus(amountToSubtract : Int64; &unit : JTemporalUnit) : JInstant; cdecl; overload;// (JLjava/time/temporal/TemporalUnit;)Ljava/time/Instant; A: $1
    function minus(amountToSubtract : JTemporalAmount) : JInstant; cdecl; overload;// (Ljava/time/temporal/TemporalAmount;)Ljava/time/Instant; A: $1
    function minusMillis(millisToSubtract : Int64) : JInstant; cdecl;           // (J)Ljava/time/Instant; A: $1
    function minusNanos(nanosToSubtract : Int64) : JInstant; cdecl;             // (J)Ljava/time/Instant; A: $1
    function minusSeconds(secondsToSubtract : Int64) : JInstant; cdecl;         // (J)Ljava/time/Instant; A: $1
    function plus(amountToAdd : Int64; &unit : JTemporalUnit) : JInstant; cdecl; overload;// (JLjava/time/temporal/TemporalUnit;)Ljava/time/Instant; A: $1
    function plus(amountToAdd : JTemporalAmount) : JInstant; cdecl; overload;   // (Ljava/time/temporal/TemporalAmount;)Ljava/time/Instant; A: $1
    function plusMillis(millisToAdd : Int64) : JInstant; cdecl;                 // (J)Ljava/time/Instant; A: $1
    function plusNanos(nanosToAdd : Int64) : JInstant; cdecl;                   // (J)Ljava/time/Instant; A: $1
    function plusSeconds(secondsToAdd : Int64) : JInstant; cdecl;               // (J)Ljava/time/Instant; A: $1
    function query(query : JTemporalQuery) : JObject; cdecl;                    // (Ljava/time/temporal/TemporalQuery;)Ljava/lang/Object; A: $1
    function range(field : JTemporalField) : JValueRange; cdecl;                // (Ljava/time/temporal/TemporalField;)Ljava/time/temporal/ValueRange; A: $1
    function toEpochMilli : Int64; cdecl;                                       // ()J A: $1
    function toString : JString; cdecl;                                         // ()Ljava/lang/String; A: $1
    function truncatedTo(&unit : JTemporalUnit) : JInstant; cdecl;              // (Ljava/time/temporal/TemporalUnit;)Ljava/time/Instant; A: $1
  end;

  TJInstant = class(TJavaGenericImport<JInstantClass, JInstant>)
  end;

implementation

end.
