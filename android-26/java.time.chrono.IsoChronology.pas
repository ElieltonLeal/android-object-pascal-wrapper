//
// Generated by JavaToPas v1.5 20171018 - 171207
////////////////////////////////////////////////////////////////////////////////
unit java.time.chrono.IsoChronology;

interface

uses
  AndroidAPI.JNIBridge,
  Androidapi.JNI.JavaTypes,
  java.time.chrono.Era,
  java.time.chrono.IsoEra,
  java.time.format.ResolverStyle,
  java.time.temporal.ChronoField,
  java.time.Month,
  java.time.Duration,
  java.time.DayOfWeek,
  java.time.chrono.ChronoLocalDate;

type
  JOffsetTime = interface; // merged
  JPeriod = interface; // merged
  JLocalDate = interface; // merged
  JIsoChronology = interface;

  JIsoChronologyClass = interface(JObjectClass)
    ['{9EA22CF5-1203-4CEC-85ED-C8E081F4C11B}']
    function _GetINSTANCE : JIsoChronology; cdecl;                              //  A: $19
    function date(era : JEra; yearOfEra : Integer; month : Integer; dayOfMonth : Integer) : JLocalDate; cdecl; overload;// (Ljava/time/chrono/Era;III)Ljava/time/LocalDate; A: $1
    function date(prolepticYear : Integer; month : Integer; dayOfMonth : Integer) : JLocalDate; cdecl; overload;// (III)Ljava/time/LocalDate; A: $1
    function date(temporal : JTemporalAccessor) : JLocalDate; cdecl; overload;  // (Ljava/time/temporal/TemporalAccessor;)Ljava/time/LocalDate; A: $1
    function dateEpochDay(epochDay : Int64) : JLocalDate; cdecl;                // (J)Ljava/time/LocalDate; A: $1
    function dateNow : JLocalDate; cdecl; overload;                             // ()Ljava/time/LocalDate; A: $1
    function dateNow(clock : JClock) : JLocalDate; cdecl; overload;             // (Ljava/time/Clock;)Ljava/time/LocalDate; A: $1
    function dateNow(zone : JZoneId) : JLocalDate; cdecl; overload;             // (Ljava/time/ZoneId;)Ljava/time/LocalDate; A: $1
    function dateYearDay(era : JEra; yearOfEra : Integer; dayOfYear : Integer) : JLocalDate; cdecl; overload;// (Ljava/time/chrono/Era;II)Ljava/time/LocalDate; A: $1
    function dateYearDay(prolepticYear : Integer; dayOfYear : Integer) : JLocalDate; cdecl; overload;// (II)Ljava/time/LocalDate; A: $1
    function eraOf(eraValue : Integer) : JIsoEra; cdecl;                        // (I)Ljava/time/chrono/IsoEra; A: $1
    function eras : JList; cdecl;                                               // ()Ljava/util/List; A: $1
    function getCalendarType : JString; cdecl;                                  // ()Ljava/lang/String; A: $1
    function getId : JString; cdecl;                                            // ()Ljava/lang/String; A: $1
    function isLeapYear(prolepticYear : Int64) : boolean; cdecl;                // (J)Z A: $1
    function localDateTime(temporal : JTemporalAccessor) : JLocalDateTime; cdecl;// (Ljava/time/temporal/TemporalAccessor;)Ljava/time/LocalDateTime; A: $1
    function period(years : Integer; months : Integer; days : Integer) : JPeriod; cdecl;// (III)Ljava/time/Period; A: $1
    function prolepticYear(era : JEra; yearOfEra : Integer) : Integer; cdecl;   // (Ljava/time/chrono/Era;I)I A: $1
    function range(field : JChronoField) : JValueRange; cdecl;                  // (Ljava/time/temporal/ChronoField;)Ljava/time/temporal/ValueRange; A: $1
    function resolveDate(fieldValues : JMap; resolverStyle : JResolverStyle) : JLocalDate; cdecl;// (Ljava/util/Map;Ljava/time/format/ResolverStyle;)Ljava/time/LocalDate; A: $1
    function zonedDateTime(instant : JInstant; zone : JZoneId) : JZonedDateTime; cdecl; overload;// (Ljava/time/Instant;Ljava/time/ZoneId;)Ljava/time/ZonedDateTime; A: $1
    function zonedDateTime(temporal : JTemporalAccessor) : JZonedDateTime; cdecl; overload;// (Ljava/time/temporal/TemporalAccessor;)Ljava/time/ZonedDateTime; A: $1
    property INSTANCE : JIsoChronology read _GetINSTANCE;                       // Ljava/time/chrono/IsoChronology; A: $19
  end;

  [JavaSignature('java/time/chrono/IsoChronology')]
  JIsoChronology = interface(JObject)
    ['{FE47616D-D00F-4A25-9C3C-8DF0BC3D7794}']
    function date(era : JEra; yearOfEra : Integer; month : Integer; dayOfMonth : Integer) : JLocalDate; cdecl; overload;// (Ljava/time/chrono/Era;III)Ljava/time/LocalDate; A: $1
    function date(prolepticYear : Integer; month : Integer; dayOfMonth : Integer) : JLocalDate; cdecl; overload;// (III)Ljava/time/LocalDate; A: $1
    function date(temporal : JTemporalAccessor) : JLocalDate; cdecl; overload;  // (Ljava/time/temporal/TemporalAccessor;)Ljava/time/LocalDate; A: $1
    function dateEpochDay(epochDay : Int64) : JLocalDate; cdecl;                // (J)Ljava/time/LocalDate; A: $1
    function dateNow : JLocalDate; cdecl; overload;                             // ()Ljava/time/LocalDate; A: $1
    function dateNow(clock : JClock) : JLocalDate; cdecl; overload;             // (Ljava/time/Clock;)Ljava/time/LocalDate; A: $1
    function dateNow(zone : JZoneId) : JLocalDate; cdecl; overload;             // (Ljava/time/ZoneId;)Ljava/time/LocalDate; A: $1
    function dateYearDay(era : JEra; yearOfEra : Integer; dayOfYear : Integer) : JLocalDate; cdecl; overload;// (Ljava/time/chrono/Era;II)Ljava/time/LocalDate; A: $1
    function dateYearDay(prolepticYear : Integer; dayOfYear : Integer) : JLocalDate; cdecl; overload;// (II)Ljava/time/LocalDate; A: $1
    function eraOf(eraValue : Integer) : JIsoEra; cdecl;                        // (I)Ljava/time/chrono/IsoEra; A: $1
    function eras : JList; cdecl;                                               // ()Ljava/util/List; A: $1
    function getCalendarType : JString; cdecl;                                  // ()Ljava/lang/String; A: $1
    function getId : JString; cdecl;                                            // ()Ljava/lang/String; A: $1
    function isLeapYear(prolepticYear : Int64) : boolean; cdecl;                // (J)Z A: $1
    function localDateTime(temporal : JTemporalAccessor) : JLocalDateTime; cdecl;// (Ljava/time/temporal/TemporalAccessor;)Ljava/time/LocalDateTime; A: $1
    function period(years : Integer; months : Integer; days : Integer) : JPeriod; cdecl;// (III)Ljava/time/Period; A: $1
    function prolepticYear(era : JEra; yearOfEra : Integer) : Integer; cdecl;   // (Ljava/time/chrono/Era;I)I A: $1
    function range(field : JChronoField) : JValueRange; cdecl;                  // (Ljava/time/temporal/ChronoField;)Ljava/time/temporal/ValueRange; A: $1
    function resolveDate(fieldValues : JMap; resolverStyle : JResolverStyle) : JLocalDate; cdecl;// (Ljava/util/Map;Ljava/time/format/ResolverStyle;)Ljava/time/LocalDate; A: $1
    function zonedDateTime(instant : JInstant; zone : JZoneId) : JZonedDateTime; cdecl; overload;// (Ljava/time/Instant;Ljava/time/ZoneId;)Ljava/time/ZonedDateTime; A: $1
    function zonedDateTime(temporal : JTemporalAccessor) : JZonedDateTime; cdecl; overload;// (Ljava/time/temporal/TemporalAccessor;)Ljava/time/ZonedDateTime; A: $1
  end;

  TJIsoChronology = class(TJavaGenericImport<JIsoChronologyClass, JIsoChronology>)
  end;

  // Merged from: .\java.time.LocalDate.pas
  JLocalDateClass = interface(JObjectClass)
    ['{458062D9-0A90-442C-9362-7B164993DDB6}']
    function &of(year : Integer; month : Integer; dayOfMonth : Integer) : JLocalDate; cdecl; overload;// (III)Ljava/time/LocalDate; A: $9
    function &of(year : Integer; month : JMonth; dayOfMonth : Integer) : JLocalDate; cdecl; overload;// (ILjava/time/Month;I)Ljava/time/LocalDate; A: $9
    function &until(endDateExclusive : JChronoLocalDate) : JPeriod; cdecl; overload;// (Ljava/time/chrono/ChronoLocalDate;)Ljava/time/Period; A: $1
    function &until(endExclusive : JTemporal; &unit : JTemporalUnit) : Int64; cdecl; overload;// (Ljava/time/temporal/Temporal;Ljava/time/temporal/TemporalUnit;)J A: $1
    function &with(adjuster : JTemporalAdjuster) : JLocalDate; cdecl; overload; // (Ljava/time/temporal/TemporalAdjuster;)Ljava/time/LocalDate; A: $1
    function &with(field : JTemporalField; newValue : Int64) : JLocalDate; cdecl; overload;// (Ljava/time/temporal/TemporalField;J)Ljava/time/LocalDate; A: $1
    function _GetMAX : JLocalDate; cdecl;                                       //  A: $19
    function _GetMIN : JLocalDate; cdecl;                                       //  A: $19
    function adjustInto(temporal : JTemporal) : JTemporal; cdecl;               // (Ljava/time/temporal/Temporal;)Ljava/time/temporal/Temporal; A: $1
    function atStartOfDay : JLocalDateTime; cdecl; overload;                    // ()Ljava/time/LocalDateTime; A: $1
    function atStartOfDay(zone : JZoneId) : JZonedDateTime; cdecl; overload;    // (Ljava/time/ZoneId;)Ljava/time/ZonedDateTime; A: $1
    function atTime(hour : Integer; minute : Integer) : JLocalDateTime; cdecl; overload;// (II)Ljava/time/LocalDateTime; A: $1
    function atTime(hour : Integer; minute : Integer; second : Integer) : JLocalDateTime; cdecl; overload;// (III)Ljava/time/LocalDateTime; A: $1
    function atTime(hour : Integer; minute : Integer; second : Integer; nanoOfSecond : Integer) : JLocalDateTime; cdecl; overload;// (IIII)Ljava/time/LocalDateTime; A: $1
    function atTime(time : JLocalTime) : JLocalDateTime; cdecl; overload;       // (Ljava/time/LocalTime;)Ljava/time/LocalDateTime; A: $1
    function atTime(time : JOffsetTime) : JOffsetDateTime; cdecl; overload;     // (Ljava/time/OffsetTime;)Ljava/time/OffsetDateTime; A: $1
    function compareTo(other : JChronoLocalDate) : Integer; cdecl;              // (Ljava/time/chrono/ChronoLocalDate;)I A: $1
    function equals(obj : JObject) : boolean; cdecl;                            // (Ljava/lang/Object;)Z A: $1
    function format(formatter : JDateTimeFormatter) : JString; cdecl;           // (Ljava/time/format/DateTimeFormatter;)Ljava/lang/String; A: $1
    function from(temporal : JTemporalAccessor) : JLocalDate; cdecl;            // (Ljava/time/temporal/TemporalAccessor;)Ljava/time/LocalDate; A: $9
    function get(field : JTemporalField) : Integer; cdecl;                      // (Ljava/time/temporal/TemporalField;)I A: $1
    function getChronology : JIsoChronology; cdecl;                             // ()Ljava/time/chrono/IsoChronology; A: $1
    function getDayOfMonth : Integer; cdecl;                                    // ()I A: $1
    function getDayOfWeek : JDayOfWeek; cdecl;                                  // ()Ljava/time/DayOfWeek; A: $1
    function getDayOfYear : Integer; cdecl;                                     // ()I A: $1
    function getEra : JEra; cdecl;                                              // ()Ljava/time/chrono/Era; A: $1
    function getLong(field : JTemporalField) : Int64; cdecl;                    // (Ljava/time/temporal/TemporalField;)J A: $1
    function getMonth : JMonth; cdecl;                                          // ()Ljava/time/Month; A: $1
    function getMonthValue : Integer; cdecl;                                    // ()I A: $1
    function getYear : Integer; cdecl;                                          // ()I A: $1
    function hashCode : Integer; cdecl;                                         // ()I A: $1
    function isAfter(other : JChronoLocalDate) : boolean; cdecl;                // (Ljava/time/chrono/ChronoLocalDate;)Z A: $1
    function isBefore(other : JChronoLocalDate) : boolean; cdecl;               // (Ljava/time/chrono/ChronoLocalDate;)Z A: $1
    function isEqual(other : JChronoLocalDate) : boolean; cdecl;                // (Ljava/time/chrono/ChronoLocalDate;)Z A: $1
    function isLeapYear : boolean; cdecl;                                       // ()Z A: $1
    function isSupported(&unit : JTemporalUnit) : boolean; cdecl; overload;     // (Ljava/time/temporal/TemporalUnit;)Z A: $1
    function isSupported(field : JTemporalField) : boolean; cdecl; overload;    // (Ljava/time/temporal/TemporalField;)Z A: $1
    function lengthOfMonth : Integer; cdecl;                                    // ()I A: $1
    function lengthOfYear : Integer; cdecl;                                     // ()I A: $1
    function minus(amountToSubtract : Int64; &unit : JTemporalUnit) : JLocalDate; cdecl; overload;// (JLjava/time/temporal/TemporalUnit;)Ljava/time/LocalDate; A: $1
    function minus(amountToSubtract : JTemporalAmount) : JLocalDate; cdecl; overload;// (Ljava/time/temporal/TemporalAmount;)Ljava/time/LocalDate; A: $1
    function minusDays(daysToSubtract : Int64) : JLocalDate; cdecl;             // (J)Ljava/time/LocalDate; A: $1
    function minusMonths(monthsToSubtract : Int64) : JLocalDate; cdecl;         // (J)Ljava/time/LocalDate; A: $1
    function minusWeeks(weeksToSubtract : Int64) : JLocalDate; cdecl;           // (J)Ljava/time/LocalDate; A: $1
    function minusYears(yearsToSubtract : Int64) : JLocalDate; cdecl;           // (J)Ljava/time/LocalDate; A: $1
    function now : JLocalDate; cdecl; overload;                                 // ()Ljava/time/LocalDate; A: $9
    function now(clock : JClock) : JLocalDate; cdecl; overload;                 // (Ljava/time/Clock;)Ljava/time/LocalDate; A: $9
    function now(zone : JZoneId) : JLocalDate; cdecl; overload;                 // (Ljava/time/ZoneId;)Ljava/time/LocalDate; A: $9
    function ofEpochDay(epochDay : Int64) : JLocalDate; cdecl;                  // (J)Ljava/time/LocalDate; A: $9
    function ofYearDay(year : Integer; dayOfYear : Integer) : JLocalDate; cdecl;// (II)Ljava/time/LocalDate; A: $9
    function parse(text : JCharSequence) : JLocalDate; cdecl; overload;         // (Ljava/lang/CharSequence;)Ljava/time/LocalDate; A: $9
    function parse(text : JCharSequence; formatter : JDateTimeFormatter) : JLocalDate; cdecl; overload;// (Ljava/lang/CharSequence;Ljava/time/format/DateTimeFormatter;)Ljava/time/LocalDate; A: $9
    function plus(amountToAdd : Int64; &unit : JTemporalUnit) : JLocalDate; cdecl; overload;// (JLjava/time/temporal/TemporalUnit;)Ljava/time/LocalDate; A: $1
    function plus(amountToAdd : JTemporalAmount) : JLocalDate; cdecl; overload; // (Ljava/time/temporal/TemporalAmount;)Ljava/time/LocalDate; A: $1
    function plusDays(daysToAdd : Int64) : JLocalDate; cdecl;                   // (J)Ljava/time/LocalDate; A: $1
    function plusMonths(monthsToAdd : Int64) : JLocalDate; cdecl;               // (J)Ljava/time/LocalDate; A: $1
    function plusWeeks(weeksToAdd : Int64) : JLocalDate; cdecl;                 // (J)Ljava/time/LocalDate; A: $1
    function plusYears(yearsToAdd : Int64) : JLocalDate; cdecl;                 // (J)Ljava/time/LocalDate; A: $1
    function query(query : JTemporalQuery) : JObject; cdecl;                    // (Ljava/time/temporal/TemporalQuery;)Ljava/lang/Object; A: $1
    function range(field : JTemporalField) : JValueRange; cdecl;                // (Ljava/time/temporal/TemporalField;)Ljava/time/temporal/ValueRange; A: $1
    function toEpochDay : Int64; cdecl;                                         // ()J A: $1
    function toString : JString; cdecl;                                         // ()Ljava/lang/String; A: $1
    function withDayOfMonth(dayOfMonth : Integer) : JLocalDate; cdecl;          // (I)Ljava/time/LocalDate; A: $1
    function withDayOfYear(dayOfYear : Integer) : JLocalDate; cdecl;            // (I)Ljava/time/LocalDate; A: $1
    function withMonth(month : Integer) : JLocalDate; cdecl;                    // (I)Ljava/time/LocalDate; A: $1
    function withYear(year : Integer) : JLocalDate; cdecl;                      // (I)Ljava/time/LocalDate; A: $1
    property MAX : JLocalDate read _GetMAX;                                     // Ljava/time/LocalDate; A: $19
    property MIN : JLocalDate read _GetMIN;                                     // Ljava/time/LocalDate; A: $19
  end;

  [JavaSignature('java/time/LocalDate')]
  JLocalDate = interface(JObject)
    ['{566D8020-0569-427A-86F4-A327CB194020}']
    function &until(endDateExclusive : JChronoLocalDate) : JPeriod; cdecl; overload;// (Ljava/time/chrono/ChronoLocalDate;)Ljava/time/Period; A: $1
    function &until(endExclusive : JTemporal; &unit : JTemporalUnit) : Int64; cdecl; overload;// (Ljava/time/temporal/Temporal;Ljava/time/temporal/TemporalUnit;)J A: $1
    function &with(adjuster : JTemporalAdjuster) : JLocalDate; cdecl; overload; // (Ljava/time/temporal/TemporalAdjuster;)Ljava/time/LocalDate; A: $1
    function &with(field : JTemporalField; newValue : Int64) : JLocalDate; cdecl; overload;// (Ljava/time/temporal/TemporalField;J)Ljava/time/LocalDate; A: $1
    function adjustInto(temporal : JTemporal) : JTemporal; cdecl;               // (Ljava/time/temporal/Temporal;)Ljava/time/temporal/Temporal; A: $1
    function atStartOfDay : JLocalDateTime; cdecl; overload;                    // ()Ljava/time/LocalDateTime; A: $1
    function atStartOfDay(zone : JZoneId) : JZonedDateTime; cdecl; overload;    // (Ljava/time/ZoneId;)Ljava/time/ZonedDateTime; A: $1
    function atTime(hour : Integer; minute : Integer) : JLocalDateTime; cdecl; overload;// (II)Ljava/time/LocalDateTime; A: $1
    function atTime(hour : Integer; minute : Integer; second : Integer) : JLocalDateTime; cdecl; overload;// (III)Ljava/time/LocalDateTime; A: $1
    function atTime(hour : Integer; minute : Integer; second : Integer; nanoOfSecond : Integer) : JLocalDateTime; cdecl; overload;// (IIII)Ljava/time/LocalDateTime; A: $1
    function atTime(time : JLocalTime) : JLocalDateTime; cdecl; overload;       // (Ljava/time/LocalTime;)Ljava/time/LocalDateTime; A: $1
    function atTime(time : JOffsetTime) : JOffsetDateTime; cdecl; overload;     // (Ljava/time/OffsetTime;)Ljava/time/OffsetDateTime; A: $1
    function compareTo(other : JChronoLocalDate) : Integer; cdecl;              // (Ljava/time/chrono/ChronoLocalDate;)I A: $1
    function equals(obj : JObject) : boolean; cdecl;                            // (Ljava/lang/Object;)Z A: $1
    function format(formatter : JDateTimeFormatter) : JString; cdecl;           // (Ljava/time/format/DateTimeFormatter;)Ljava/lang/String; A: $1
    function get(field : JTemporalField) : Integer; cdecl;                      // (Ljava/time/temporal/TemporalField;)I A: $1
    function getChronology : JIsoChronology; cdecl;                             // ()Ljava/time/chrono/IsoChronology; A: $1
    function getDayOfMonth : Integer; cdecl;                                    // ()I A: $1
    function getDayOfWeek : JDayOfWeek; cdecl;                                  // ()Ljava/time/DayOfWeek; A: $1
    function getDayOfYear : Integer; cdecl;                                     // ()I A: $1
    function getEra : JEra; cdecl;                                              // ()Ljava/time/chrono/Era; A: $1
    function getLong(field : JTemporalField) : Int64; cdecl;                    // (Ljava/time/temporal/TemporalField;)J A: $1
    function getMonth : JMonth; cdecl;                                          // ()Ljava/time/Month; A: $1
    function getMonthValue : Integer; cdecl;                                    // ()I A: $1
    function getYear : Integer; cdecl;                                          // ()I A: $1
    function hashCode : Integer; cdecl;                                         // ()I A: $1
    function isAfter(other : JChronoLocalDate) : boolean; cdecl;                // (Ljava/time/chrono/ChronoLocalDate;)Z A: $1
    function isBefore(other : JChronoLocalDate) : boolean; cdecl;               // (Ljava/time/chrono/ChronoLocalDate;)Z A: $1
    function isEqual(other : JChronoLocalDate) : boolean; cdecl;                // (Ljava/time/chrono/ChronoLocalDate;)Z A: $1
    function isLeapYear : boolean; cdecl;                                       // ()Z A: $1
    function isSupported(&unit : JTemporalUnit) : boolean; cdecl; overload;     // (Ljava/time/temporal/TemporalUnit;)Z A: $1
    function isSupported(field : JTemporalField) : boolean; cdecl; overload;    // (Ljava/time/temporal/TemporalField;)Z A: $1
    function lengthOfMonth : Integer; cdecl;                                    // ()I A: $1
    function lengthOfYear : Integer; cdecl;                                     // ()I A: $1
    function minus(amountToSubtract : Int64; &unit : JTemporalUnit) : JLocalDate; cdecl; overload;// (JLjava/time/temporal/TemporalUnit;)Ljava/time/LocalDate; A: $1
    function minus(amountToSubtract : JTemporalAmount) : JLocalDate; cdecl; overload;// (Ljava/time/temporal/TemporalAmount;)Ljava/time/LocalDate; A: $1
    function minusDays(daysToSubtract : Int64) : JLocalDate; cdecl;             // (J)Ljava/time/LocalDate; A: $1
    function minusMonths(monthsToSubtract : Int64) : JLocalDate; cdecl;         // (J)Ljava/time/LocalDate; A: $1
    function minusWeeks(weeksToSubtract : Int64) : JLocalDate; cdecl;           // (J)Ljava/time/LocalDate; A: $1
    function minusYears(yearsToSubtract : Int64) : JLocalDate; cdecl;           // (J)Ljava/time/LocalDate; A: $1
    function plus(amountToAdd : Int64; &unit : JTemporalUnit) : JLocalDate; cdecl; overload;// (JLjava/time/temporal/TemporalUnit;)Ljava/time/LocalDate; A: $1
    function plus(amountToAdd : JTemporalAmount) : JLocalDate; cdecl; overload; // (Ljava/time/temporal/TemporalAmount;)Ljava/time/LocalDate; A: $1
    function plusDays(daysToAdd : Int64) : JLocalDate; cdecl;                   // (J)Ljava/time/LocalDate; A: $1
    function plusMonths(monthsToAdd : Int64) : JLocalDate; cdecl;               // (J)Ljava/time/LocalDate; A: $1
    function plusWeeks(weeksToAdd : Int64) : JLocalDate; cdecl;                 // (J)Ljava/time/LocalDate; A: $1
    function plusYears(yearsToAdd : Int64) : JLocalDate; cdecl;                 // (J)Ljava/time/LocalDate; A: $1
    function query(query : JTemporalQuery) : JObject; cdecl;                    // (Ljava/time/temporal/TemporalQuery;)Ljava/lang/Object; A: $1
    function range(field : JTemporalField) : JValueRange; cdecl;                // (Ljava/time/temporal/TemporalField;)Ljava/time/temporal/ValueRange; A: $1
    function toEpochDay : Int64; cdecl;                                         // ()J A: $1
    function toString : JString; cdecl;                                         // ()Ljava/lang/String; A: $1
    function withDayOfMonth(dayOfMonth : Integer) : JLocalDate; cdecl;          // (I)Ljava/time/LocalDate; A: $1
    function withDayOfYear(dayOfYear : Integer) : JLocalDate; cdecl;            // (I)Ljava/time/LocalDate; A: $1
    function withMonth(month : Integer) : JLocalDate; cdecl;                    // (I)Ljava/time/LocalDate; A: $1
    function withYear(year : Integer) : JLocalDate; cdecl;                      // (I)Ljava/time/LocalDate; A: $1
  end;

  TJLocalDate = class(TJavaGenericImport<JLocalDateClass, JLocalDate>)
  end;


  // Merged from: .\java.time.Period.pas
  JPeriodClass = interface(JObjectClass)
    ['{3160B471-EFC1-4533-BF23-48BEC1201A94}']
    function &of(years : Integer; months : Integer; days : Integer) : JPeriod; cdecl;// (III)Ljava/time/Period; A: $9
    function _GetZERO : JPeriod; cdecl;                                         //  A: $19
    function addTo(temporal : JTemporal) : JTemporal; cdecl;                    // (Ljava/time/temporal/Temporal;)Ljava/time/temporal/Temporal; A: $1
    function between(startDateInclusive : JLocalDate; endDateExclusive : JLocalDate) : JPeriod; cdecl;// (Ljava/time/LocalDate;Ljava/time/LocalDate;)Ljava/time/Period; A: $9
    function equals(obj : JObject) : boolean; cdecl;                            // (Ljava/lang/Object;)Z A: $1
    function from(amount : JTemporalAmount) : JPeriod; cdecl;                   // (Ljava/time/temporal/TemporalAmount;)Ljava/time/Period; A: $9
    function get(&unit : JTemporalUnit) : Int64; cdecl;                         // (Ljava/time/temporal/TemporalUnit;)J A: $1
    function getChronology : JIsoChronology; cdecl;                             // ()Ljava/time/chrono/IsoChronology; A: $1
    function getDays : Integer; cdecl;                                          // ()I A: $1
    function getMonths : Integer; cdecl;                                        // ()I A: $1
    function getUnits : JList; cdecl;                                           // ()Ljava/util/List; A: $1
    function getYears : Integer; cdecl;                                         // ()I A: $1
    function hashCode : Integer; cdecl;                                         // ()I A: $1
    function isNegative : boolean; cdecl;                                       // ()Z A: $1
    function isZero : boolean; cdecl;                                           // ()Z A: $1
    function minus(amountToSubtract : JTemporalAmount) : JPeriod; cdecl;        // (Ljava/time/temporal/TemporalAmount;)Ljava/time/Period; A: $1
    function minusDays(daysToSubtract : Int64) : JPeriod; cdecl;                // (J)Ljava/time/Period; A: $1
    function minusMonths(monthsToSubtract : Int64) : JPeriod; cdecl;            // (J)Ljava/time/Period; A: $1
    function minusYears(yearsToSubtract : Int64) : JPeriod; cdecl;              // (J)Ljava/time/Period; A: $1
    function multipliedBy(scalar : Integer) : JPeriod; cdecl;                   // (I)Ljava/time/Period; A: $1
    function negated : JPeriod; cdecl;                                          // ()Ljava/time/Period; A: $1
    function normalized : JPeriod; cdecl;                                       // ()Ljava/time/Period; A: $1
    function ofDays(days : Integer) : JPeriod; cdecl;                           // (I)Ljava/time/Period; A: $9
    function ofMonths(months : Integer) : JPeriod; cdecl;                       // (I)Ljava/time/Period; A: $9
    function ofWeeks(weeks : Integer) : JPeriod; cdecl;                         // (I)Ljava/time/Period; A: $9
    function ofYears(years : Integer) : JPeriod; cdecl;                         // (I)Ljava/time/Period; A: $9
    function parse(text : JCharSequence) : JPeriod; cdecl;                      // (Ljava/lang/CharSequence;)Ljava/time/Period; A: $9
    function plus(amountToAdd : JTemporalAmount) : JPeriod; cdecl;              // (Ljava/time/temporal/TemporalAmount;)Ljava/time/Period; A: $1
    function plusDays(daysToAdd : Int64) : JPeriod; cdecl;                      // (J)Ljava/time/Period; A: $1
    function plusMonths(monthsToAdd : Int64) : JPeriod; cdecl;                  // (J)Ljava/time/Period; A: $1
    function plusYears(yearsToAdd : Int64) : JPeriod; cdecl;                    // (J)Ljava/time/Period; A: $1
    function subtractFrom(temporal : JTemporal) : JTemporal; cdecl;             // (Ljava/time/temporal/Temporal;)Ljava/time/temporal/Temporal; A: $1
    function toString : JString; cdecl;                                         // ()Ljava/lang/String; A: $1
    function toTotalMonths : Int64; cdecl;                                      // ()J A: $1
    function withDays(days : Integer) : JPeriod; cdecl;                         // (I)Ljava/time/Period; A: $1
    function withMonths(months : Integer) : JPeriod; cdecl;                     // (I)Ljava/time/Period; A: $1
    function withYears(years : Integer) : JPeriod; cdecl;                       // (I)Ljava/time/Period; A: $1
    property ZERO : JPeriod read _GetZERO;                                      // Ljava/time/Period; A: $19
  end;

  [JavaSignature('java/time/Period')]
  JPeriod = interface(JObject)
    ['{AE01A187-79C0-4453-96E2-56E7A948A276}']
    function addTo(temporal : JTemporal) : JTemporal; cdecl;                    // (Ljava/time/temporal/Temporal;)Ljava/time/temporal/Temporal; A: $1
    function equals(obj : JObject) : boolean; cdecl;                            // (Ljava/lang/Object;)Z A: $1
    function get(&unit : JTemporalUnit) : Int64; cdecl;                         // (Ljava/time/temporal/TemporalUnit;)J A: $1
    function getChronology : JIsoChronology; cdecl;                             // ()Ljava/time/chrono/IsoChronology; A: $1
    function getDays : Integer; cdecl;                                          // ()I A: $1
    function getMonths : Integer; cdecl;                                        // ()I A: $1
    function getUnits : JList; cdecl;                                           // ()Ljava/util/List; A: $1
    function getYears : Integer; cdecl;                                         // ()I A: $1
    function hashCode : Integer; cdecl;                                         // ()I A: $1
    function isNegative : boolean; cdecl;                                       // ()Z A: $1
    function isZero : boolean; cdecl;                                           // ()Z A: $1
    function minus(amountToSubtract : JTemporalAmount) : JPeriod; cdecl;        // (Ljava/time/temporal/TemporalAmount;)Ljava/time/Period; A: $1
    function minusDays(daysToSubtract : Int64) : JPeriod; cdecl;                // (J)Ljava/time/Period; A: $1
    function minusMonths(monthsToSubtract : Int64) : JPeriod; cdecl;            // (J)Ljava/time/Period; A: $1
    function minusYears(yearsToSubtract : Int64) : JPeriod; cdecl;              // (J)Ljava/time/Period; A: $1
    function multipliedBy(scalar : Integer) : JPeriod; cdecl;                   // (I)Ljava/time/Period; A: $1
    function negated : JPeriod; cdecl;                                          // ()Ljava/time/Period; A: $1
    function normalized : JPeriod; cdecl;                                       // ()Ljava/time/Period; A: $1
    function plus(amountToAdd : JTemporalAmount) : JPeriod; cdecl;              // (Ljava/time/temporal/TemporalAmount;)Ljava/time/Period; A: $1
    function plusDays(daysToAdd : Int64) : JPeriod; cdecl;                      // (J)Ljava/time/Period; A: $1
    function plusMonths(monthsToAdd : Int64) : JPeriod; cdecl;                  // (J)Ljava/time/Period; A: $1
    function plusYears(yearsToAdd : Int64) : JPeriod; cdecl;                    // (J)Ljava/time/Period; A: $1
    function subtractFrom(temporal : JTemporal) : JTemporal; cdecl;             // (Ljava/time/temporal/Temporal;)Ljava/time/temporal/Temporal; A: $1
    function toString : JString; cdecl;                                         // ()Ljava/lang/String; A: $1
    function toTotalMonths : Int64; cdecl;                                      // ()J A: $1
    function withDays(days : Integer) : JPeriod; cdecl;                         // (I)Ljava/time/Period; A: $1
    function withMonths(months : Integer) : JPeriod; cdecl;                     // (I)Ljava/time/Period; A: $1
    function withYears(years : Integer) : JPeriod; cdecl;                       // (I)Ljava/time/Period; A: $1
  end;

  TJPeriod = class(TJavaGenericImport<JPeriodClass, JPeriod>)
  end;


  // Merged from: .\java.time.OffsetTime.pas
  JOffsetTimeClass = interface(JObjectClass)
    ['{FC979327-F64B-4161-9494-51AA6CAC513C}']
    function &of(hour : Integer; minute : Integer; second : Integer; nanoOfSecond : Integer; offset : JZoneOffset) : JOffsetTime; cdecl; overload;// (IIIILjava/time/ZoneOffset;)Ljava/time/OffsetTime; A: $9
    function &of(time : JLocalTime; offset : JZoneOffset) : JOffsetTime; cdecl; overload;// (Ljava/time/LocalTime;Ljava/time/ZoneOffset;)Ljava/time/OffsetTime; A: $9
    function &until(endExclusive : JTemporal; &unit : JTemporalUnit) : Int64; cdecl;// (Ljava/time/temporal/Temporal;Ljava/time/temporal/TemporalUnit;)J A: $1
    function &with(adjuster : JTemporalAdjuster) : JOffsetTime; cdecl; overload;// (Ljava/time/temporal/TemporalAdjuster;)Ljava/time/OffsetTime; A: $1
    function &with(field : JTemporalField; newValue : Int64) : JOffsetTime; cdecl; overload;// (Ljava/time/temporal/TemporalField;J)Ljava/time/OffsetTime; A: $1
    function _GetMAX : JOffsetTime; cdecl;                                      //  A: $19
    function _GetMIN : JOffsetTime; cdecl;                                      //  A: $19
    function adjustInto(temporal : JTemporal) : JTemporal; cdecl;               // (Ljava/time/temporal/Temporal;)Ljava/time/temporal/Temporal; A: $1
    function atDate(date : JLocalDate) : JOffsetDateTime; cdecl;                // (Ljava/time/LocalDate;)Ljava/time/OffsetDateTime; A: $1
    function compareTo(other : JOffsetTime) : Integer; cdecl;                   // (Ljava/time/OffsetTime;)I A: $1
    function equals(obj : JObject) : boolean; cdecl;                            // (Ljava/lang/Object;)Z A: $1
    function format(formatter : JDateTimeFormatter) : JString; cdecl;           // (Ljava/time/format/DateTimeFormatter;)Ljava/lang/String; A: $1
    function from(temporal : JTemporalAccessor) : JOffsetTime; cdecl;           // (Ljava/time/temporal/TemporalAccessor;)Ljava/time/OffsetTime; A: $9
    function get(field : JTemporalField) : Integer; cdecl;                      // (Ljava/time/temporal/TemporalField;)I A: $1
    function getHour : Integer; cdecl;                                          // ()I A: $1
    function getLong(field : JTemporalField) : Int64; cdecl;                    // (Ljava/time/temporal/TemporalField;)J A: $1
    function getMinute : Integer; cdecl;                                        // ()I A: $1
    function getNano : Integer; cdecl;                                          // ()I A: $1
    function getOffset : JZoneOffset; cdecl;                                    // ()Ljava/time/ZoneOffset; A: $1
    function getSecond : Integer; cdecl;                                        // ()I A: $1
    function hashCode : Integer; cdecl;                                         // ()I A: $1
    function isAfter(other : JOffsetTime) : boolean; cdecl;                     // (Ljava/time/OffsetTime;)Z A: $1
    function isBefore(other : JOffsetTime) : boolean; cdecl;                    // (Ljava/time/OffsetTime;)Z A: $1
    function isEqual(other : JOffsetTime) : boolean; cdecl;                     // (Ljava/time/OffsetTime;)Z A: $1
    function isSupported(&unit : JTemporalUnit) : boolean; cdecl; overload;     // (Ljava/time/temporal/TemporalUnit;)Z A: $1
    function isSupported(field : JTemporalField) : boolean; cdecl; overload;    // (Ljava/time/temporal/TemporalField;)Z A: $1
    function minus(amountToSubtract : Int64; &unit : JTemporalUnit) : JOffsetTime; cdecl; overload;// (JLjava/time/temporal/TemporalUnit;)Ljava/time/OffsetTime; A: $1
    function minus(amountToSubtract : JTemporalAmount) : JOffsetTime; cdecl; overload;// (Ljava/time/temporal/TemporalAmount;)Ljava/time/OffsetTime; A: $1
    function minusHours(hours : Int64) : JOffsetTime; cdecl;                    // (J)Ljava/time/OffsetTime; A: $1
    function minusMinutes(minutes : Int64) : JOffsetTime; cdecl;                // (J)Ljava/time/OffsetTime; A: $1
    function minusNanos(nanos : Int64) : JOffsetTime; cdecl;                    // (J)Ljava/time/OffsetTime; A: $1
    function minusSeconds(seconds : Int64) : JOffsetTime; cdecl;                // (J)Ljava/time/OffsetTime; A: $1
    function now : JOffsetTime; cdecl; overload;                                // ()Ljava/time/OffsetTime; A: $9
    function now(clock : JClock) : JOffsetTime; cdecl; overload;                // (Ljava/time/Clock;)Ljava/time/OffsetTime; A: $9
    function now(zone : JZoneId) : JOffsetTime; cdecl; overload;                // (Ljava/time/ZoneId;)Ljava/time/OffsetTime; A: $9
    function ofInstant(instant : JInstant; zone : JZoneId) : JOffsetTime; cdecl;// (Ljava/time/Instant;Ljava/time/ZoneId;)Ljava/time/OffsetTime; A: $9
    function parse(text : JCharSequence) : JOffsetTime; cdecl; overload;        // (Ljava/lang/CharSequence;)Ljava/time/OffsetTime; A: $9
    function parse(text : JCharSequence; formatter : JDateTimeFormatter) : JOffsetTime; cdecl; overload;// (Ljava/lang/CharSequence;Ljava/time/format/DateTimeFormatter;)Ljava/time/OffsetTime; A: $9
    function plus(amountToAdd : Int64; &unit : JTemporalUnit) : JOffsetTime; cdecl; overload;// (JLjava/time/temporal/TemporalUnit;)Ljava/time/OffsetTime; A: $1
    function plus(amountToAdd : JTemporalAmount) : JOffsetTime; cdecl; overload;// (Ljava/time/temporal/TemporalAmount;)Ljava/time/OffsetTime; A: $1
    function plusHours(hours : Int64) : JOffsetTime; cdecl;                     // (J)Ljava/time/OffsetTime; A: $1
    function plusMinutes(minutes : Int64) : JOffsetTime; cdecl;                 // (J)Ljava/time/OffsetTime; A: $1
    function plusNanos(nanos : Int64) : JOffsetTime; cdecl;                     // (J)Ljava/time/OffsetTime; A: $1
    function plusSeconds(seconds : Int64) : JOffsetTime; cdecl;                 // (J)Ljava/time/OffsetTime; A: $1
    function query(query : JTemporalQuery) : JObject; cdecl;                    // (Ljava/time/temporal/TemporalQuery;)Ljava/lang/Object; A: $1
    function range(field : JTemporalField) : JValueRange; cdecl;                // (Ljava/time/temporal/TemporalField;)Ljava/time/temporal/ValueRange; A: $1
    function toLocalTime : JLocalTime; cdecl;                                   // ()Ljava/time/LocalTime; A: $1
    function toString : JString; cdecl;                                         // ()Ljava/lang/String; A: $1
    function truncatedTo(&unit : JTemporalUnit) : JOffsetTime; cdecl;           // (Ljava/time/temporal/TemporalUnit;)Ljava/time/OffsetTime; A: $1
    function withHour(hour : Integer) : JOffsetTime; cdecl;                     // (I)Ljava/time/OffsetTime; A: $1
    function withMinute(minute : Integer) : JOffsetTime; cdecl;                 // (I)Ljava/time/OffsetTime; A: $1
    function withNano(nanoOfSecond : Integer) : JOffsetTime; cdecl;             // (I)Ljava/time/OffsetTime; A: $1
    function withOffsetSameInstant(offset : JZoneOffset) : JOffsetTime; cdecl;  // (Ljava/time/ZoneOffset;)Ljava/time/OffsetTime; A: $1
    function withOffsetSameLocal(offset : JZoneOffset) : JOffsetTime; cdecl;    // (Ljava/time/ZoneOffset;)Ljava/time/OffsetTime; A: $1
    function withSecond(second : Integer) : JOffsetTime; cdecl;                 // (I)Ljava/time/OffsetTime; A: $1
    property MAX : JOffsetTime read _GetMAX;                                    // Ljava/time/OffsetTime; A: $19
    property MIN : JOffsetTime read _GetMIN;                                    // Ljava/time/OffsetTime; A: $19
  end;

  [JavaSignature('java/time/OffsetTime')]
  JOffsetTime = interface(JObject)
    ['{A661E3FE-9BFC-452B-AB44-9275B0AEDD9A}']
    function &until(endExclusive : JTemporal; &unit : JTemporalUnit) : Int64; cdecl;// (Ljava/time/temporal/Temporal;Ljava/time/temporal/TemporalUnit;)J A: $1
    function &with(adjuster : JTemporalAdjuster) : JOffsetTime; cdecl; overload;// (Ljava/time/temporal/TemporalAdjuster;)Ljava/time/OffsetTime; A: $1
    function &with(field : JTemporalField; newValue : Int64) : JOffsetTime; cdecl; overload;// (Ljava/time/temporal/TemporalField;J)Ljava/time/OffsetTime; A: $1
    function adjustInto(temporal : JTemporal) : JTemporal; cdecl;               // (Ljava/time/temporal/Temporal;)Ljava/time/temporal/Temporal; A: $1
    function atDate(date : JLocalDate) : JOffsetDateTime; cdecl;                // (Ljava/time/LocalDate;)Ljava/time/OffsetDateTime; A: $1
    function compareTo(other : JOffsetTime) : Integer; cdecl;                   // (Ljava/time/OffsetTime;)I A: $1
    function equals(obj : JObject) : boolean; cdecl;                            // (Ljava/lang/Object;)Z A: $1
    function format(formatter : JDateTimeFormatter) : JString; cdecl;           // (Ljava/time/format/DateTimeFormatter;)Ljava/lang/String; A: $1
    function get(field : JTemporalField) : Integer; cdecl;                      // (Ljava/time/temporal/TemporalField;)I A: $1
    function getHour : Integer; cdecl;                                          // ()I A: $1
    function getLong(field : JTemporalField) : Int64; cdecl;                    // (Ljava/time/temporal/TemporalField;)J A: $1
    function getMinute : Integer; cdecl;                                        // ()I A: $1
    function getNano : Integer; cdecl;                                          // ()I A: $1
    function getOffset : JZoneOffset; cdecl;                                    // ()Ljava/time/ZoneOffset; A: $1
    function getSecond : Integer; cdecl;                                        // ()I A: $1
    function hashCode : Integer; cdecl;                                         // ()I A: $1
    function isAfter(other : JOffsetTime) : boolean; cdecl;                     // (Ljava/time/OffsetTime;)Z A: $1
    function isBefore(other : JOffsetTime) : boolean; cdecl;                    // (Ljava/time/OffsetTime;)Z A: $1
    function isEqual(other : JOffsetTime) : boolean; cdecl;                     // (Ljava/time/OffsetTime;)Z A: $1
    function isSupported(&unit : JTemporalUnit) : boolean; cdecl; overload;     // (Ljava/time/temporal/TemporalUnit;)Z A: $1
    function isSupported(field : JTemporalField) : boolean; cdecl; overload;    // (Ljava/time/temporal/TemporalField;)Z A: $1
    function minus(amountToSubtract : Int64; &unit : JTemporalUnit) : JOffsetTime; cdecl; overload;// (JLjava/time/temporal/TemporalUnit;)Ljava/time/OffsetTime; A: $1
    function minus(amountToSubtract : JTemporalAmount) : JOffsetTime; cdecl; overload;// (Ljava/time/temporal/TemporalAmount;)Ljava/time/OffsetTime; A: $1
    function minusHours(hours : Int64) : JOffsetTime; cdecl;                    // (J)Ljava/time/OffsetTime; A: $1
    function minusMinutes(minutes : Int64) : JOffsetTime; cdecl;                // (J)Ljava/time/OffsetTime; A: $1
    function minusNanos(nanos : Int64) : JOffsetTime; cdecl;                    // (J)Ljava/time/OffsetTime; A: $1
    function minusSeconds(seconds : Int64) : JOffsetTime; cdecl;                // (J)Ljava/time/OffsetTime; A: $1
    function plus(amountToAdd : Int64; &unit : JTemporalUnit) : JOffsetTime; cdecl; overload;// (JLjava/time/temporal/TemporalUnit;)Ljava/time/OffsetTime; A: $1
    function plus(amountToAdd : JTemporalAmount) : JOffsetTime; cdecl; overload;// (Ljava/time/temporal/TemporalAmount;)Ljava/time/OffsetTime; A: $1
    function plusHours(hours : Int64) : JOffsetTime; cdecl;                     // (J)Ljava/time/OffsetTime; A: $1
    function plusMinutes(minutes : Int64) : JOffsetTime; cdecl;                 // (J)Ljava/time/OffsetTime; A: $1
    function plusNanos(nanos : Int64) : JOffsetTime; cdecl;                     // (J)Ljava/time/OffsetTime; A: $1
    function plusSeconds(seconds : Int64) : JOffsetTime; cdecl;                 // (J)Ljava/time/OffsetTime; A: $1
    function query(query : JTemporalQuery) : JObject; cdecl;                    // (Ljava/time/temporal/TemporalQuery;)Ljava/lang/Object; A: $1
    function range(field : JTemporalField) : JValueRange; cdecl;                // (Ljava/time/temporal/TemporalField;)Ljava/time/temporal/ValueRange; A: $1
    function toLocalTime : JLocalTime; cdecl;                                   // ()Ljava/time/LocalTime; A: $1
    function toString : JString; cdecl;                                         // ()Ljava/lang/String; A: $1
    function truncatedTo(&unit : JTemporalUnit) : JOffsetTime; cdecl;           // (Ljava/time/temporal/TemporalUnit;)Ljava/time/OffsetTime; A: $1
    function withHour(hour : Integer) : JOffsetTime; cdecl;                     // (I)Ljava/time/OffsetTime; A: $1
    function withMinute(minute : Integer) : JOffsetTime; cdecl;                 // (I)Ljava/time/OffsetTime; A: $1
    function withNano(nanoOfSecond : Integer) : JOffsetTime; cdecl;             // (I)Ljava/time/OffsetTime; A: $1
    function withOffsetSameInstant(offset : JZoneOffset) : JOffsetTime; cdecl;  // (Ljava/time/ZoneOffset;)Ljava/time/OffsetTime; A: $1
    function withOffsetSameLocal(offset : JZoneOffset) : JOffsetTime; cdecl;    // (Ljava/time/ZoneOffset;)Ljava/time/OffsetTime; A: $1
    function withSecond(second : Integer) : JOffsetTime; cdecl;                 // (I)Ljava/time/OffsetTime; A: $1
  end;

  TJOffsetTime = class(TJavaGenericImport<JOffsetTimeClass, JOffsetTime>)
  end;


implementation

end.
