//
// Generated by JavaToPas v1.5 20171018 - 171206
////////////////////////////////////////////////////////////////////////////////
unit java.time.LocalDateTime;

interface

uses
  AndroidAPI.JNIBridge,
  Androidapi.JNI.JavaTypes,
  java.time.Month,
  java.time.Duration,
  java.time.DayOfWeek,
  java.time.chrono.ChronoLocalDate;

type
  JZonedDateTime = interface; // merged
  JOffsetDateTime = interface; // merged
  JLocalTime = interface; // merged
  JLocalDateTime = interface;

  JLocalDateTimeClass = interface(JObjectClass)
    ['{6D6A209D-CC1D-4C8B-A249-00AF81FB8D6B}']
    function &of(date : JLocalDate; time : JLocalTime) : JLocalDateTime; cdecl; overload;// (Ljava/time/LocalDate;Ljava/time/LocalTime;)Ljava/time/LocalDateTime; A: $9
    function &of(year : Integer; month : Integer; dayOfMonth : Integer; hour : Integer; minute : Integer) : JLocalDateTime; cdecl; overload;// (IIIII)Ljava/time/LocalDateTime; A: $9
    function &of(year : Integer; month : Integer; dayOfMonth : Integer; hour : Integer; minute : Integer; second : Integer) : JLocalDateTime; cdecl; overload;// (IIIIII)Ljava/time/LocalDateTime; A: $9
    function &of(year : Integer; month : Integer; dayOfMonth : Integer; hour : Integer; minute : Integer; second : Integer; nanoOfSecond : Integer) : JLocalDateTime; cdecl; overload;// (IIIIIII)Ljava/time/LocalDateTime; A: $9
    function &of(year : Integer; month : JMonth; dayOfMonth : Integer; hour : Integer; minute : Integer) : JLocalDateTime; cdecl; overload;// (ILjava/time/Month;III)Ljava/time/LocalDateTime; A: $9
    function &of(year : Integer; month : JMonth; dayOfMonth : Integer; hour : Integer; minute : Integer; second : Integer) : JLocalDateTime; cdecl; overload;// (ILjava/time/Month;IIII)Ljava/time/LocalDateTime; A: $9
    function &of(year : Integer; month : JMonth; dayOfMonth : Integer; hour : Integer; minute : Integer; second : Integer; nanoOfSecond : Integer) : JLocalDateTime; cdecl; overload;// (ILjava/time/Month;IIIII)Ljava/time/LocalDateTime; A: $9
    function &until(endExclusive : JTemporal; &unit : JTemporalUnit) : Int64; cdecl;// (Ljava/time/temporal/Temporal;Ljava/time/temporal/TemporalUnit;)J A: $1
    function &with(adjuster : JTemporalAdjuster) : JLocalDateTime; cdecl; overload;// (Ljava/time/temporal/TemporalAdjuster;)Ljava/time/LocalDateTime; A: $1
    function &with(field : JTemporalField; newValue : Int64) : JLocalDateTime; cdecl; overload;// (Ljava/time/temporal/TemporalField;J)Ljava/time/LocalDateTime; A: $1
    function _GetMAX : JLocalDateTime; cdecl;                                   //  A: $19
    function _GetMIN : JLocalDateTime; cdecl;                                   //  A: $19
    function adjustInto(temporal : JTemporal) : JTemporal; cdecl;               // (Ljava/time/temporal/Temporal;)Ljava/time/temporal/Temporal; A: $1
    function atOffset(offset : JZoneOffset) : JOffsetDateTime; cdecl;           // (Ljava/time/ZoneOffset;)Ljava/time/OffsetDateTime; A: $1
    function atZone(zone : JZoneId) : JZonedDateTime; cdecl;                    // (Ljava/time/ZoneId;)Ljava/time/ZonedDateTime; A: $1
    function compareTo(other : JChronoLocalDateTime) : Integer; cdecl;          // (Ljava/time/chrono/ChronoLocalDateTime;)I A: $1
    function equals(obj : JObject) : boolean; cdecl;                            // (Ljava/lang/Object;)Z A: $1
    function format(formatter : JDateTimeFormatter) : JString; cdecl;           // (Ljava/time/format/DateTimeFormatter;)Ljava/lang/String; A: $1
    function from(temporal : JTemporalAccessor) : JLocalDateTime; cdecl;        // (Ljava/time/temporal/TemporalAccessor;)Ljava/time/LocalDateTime; A: $9
    function get(field : JTemporalField) : Integer; cdecl;                      // (Ljava/time/temporal/TemporalField;)I A: $1
    function getDayOfMonth : Integer; cdecl;                                    // ()I A: $1
    function getDayOfWeek : JDayOfWeek; cdecl;                                  // ()Ljava/time/DayOfWeek; A: $1
    function getDayOfYear : Integer; cdecl;                                     // ()I A: $1
    function getHour : Integer; cdecl;                                          // ()I A: $1
    function getLong(field : JTemporalField) : Int64; cdecl;                    // (Ljava/time/temporal/TemporalField;)J A: $1
    function getMinute : Integer; cdecl;                                        // ()I A: $1
    function getMonth : JMonth; cdecl;                                          // ()Ljava/time/Month; A: $1
    function getMonthValue : Integer; cdecl;                                    // ()I A: $1
    function getNano : Integer; cdecl;                                          // ()I A: $1
    function getSecond : Integer; cdecl;                                        // ()I A: $1
    function getYear : Integer; cdecl;                                          // ()I A: $1
    function hashCode : Integer; cdecl;                                         // ()I A: $1
    function isAfter(other : JChronoLocalDateTime) : boolean; cdecl;            // (Ljava/time/chrono/ChronoLocalDateTime;)Z A: $1
    function isBefore(other : JChronoLocalDateTime) : boolean; cdecl;           // (Ljava/time/chrono/ChronoLocalDateTime;)Z A: $1
    function isEqual(other : JChronoLocalDateTime) : boolean; cdecl;            // (Ljava/time/chrono/ChronoLocalDateTime;)Z A: $1
    function isSupported(&unit : JTemporalUnit) : boolean; cdecl; overload;     // (Ljava/time/temporal/TemporalUnit;)Z A: $1
    function isSupported(field : JTemporalField) : boolean; cdecl; overload;    // (Ljava/time/temporal/TemporalField;)Z A: $1
    function minus(amountToSubtract : Int64; &unit : JTemporalUnit) : JLocalDateTime; cdecl; overload;// (JLjava/time/temporal/TemporalUnit;)Ljava/time/LocalDateTime; A: $1
    function minus(amountToSubtract : JTemporalAmount) : JLocalDateTime; cdecl; overload;// (Ljava/time/temporal/TemporalAmount;)Ljava/time/LocalDateTime; A: $1
    function minusDays(days : Int64) : JLocalDateTime; cdecl;                   // (J)Ljava/time/LocalDateTime; A: $1
    function minusHours(hours : Int64) : JLocalDateTime; cdecl;                 // (J)Ljava/time/LocalDateTime; A: $1
    function minusMinutes(minutes : Int64) : JLocalDateTime; cdecl;             // (J)Ljava/time/LocalDateTime; A: $1
    function minusMonths(months : Int64) : JLocalDateTime; cdecl;               // (J)Ljava/time/LocalDateTime; A: $1
    function minusNanos(nanos : Int64) : JLocalDateTime; cdecl;                 // (J)Ljava/time/LocalDateTime; A: $1
    function minusSeconds(seconds : Int64) : JLocalDateTime; cdecl;             // (J)Ljava/time/LocalDateTime; A: $1
    function minusWeeks(weeks : Int64) : JLocalDateTime; cdecl;                 // (J)Ljava/time/LocalDateTime; A: $1
    function minusYears(years : Int64) : JLocalDateTime; cdecl;                 // (J)Ljava/time/LocalDateTime; A: $1
    function now : JLocalDateTime; cdecl; overload;                             // ()Ljava/time/LocalDateTime; A: $9
    function now(clock : JClock) : JLocalDateTime; cdecl; overload;             // (Ljava/time/Clock;)Ljava/time/LocalDateTime; A: $9
    function now(zone : JZoneId) : JLocalDateTime; cdecl; overload;             // (Ljava/time/ZoneId;)Ljava/time/LocalDateTime; A: $9
    function ofEpochSecond(epochSecond : Int64; nanoOfSecond : Integer; offset : JZoneOffset) : JLocalDateTime; cdecl;// (JILjava/time/ZoneOffset;)Ljava/time/LocalDateTime; A: $9
    function ofInstant(instant : JInstant; zone : JZoneId) : JLocalDateTime; cdecl;// (Ljava/time/Instant;Ljava/time/ZoneId;)Ljava/time/LocalDateTime; A: $9
    function parse(text : JCharSequence) : JLocalDateTime; cdecl; overload;     // (Ljava/lang/CharSequence;)Ljava/time/LocalDateTime; A: $9
    function parse(text : JCharSequence; formatter : JDateTimeFormatter) : JLocalDateTime; cdecl; overload;// (Ljava/lang/CharSequence;Ljava/time/format/DateTimeFormatter;)Ljava/time/LocalDateTime; A: $9
    function plus(amountToAdd : Int64; &unit : JTemporalUnit) : JLocalDateTime; cdecl; overload;// (JLjava/time/temporal/TemporalUnit;)Ljava/time/LocalDateTime; A: $1
    function plus(amountToAdd : JTemporalAmount) : JLocalDateTime; cdecl; overload;// (Ljava/time/temporal/TemporalAmount;)Ljava/time/LocalDateTime; A: $1
    function plusDays(days : Int64) : JLocalDateTime; cdecl;                    // (J)Ljava/time/LocalDateTime; A: $1
    function plusHours(hours : Int64) : JLocalDateTime; cdecl;                  // (J)Ljava/time/LocalDateTime; A: $1
    function plusMinutes(minutes : Int64) : JLocalDateTime; cdecl;              // (J)Ljava/time/LocalDateTime; A: $1
    function plusMonths(months : Int64) : JLocalDateTime; cdecl;                // (J)Ljava/time/LocalDateTime; A: $1
    function plusNanos(nanos : Int64) : JLocalDateTime; cdecl;                  // (J)Ljava/time/LocalDateTime; A: $1
    function plusSeconds(seconds : Int64) : JLocalDateTime; cdecl;              // (J)Ljava/time/LocalDateTime; A: $1
    function plusWeeks(weeks : Int64) : JLocalDateTime; cdecl;                  // (J)Ljava/time/LocalDateTime; A: $1
    function plusYears(years : Int64) : JLocalDateTime; cdecl;                  // (J)Ljava/time/LocalDateTime; A: $1
    function query(query : JTemporalQuery) : JObject; cdecl;                    // (Ljava/time/temporal/TemporalQuery;)Ljava/lang/Object; A: $1
    function range(field : JTemporalField) : JValueRange; cdecl;                // (Ljava/time/temporal/TemporalField;)Ljava/time/temporal/ValueRange; A: $1
    function toLocalDate : JLocalDate; cdecl;                                   // ()Ljava/time/LocalDate; A: $1
    function toLocalTime : JLocalTime; cdecl;                                   // ()Ljava/time/LocalTime; A: $1
    function toString : JString; cdecl;                                         // ()Ljava/lang/String; A: $1
    function truncatedTo(&unit : JTemporalUnit) : JLocalDateTime; cdecl;        // (Ljava/time/temporal/TemporalUnit;)Ljava/time/LocalDateTime; A: $1
    function withDayOfMonth(dayOfMonth : Integer) : JLocalDateTime; cdecl;      // (I)Ljava/time/LocalDateTime; A: $1
    function withDayOfYear(dayOfYear : Integer) : JLocalDateTime; cdecl;        // (I)Ljava/time/LocalDateTime; A: $1
    function withHour(hour : Integer) : JLocalDateTime; cdecl;                  // (I)Ljava/time/LocalDateTime; A: $1
    function withMinute(minute : Integer) : JLocalDateTime; cdecl;              // (I)Ljava/time/LocalDateTime; A: $1
    function withMonth(month : Integer) : JLocalDateTime; cdecl;                // (I)Ljava/time/LocalDateTime; A: $1
    function withNano(nanoOfSecond : Integer) : JLocalDateTime; cdecl;          // (I)Ljava/time/LocalDateTime; A: $1
    function withSecond(second : Integer) : JLocalDateTime; cdecl;              // (I)Ljava/time/LocalDateTime; A: $1
    function withYear(year : Integer) : JLocalDateTime; cdecl;                  // (I)Ljava/time/LocalDateTime; A: $1
    property MAX : JLocalDateTime read _GetMAX;                                 // Ljava/time/LocalDateTime; A: $19
    property MIN : JLocalDateTime read _GetMIN;                                 // Ljava/time/LocalDateTime; A: $19
  end;

  [JavaSignature('java/time/LocalDateTime')]
  JLocalDateTime = interface(JObject)
    ['{11E1D4C9-8B3B-4A72-84CE-85D4CC492C38}']
    function &until(endExclusive : JTemporal; &unit : JTemporalUnit) : Int64; cdecl;// (Ljava/time/temporal/Temporal;Ljava/time/temporal/TemporalUnit;)J A: $1
    function &with(adjuster : JTemporalAdjuster) : JLocalDateTime; cdecl; overload;// (Ljava/time/temporal/TemporalAdjuster;)Ljava/time/LocalDateTime; A: $1
    function &with(field : JTemporalField; newValue : Int64) : JLocalDateTime; cdecl; overload;// (Ljava/time/temporal/TemporalField;J)Ljava/time/LocalDateTime; A: $1
    function adjustInto(temporal : JTemporal) : JTemporal; cdecl;               // (Ljava/time/temporal/Temporal;)Ljava/time/temporal/Temporal; A: $1
    function atOffset(offset : JZoneOffset) : JOffsetDateTime; cdecl;           // (Ljava/time/ZoneOffset;)Ljava/time/OffsetDateTime; A: $1
    function atZone(zone : JZoneId) : JZonedDateTime; cdecl;                    // (Ljava/time/ZoneId;)Ljava/time/ZonedDateTime; A: $1
    function compareTo(other : JChronoLocalDateTime) : Integer; cdecl;          // (Ljava/time/chrono/ChronoLocalDateTime;)I A: $1
    function equals(obj : JObject) : boolean; cdecl;                            // (Ljava/lang/Object;)Z A: $1
    function format(formatter : JDateTimeFormatter) : JString; cdecl;           // (Ljava/time/format/DateTimeFormatter;)Ljava/lang/String; A: $1
    function get(field : JTemporalField) : Integer; cdecl;                      // (Ljava/time/temporal/TemporalField;)I A: $1
    function getDayOfMonth : Integer; cdecl;                                    // ()I A: $1
    function getDayOfWeek : JDayOfWeek; cdecl;                                  // ()Ljava/time/DayOfWeek; A: $1
    function getDayOfYear : Integer; cdecl;                                     // ()I A: $1
    function getHour : Integer; cdecl;                                          // ()I A: $1
    function getLong(field : JTemporalField) : Int64; cdecl;                    // (Ljava/time/temporal/TemporalField;)J A: $1
    function getMinute : Integer; cdecl;                                        // ()I A: $1
    function getMonth : JMonth; cdecl;                                          // ()Ljava/time/Month; A: $1
    function getMonthValue : Integer; cdecl;                                    // ()I A: $1
    function getNano : Integer; cdecl;                                          // ()I A: $1
    function getSecond : Integer; cdecl;                                        // ()I A: $1
    function getYear : Integer; cdecl;                                          // ()I A: $1
    function hashCode : Integer; cdecl;                                         // ()I A: $1
    function isAfter(other : JChronoLocalDateTime) : boolean; cdecl;            // (Ljava/time/chrono/ChronoLocalDateTime;)Z A: $1
    function isBefore(other : JChronoLocalDateTime) : boolean; cdecl;           // (Ljava/time/chrono/ChronoLocalDateTime;)Z A: $1
    function isEqual(other : JChronoLocalDateTime) : boolean; cdecl;            // (Ljava/time/chrono/ChronoLocalDateTime;)Z A: $1
    function isSupported(&unit : JTemporalUnit) : boolean; cdecl; overload;     // (Ljava/time/temporal/TemporalUnit;)Z A: $1
    function isSupported(field : JTemporalField) : boolean; cdecl; overload;    // (Ljava/time/temporal/TemporalField;)Z A: $1
    function minus(amountToSubtract : Int64; &unit : JTemporalUnit) : JLocalDateTime; cdecl; overload;// (JLjava/time/temporal/TemporalUnit;)Ljava/time/LocalDateTime; A: $1
    function minus(amountToSubtract : JTemporalAmount) : JLocalDateTime; cdecl; overload;// (Ljava/time/temporal/TemporalAmount;)Ljava/time/LocalDateTime; A: $1
    function minusDays(days : Int64) : JLocalDateTime; cdecl;                   // (J)Ljava/time/LocalDateTime; A: $1
    function minusHours(hours : Int64) : JLocalDateTime; cdecl;                 // (J)Ljava/time/LocalDateTime; A: $1
    function minusMinutes(minutes : Int64) : JLocalDateTime; cdecl;             // (J)Ljava/time/LocalDateTime; A: $1
    function minusMonths(months : Int64) : JLocalDateTime; cdecl;               // (J)Ljava/time/LocalDateTime; A: $1
    function minusNanos(nanos : Int64) : JLocalDateTime; cdecl;                 // (J)Ljava/time/LocalDateTime; A: $1
    function minusSeconds(seconds : Int64) : JLocalDateTime; cdecl;             // (J)Ljava/time/LocalDateTime; A: $1
    function minusWeeks(weeks : Int64) : JLocalDateTime; cdecl;                 // (J)Ljava/time/LocalDateTime; A: $1
    function minusYears(years : Int64) : JLocalDateTime; cdecl;                 // (J)Ljava/time/LocalDateTime; A: $1
    function plus(amountToAdd : Int64; &unit : JTemporalUnit) : JLocalDateTime; cdecl; overload;// (JLjava/time/temporal/TemporalUnit;)Ljava/time/LocalDateTime; A: $1
    function plus(amountToAdd : JTemporalAmount) : JLocalDateTime; cdecl; overload;// (Ljava/time/temporal/TemporalAmount;)Ljava/time/LocalDateTime; A: $1
    function plusDays(days : Int64) : JLocalDateTime; cdecl;                    // (J)Ljava/time/LocalDateTime; A: $1
    function plusHours(hours : Int64) : JLocalDateTime; cdecl;                  // (J)Ljava/time/LocalDateTime; A: $1
    function plusMinutes(minutes : Int64) : JLocalDateTime; cdecl;              // (J)Ljava/time/LocalDateTime; A: $1
    function plusMonths(months : Int64) : JLocalDateTime; cdecl;                // (J)Ljava/time/LocalDateTime; A: $1
    function plusNanos(nanos : Int64) : JLocalDateTime; cdecl;                  // (J)Ljava/time/LocalDateTime; A: $1
    function plusSeconds(seconds : Int64) : JLocalDateTime; cdecl;              // (J)Ljava/time/LocalDateTime; A: $1
    function plusWeeks(weeks : Int64) : JLocalDateTime; cdecl;                  // (J)Ljava/time/LocalDateTime; A: $1
    function plusYears(years : Int64) : JLocalDateTime; cdecl;                  // (J)Ljava/time/LocalDateTime; A: $1
    function query(query : JTemporalQuery) : JObject; cdecl;                    // (Ljava/time/temporal/TemporalQuery;)Ljava/lang/Object; A: $1
    function range(field : JTemporalField) : JValueRange; cdecl;                // (Ljava/time/temporal/TemporalField;)Ljava/time/temporal/ValueRange; A: $1
    function toLocalDate : JLocalDate; cdecl;                                   // ()Ljava/time/LocalDate; A: $1
    function toLocalTime : JLocalTime; cdecl;                                   // ()Ljava/time/LocalTime; A: $1
    function toString : JString; cdecl;                                         // ()Ljava/lang/String; A: $1
    function truncatedTo(&unit : JTemporalUnit) : JLocalDateTime; cdecl;        // (Ljava/time/temporal/TemporalUnit;)Ljava/time/LocalDateTime; A: $1
    function withDayOfMonth(dayOfMonth : Integer) : JLocalDateTime; cdecl;      // (I)Ljava/time/LocalDateTime; A: $1
    function withDayOfYear(dayOfYear : Integer) : JLocalDateTime; cdecl;        // (I)Ljava/time/LocalDateTime; A: $1
    function withHour(hour : Integer) : JLocalDateTime; cdecl;                  // (I)Ljava/time/LocalDateTime; A: $1
    function withMinute(minute : Integer) : JLocalDateTime; cdecl;              // (I)Ljava/time/LocalDateTime; A: $1
    function withMonth(month : Integer) : JLocalDateTime; cdecl;                // (I)Ljava/time/LocalDateTime; A: $1
    function withNano(nanoOfSecond : Integer) : JLocalDateTime; cdecl;          // (I)Ljava/time/LocalDateTime; A: $1
    function withSecond(second : Integer) : JLocalDateTime; cdecl;              // (I)Ljava/time/LocalDateTime; A: $1
    function withYear(year : Integer) : JLocalDateTime; cdecl;                  // (I)Ljava/time/LocalDateTime; A: $1
  end;

  TJLocalDateTime = class(TJavaGenericImport<JLocalDateTimeClass, JLocalDateTime>)
  end;

  // Merged from: .\java.time.LocalTime.pas
  JLocalTimeClass = interface(JObjectClass)
    ['{54E534ED-D897-4848-9A8D-67469271C23F}']
    function &of(hour : Integer; minute : Integer) : JLocalTime; cdecl; overload;// (II)Ljava/time/LocalTime; A: $9
    function &of(hour : Integer; minute : Integer; second : Integer) : JLocalTime; cdecl; overload;// (III)Ljava/time/LocalTime; A: $9
    function &of(hour : Integer; minute : Integer; second : Integer; nanoOfSecond : Integer) : JLocalTime; cdecl; overload;// (IIII)Ljava/time/LocalTime; A: $9
    function &until(endExclusive : JTemporal; &unit : JTemporalUnit) : Int64; cdecl;// (Ljava/time/temporal/Temporal;Ljava/time/temporal/TemporalUnit;)J A: $1
    function &with(adjuster : JTemporalAdjuster) : JLocalTime; cdecl; overload; // (Ljava/time/temporal/TemporalAdjuster;)Ljava/time/LocalTime; A: $1
    function &with(field : JTemporalField; newValue : Int64) : JLocalTime; cdecl; overload;// (Ljava/time/temporal/TemporalField;J)Ljava/time/LocalTime; A: $1
    function _GetMAX : JLocalTime; cdecl;                                       //  A: $19
    function _GetMIDNIGHT : JLocalTime; cdecl;                                  //  A: $19
    function _GetMIN : JLocalTime; cdecl;                                       //  A: $19
    function _GetNOON : JLocalTime; cdecl;                                      //  A: $19
    function adjustInto(temporal : JTemporal) : JTemporal; cdecl;               // (Ljava/time/temporal/Temporal;)Ljava/time/temporal/Temporal; A: $1
    function atDate(date : JLocalDate) : JLocalDateTime; cdecl;                 // (Ljava/time/LocalDate;)Ljava/time/LocalDateTime; A: $1
    function atOffset(offset : JZoneOffset) : JOffsetTime; cdecl;               // (Ljava/time/ZoneOffset;)Ljava/time/OffsetTime; A: $1
    function compareTo(other : JLocalTime) : Integer; cdecl;                    // (Ljava/time/LocalTime;)I A: $1
    function equals(obj : JObject) : boolean; cdecl;                            // (Ljava/lang/Object;)Z A: $1
    function format(formatter : JDateTimeFormatter) : JString; cdecl;           // (Ljava/time/format/DateTimeFormatter;)Ljava/lang/String; A: $1
    function from(temporal : JTemporalAccessor) : JLocalTime; cdecl;            // (Ljava/time/temporal/TemporalAccessor;)Ljava/time/LocalTime; A: $9
    function get(field : JTemporalField) : Integer; cdecl;                      // (Ljava/time/temporal/TemporalField;)I A: $1
    function getHour : Integer; cdecl;                                          // ()I A: $1
    function getLong(field : JTemporalField) : Int64; cdecl;                    // (Ljava/time/temporal/TemporalField;)J A: $1
    function getMinute : Integer; cdecl;                                        // ()I A: $1
    function getNano : Integer; cdecl;                                          // ()I A: $1
    function getSecond : Integer; cdecl;                                        // ()I A: $1
    function hashCode : Integer; cdecl;                                         // ()I A: $1
    function isAfter(other : JLocalTime) : boolean; cdecl;                      // (Ljava/time/LocalTime;)Z A: $1
    function isBefore(other : JLocalTime) : boolean; cdecl;                     // (Ljava/time/LocalTime;)Z A: $1
    function isSupported(&unit : JTemporalUnit) : boolean; cdecl; overload;     // (Ljava/time/temporal/TemporalUnit;)Z A: $1
    function isSupported(field : JTemporalField) : boolean; cdecl; overload;    // (Ljava/time/temporal/TemporalField;)Z A: $1
    function minus(amountToSubtract : Int64; &unit : JTemporalUnit) : JLocalTime; cdecl; overload;// (JLjava/time/temporal/TemporalUnit;)Ljava/time/LocalTime; A: $1
    function minus(amountToSubtract : JTemporalAmount) : JLocalTime; cdecl; overload;// (Ljava/time/temporal/TemporalAmount;)Ljava/time/LocalTime; A: $1
    function minusHours(hoursToSubtract : Int64) : JLocalTime; cdecl;           // (J)Ljava/time/LocalTime; A: $1
    function minusMinutes(minutesToSubtract : Int64) : JLocalTime; cdecl;       // (J)Ljava/time/LocalTime; A: $1
    function minusNanos(nanosToSubtract : Int64) : JLocalTime; cdecl;           // (J)Ljava/time/LocalTime; A: $1
    function minusSeconds(secondsToSubtract : Int64) : JLocalTime; cdecl;       // (J)Ljava/time/LocalTime; A: $1
    function now : JLocalTime; cdecl; overload;                                 // ()Ljava/time/LocalTime; A: $9
    function now(clock : JClock) : JLocalTime; cdecl; overload;                 // (Ljava/time/Clock;)Ljava/time/LocalTime; A: $9
    function now(zone : JZoneId) : JLocalTime; cdecl; overload;                 // (Ljava/time/ZoneId;)Ljava/time/LocalTime; A: $9
    function ofNanoOfDay(nanoOfDay : Int64) : JLocalTime; cdecl;                // (J)Ljava/time/LocalTime; A: $9
    function ofSecondOfDay(secondOfDay : Int64) : JLocalTime; cdecl;            // (J)Ljava/time/LocalTime; A: $9
    function parse(text : JCharSequence) : JLocalTime; cdecl; overload;         // (Ljava/lang/CharSequence;)Ljava/time/LocalTime; A: $9
    function parse(text : JCharSequence; formatter : JDateTimeFormatter) : JLocalTime; cdecl; overload;// (Ljava/lang/CharSequence;Ljava/time/format/DateTimeFormatter;)Ljava/time/LocalTime; A: $9
    function plus(amountToAdd : Int64; &unit : JTemporalUnit) : JLocalTime; cdecl; overload;// (JLjava/time/temporal/TemporalUnit;)Ljava/time/LocalTime; A: $1
    function plus(amountToAdd : JTemporalAmount) : JLocalTime; cdecl; overload; // (Ljava/time/temporal/TemporalAmount;)Ljava/time/LocalTime; A: $1
    function plusHours(hoursToAdd : Int64) : JLocalTime; cdecl;                 // (J)Ljava/time/LocalTime; A: $1
    function plusMinutes(minutesToAdd : Int64) : JLocalTime; cdecl;             // (J)Ljava/time/LocalTime; A: $1
    function plusNanos(nanosToAdd : Int64) : JLocalTime; cdecl;                 // (J)Ljava/time/LocalTime; A: $1
    function plusSeconds(secondstoAdd : Int64) : JLocalTime; cdecl;             // (J)Ljava/time/LocalTime; A: $1
    function query(query : JTemporalQuery) : JObject; cdecl;                    // (Ljava/time/temporal/TemporalQuery;)Ljava/lang/Object; A: $1
    function range(field : JTemporalField) : JValueRange; cdecl;                // (Ljava/time/temporal/TemporalField;)Ljava/time/temporal/ValueRange; A: $1
    function toNanoOfDay : Int64; cdecl;                                        // ()J A: $1
    function toSecondOfDay : Integer; cdecl;                                    // ()I A: $1
    function toString : JString; cdecl;                                         // ()Ljava/lang/String; A: $1
    function truncatedTo(&unit : JTemporalUnit) : JLocalTime; cdecl;            // (Ljava/time/temporal/TemporalUnit;)Ljava/time/LocalTime; A: $1
    function withHour(hour : Integer) : JLocalTime; cdecl;                      // (I)Ljava/time/LocalTime; A: $1
    function withMinute(minute : Integer) : JLocalTime; cdecl;                  // (I)Ljava/time/LocalTime; A: $1
    function withNano(nanoOfSecond : Integer) : JLocalTime; cdecl;              // (I)Ljava/time/LocalTime; A: $1
    function withSecond(second : Integer) : JLocalTime; cdecl;                  // (I)Ljava/time/LocalTime; A: $1
    property MAX : JLocalTime read _GetMAX;                                     // Ljava/time/LocalTime; A: $19
    property MIDNIGHT : JLocalTime read _GetMIDNIGHT;                           // Ljava/time/LocalTime; A: $19
    property MIN : JLocalTime read _GetMIN;                                     // Ljava/time/LocalTime; A: $19
    property NOON : JLocalTime read _GetNOON;                                   // Ljava/time/LocalTime; A: $19
  end;

  [JavaSignature('java/time/LocalTime')]
  JLocalTime = interface(JObject)
    ['{AB246EF2-7906-40A0-8C66-3F4A6D153C7D}']
    function &until(endExclusive : JTemporal; &unit : JTemporalUnit) : Int64; cdecl;// (Ljava/time/temporal/Temporal;Ljava/time/temporal/TemporalUnit;)J A: $1
    function &with(adjuster : JTemporalAdjuster) : JLocalTime; cdecl; overload; // (Ljava/time/temporal/TemporalAdjuster;)Ljava/time/LocalTime; A: $1
    function &with(field : JTemporalField; newValue : Int64) : JLocalTime; cdecl; overload;// (Ljava/time/temporal/TemporalField;J)Ljava/time/LocalTime; A: $1
    function adjustInto(temporal : JTemporal) : JTemporal; cdecl;               // (Ljava/time/temporal/Temporal;)Ljava/time/temporal/Temporal; A: $1
    function atDate(date : JLocalDate) : JLocalDateTime; cdecl;                 // (Ljava/time/LocalDate;)Ljava/time/LocalDateTime; A: $1
    function atOffset(offset : JZoneOffset) : JOffsetTime; cdecl;               // (Ljava/time/ZoneOffset;)Ljava/time/OffsetTime; A: $1
    function compareTo(other : JLocalTime) : Integer; cdecl;                    // (Ljava/time/LocalTime;)I A: $1
    function equals(obj : JObject) : boolean; cdecl;                            // (Ljava/lang/Object;)Z A: $1
    function format(formatter : JDateTimeFormatter) : JString; cdecl;           // (Ljava/time/format/DateTimeFormatter;)Ljava/lang/String; A: $1
    function get(field : JTemporalField) : Integer; cdecl;                      // (Ljava/time/temporal/TemporalField;)I A: $1
    function getHour : Integer; cdecl;                                          // ()I A: $1
    function getLong(field : JTemporalField) : Int64; cdecl;                    // (Ljava/time/temporal/TemporalField;)J A: $1
    function getMinute : Integer; cdecl;                                        // ()I A: $1
    function getNano : Integer; cdecl;                                          // ()I A: $1
    function getSecond : Integer; cdecl;                                        // ()I A: $1
    function hashCode : Integer; cdecl;                                         // ()I A: $1
    function isAfter(other : JLocalTime) : boolean; cdecl;                      // (Ljava/time/LocalTime;)Z A: $1
    function isBefore(other : JLocalTime) : boolean; cdecl;                     // (Ljava/time/LocalTime;)Z A: $1
    function isSupported(&unit : JTemporalUnit) : boolean; cdecl; overload;     // (Ljava/time/temporal/TemporalUnit;)Z A: $1
    function isSupported(field : JTemporalField) : boolean; cdecl; overload;    // (Ljava/time/temporal/TemporalField;)Z A: $1
    function minus(amountToSubtract : Int64; &unit : JTemporalUnit) : JLocalTime; cdecl; overload;// (JLjava/time/temporal/TemporalUnit;)Ljava/time/LocalTime; A: $1
    function minus(amountToSubtract : JTemporalAmount) : JLocalTime; cdecl; overload;// (Ljava/time/temporal/TemporalAmount;)Ljava/time/LocalTime; A: $1
    function minusHours(hoursToSubtract : Int64) : JLocalTime; cdecl;           // (J)Ljava/time/LocalTime; A: $1
    function minusMinutes(minutesToSubtract : Int64) : JLocalTime; cdecl;       // (J)Ljava/time/LocalTime; A: $1
    function minusNanos(nanosToSubtract : Int64) : JLocalTime; cdecl;           // (J)Ljava/time/LocalTime; A: $1
    function minusSeconds(secondsToSubtract : Int64) : JLocalTime; cdecl;       // (J)Ljava/time/LocalTime; A: $1
    function plus(amountToAdd : Int64; &unit : JTemporalUnit) : JLocalTime; cdecl; overload;// (JLjava/time/temporal/TemporalUnit;)Ljava/time/LocalTime; A: $1
    function plus(amountToAdd : JTemporalAmount) : JLocalTime; cdecl; overload; // (Ljava/time/temporal/TemporalAmount;)Ljava/time/LocalTime; A: $1
    function plusHours(hoursToAdd : Int64) : JLocalTime; cdecl;                 // (J)Ljava/time/LocalTime; A: $1
    function plusMinutes(minutesToAdd : Int64) : JLocalTime; cdecl;             // (J)Ljava/time/LocalTime; A: $1
    function plusNanos(nanosToAdd : Int64) : JLocalTime; cdecl;                 // (J)Ljava/time/LocalTime; A: $1
    function plusSeconds(secondstoAdd : Int64) : JLocalTime; cdecl;             // (J)Ljava/time/LocalTime; A: $1
    function query(query : JTemporalQuery) : JObject; cdecl;                    // (Ljava/time/temporal/TemporalQuery;)Ljava/lang/Object; A: $1
    function range(field : JTemporalField) : JValueRange; cdecl;                // (Ljava/time/temporal/TemporalField;)Ljava/time/temporal/ValueRange; A: $1
    function toNanoOfDay : Int64; cdecl;                                        // ()J A: $1
    function toSecondOfDay : Integer; cdecl;                                    // ()I A: $1
    function toString : JString; cdecl;                                         // ()Ljava/lang/String; A: $1
    function truncatedTo(&unit : JTemporalUnit) : JLocalTime; cdecl;            // (Ljava/time/temporal/TemporalUnit;)Ljava/time/LocalTime; A: $1
    function withHour(hour : Integer) : JLocalTime; cdecl;                      // (I)Ljava/time/LocalTime; A: $1
    function withMinute(minute : Integer) : JLocalTime; cdecl;                  // (I)Ljava/time/LocalTime; A: $1
    function withNano(nanoOfSecond : Integer) : JLocalTime; cdecl;              // (I)Ljava/time/LocalTime; A: $1
    function withSecond(second : Integer) : JLocalTime; cdecl;                  // (I)Ljava/time/LocalTime; A: $1
  end;

  TJLocalTime = class(TJavaGenericImport<JLocalTimeClass, JLocalTime>)
  end;


  // Merged from: .\java.time.OffsetDateTime.pas
  JOffsetDateTimeClass = interface(JObjectClass)
    ['{6C6420A3-323E-462E-A4A4-463C0C4D07A7}']
    function &of(date : JLocalDate; time : JLocalTime; offset : JZoneOffset) : JOffsetDateTime; cdecl; overload;// (Ljava/time/LocalDate;Ljava/time/LocalTime;Ljava/time/ZoneOffset;)Ljava/time/OffsetDateTime; A: $9
    function &of(dateTime : JLocalDateTime; offset : JZoneOffset) : JOffsetDateTime; cdecl; overload;// (Ljava/time/LocalDateTime;Ljava/time/ZoneOffset;)Ljava/time/OffsetDateTime; A: $9
    function &of(year : Integer; month : Integer; dayOfMonth : Integer; hour : Integer; minute : Integer; second : Integer; nanoOfSecond : Integer; offset : JZoneOffset) : JOffsetDateTime; cdecl; overload;// (IIIIIIILjava/time/ZoneOffset;)Ljava/time/OffsetDateTime; A: $9
    function &until(endExclusive : JTemporal; &unit : JTemporalUnit) : Int64; cdecl;// (Ljava/time/temporal/Temporal;Ljava/time/temporal/TemporalUnit;)J A: $1
    function &with(adjuster : JTemporalAdjuster) : JOffsetDateTime; cdecl; overload;// (Ljava/time/temporal/TemporalAdjuster;)Ljava/time/OffsetDateTime; A: $1
    function &with(field : JTemporalField; newValue : Int64) : JOffsetDateTime; cdecl; overload;// (Ljava/time/temporal/TemporalField;J)Ljava/time/OffsetDateTime; A: $1
    function _GetMAX : JOffsetDateTime; cdecl;                                  //  A: $19
    function _GetMIN : JOffsetDateTime; cdecl;                                  //  A: $19
    function adjustInto(temporal : JTemporal) : JTemporal; cdecl;               // (Ljava/time/temporal/Temporal;)Ljava/time/temporal/Temporal; A: $1
    function atZoneSameInstant(zone : JZoneId) : JZonedDateTime; cdecl;         // (Ljava/time/ZoneId;)Ljava/time/ZonedDateTime; A: $1
    function atZoneSimilarLocal(zone : JZoneId) : JZonedDateTime; cdecl;        // (Ljava/time/ZoneId;)Ljava/time/ZonedDateTime; A: $1
    function compareTo(other : JOffsetDateTime) : Integer; cdecl;               // (Ljava/time/OffsetDateTime;)I A: $1
    function equals(obj : JObject) : boolean; cdecl;                            // (Ljava/lang/Object;)Z A: $1
    function format(formatter : JDateTimeFormatter) : JString; cdecl;           // (Ljava/time/format/DateTimeFormatter;)Ljava/lang/String; A: $1
    function from(temporal : JTemporalAccessor) : JOffsetDateTime; cdecl;       // (Ljava/time/temporal/TemporalAccessor;)Ljava/time/OffsetDateTime; A: $9
    function get(field : JTemporalField) : Integer; cdecl;                      // (Ljava/time/temporal/TemporalField;)I A: $1
    function getDayOfMonth : Integer; cdecl;                                    // ()I A: $1
    function getDayOfWeek : JDayOfWeek; cdecl;                                  // ()Ljava/time/DayOfWeek; A: $1
    function getDayOfYear : Integer; cdecl;                                     // ()I A: $1
    function getHour : Integer; cdecl;                                          // ()I A: $1
    function getLong(field : JTemporalField) : Int64; cdecl;                    // (Ljava/time/temporal/TemporalField;)J A: $1
    function getMinute : Integer; cdecl;                                        // ()I A: $1
    function getMonth : JMonth; cdecl;                                          // ()Ljava/time/Month; A: $1
    function getMonthValue : Integer; cdecl;                                    // ()I A: $1
    function getNano : Integer; cdecl;                                          // ()I A: $1
    function getOffset : JZoneOffset; cdecl;                                    // ()Ljava/time/ZoneOffset; A: $1
    function getSecond : Integer; cdecl;                                        // ()I A: $1
    function getYear : Integer; cdecl;                                          // ()I A: $1
    function hashCode : Integer; cdecl;                                         // ()I A: $1
    function isAfter(other : JOffsetDateTime) : boolean; cdecl;                 // (Ljava/time/OffsetDateTime;)Z A: $1
    function isBefore(other : JOffsetDateTime) : boolean; cdecl;                // (Ljava/time/OffsetDateTime;)Z A: $1
    function isEqual(other : JOffsetDateTime) : boolean; cdecl;                 // (Ljava/time/OffsetDateTime;)Z A: $1
    function isSupported(&unit : JTemporalUnit) : boolean; cdecl; overload;     // (Ljava/time/temporal/TemporalUnit;)Z A: $1
    function isSupported(field : JTemporalField) : boolean; cdecl; overload;    // (Ljava/time/temporal/TemporalField;)Z A: $1
    function minus(amountToSubtract : Int64; &unit : JTemporalUnit) : JOffsetDateTime; cdecl; overload;// (JLjava/time/temporal/TemporalUnit;)Ljava/time/OffsetDateTime; A: $1
    function minus(amountToSubtract : JTemporalAmount) : JOffsetDateTime; cdecl; overload;// (Ljava/time/temporal/TemporalAmount;)Ljava/time/OffsetDateTime; A: $1
    function minusDays(days : Int64) : JOffsetDateTime; cdecl;                  // (J)Ljava/time/OffsetDateTime; A: $1
    function minusHours(hours : Int64) : JOffsetDateTime; cdecl;                // (J)Ljava/time/OffsetDateTime; A: $1
    function minusMinutes(minutes : Int64) : JOffsetDateTime; cdecl;            // (J)Ljava/time/OffsetDateTime; A: $1
    function minusMonths(months : Int64) : JOffsetDateTime; cdecl;              // (J)Ljava/time/OffsetDateTime; A: $1
    function minusNanos(nanos : Int64) : JOffsetDateTime; cdecl;                // (J)Ljava/time/OffsetDateTime; A: $1
    function minusSeconds(seconds : Int64) : JOffsetDateTime; cdecl;            // (J)Ljava/time/OffsetDateTime; A: $1
    function minusWeeks(weeks : Int64) : JOffsetDateTime; cdecl;                // (J)Ljava/time/OffsetDateTime; A: $1
    function minusYears(years : Int64) : JOffsetDateTime; cdecl;                // (J)Ljava/time/OffsetDateTime; A: $1
    function now : JOffsetDateTime; cdecl; overload;                            // ()Ljava/time/OffsetDateTime; A: $9
    function now(clock : JClock) : JOffsetDateTime; cdecl; overload;            // (Ljava/time/Clock;)Ljava/time/OffsetDateTime; A: $9
    function now(zone : JZoneId) : JOffsetDateTime; cdecl; overload;            // (Ljava/time/ZoneId;)Ljava/time/OffsetDateTime; A: $9
    function ofInstant(instant : JInstant; zone : JZoneId) : JOffsetDateTime; cdecl;// (Ljava/time/Instant;Ljava/time/ZoneId;)Ljava/time/OffsetDateTime; A: $9
    function parse(text : JCharSequence) : JOffsetDateTime; cdecl; overload;    // (Ljava/lang/CharSequence;)Ljava/time/OffsetDateTime; A: $9
    function parse(text : JCharSequence; formatter : JDateTimeFormatter) : JOffsetDateTime; cdecl; overload;// (Ljava/lang/CharSequence;Ljava/time/format/DateTimeFormatter;)Ljava/time/OffsetDateTime; A: $9
    function plus(amountToAdd : Int64; &unit : JTemporalUnit) : JOffsetDateTime; cdecl; overload;// (JLjava/time/temporal/TemporalUnit;)Ljava/time/OffsetDateTime; A: $1
    function plus(amountToAdd : JTemporalAmount) : JOffsetDateTime; cdecl; overload;// (Ljava/time/temporal/TemporalAmount;)Ljava/time/OffsetDateTime; A: $1
    function plusDays(days : Int64) : JOffsetDateTime; cdecl;                   // (J)Ljava/time/OffsetDateTime; A: $1
    function plusHours(hours : Int64) : JOffsetDateTime; cdecl;                 // (J)Ljava/time/OffsetDateTime; A: $1
    function plusMinutes(minutes : Int64) : JOffsetDateTime; cdecl;             // (J)Ljava/time/OffsetDateTime; A: $1
    function plusMonths(months : Int64) : JOffsetDateTime; cdecl;               // (J)Ljava/time/OffsetDateTime; A: $1
    function plusNanos(nanos : Int64) : JOffsetDateTime; cdecl;                 // (J)Ljava/time/OffsetDateTime; A: $1
    function plusSeconds(seconds : Int64) : JOffsetDateTime; cdecl;             // (J)Ljava/time/OffsetDateTime; A: $1
    function plusWeeks(weeks : Int64) : JOffsetDateTime; cdecl;                 // (J)Ljava/time/OffsetDateTime; A: $1
    function plusYears(years : Int64) : JOffsetDateTime; cdecl;                 // (J)Ljava/time/OffsetDateTime; A: $1
    function query(query : JTemporalQuery) : JObject; cdecl;                    // (Ljava/time/temporal/TemporalQuery;)Ljava/lang/Object; A: $1
    function range(field : JTemporalField) : JValueRange; cdecl;                // (Ljava/time/temporal/TemporalField;)Ljava/time/temporal/ValueRange; A: $1
    function timeLineOrder : JComparator; cdecl;                                // ()Ljava/util/Comparator; A: $9
    function toEpochSecond : Int64; cdecl;                                      // ()J A: $1
    function toInstant : JInstant; cdecl;                                       // ()Ljava/time/Instant; A: $1
    function toLocalDate : JLocalDate; cdecl;                                   // ()Ljava/time/LocalDate; A: $1
    function toLocalDateTime : JLocalDateTime; cdecl;                           // ()Ljava/time/LocalDateTime; A: $1
    function toLocalTime : JLocalTime; cdecl;                                   // ()Ljava/time/LocalTime; A: $1
    function toOffsetTime : JOffsetTime; cdecl;                                 // ()Ljava/time/OffsetTime; A: $1
    function toString : JString; cdecl;                                         // ()Ljava/lang/String; A: $1
    function toZonedDateTime : JZonedDateTime; cdecl;                           // ()Ljava/time/ZonedDateTime; A: $1
    function truncatedTo(&unit : JTemporalUnit) : JOffsetDateTime; cdecl;       // (Ljava/time/temporal/TemporalUnit;)Ljava/time/OffsetDateTime; A: $1
    function withDayOfMonth(dayOfMonth : Integer) : JOffsetDateTime; cdecl;     // (I)Ljava/time/OffsetDateTime; A: $1
    function withDayOfYear(dayOfYear : Integer) : JOffsetDateTime; cdecl;       // (I)Ljava/time/OffsetDateTime; A: $1
    function withHour(hour : Integer) : JOffsetDateTime; cdecl;                 // (I)Ljava/time/OffsetDateTime; A: $1
    function withMinute(minute : Integer) : JOffsetDateTime; cdecl;             // (I)Ljava/time/OffsetDateTime; A: $1
    function withMonth(month : Integer) : JOffsetDateTime; cdecl;               // (I)Ljava/time/OffsetDateTime; A: $1
    function withNano(nanoOfSecond : Integer) : JOffsetDateTime; cdecl;         // (I)Ljava/time/OffsetDateTime; A: $1
    function withOffsetSameInstant(offset : JZoneOffset) : JOffsetDateTime; cdecl;// (Ljava/time/ZoneOffset;)Ljava/time/OffsetDateTime; A: $1
    function withOffsetSameLocal(offset : JZoneOffset) : JOffsetDateTime; cdecl;// (Ljava/time/ZoneOffset;)Ljava/time/OffsetDateTime; A: $1
    function withSecond(second : Integer) : JOffsetDateTime; cdecl;             // (I)Ljava/time/OffsetDateTime; A: $1
    function withYear(year : Integer) : JOffsetDateTime; cdecl;                 // (I)Ljava/time/OffsetDateTime; A: $1
    property MAX : JOffsetDateTime read _GetMAX;                                // Ljava/time/OffsetDateTime; A: $19
    property MIN : JOffsetDateTime read _GetMIN;                                // Ljava/time/OffsetDateTime; A: $19
  end;

  [JavaSignature('java/time/OffsetDateTime')]
  JOffsetDateTime = interface(JObject)
    ['{0615C948-90E6-471D-9809-1941FFB2337D}']
    function &until(endExclusive : JTemporal; &unit : JTemporalUnit) : Int64; cdecl;// (Ljava/time/temporal/Temporal;Ljava/time/temporal/TemporalUnit;)J A: $1
    function &with(adjuster : JTemporalAdjuster) : JOffsetDateTime; cdecl; overload;// (Ljava/time/temporal/TemporalAdjuster;)Ljava/time/OffsetDateTime; A: $1
    function &with(field : JTemporalField; newValue : Int64) : JOffsetDateTime; cdecl; overload;// (Ljava/time/temporal/TemporalField;J)Ljava/time/OffsetDateTime; A: $1
    function adjustInto(temporal : JTemporal) : JTemporal; cdecl;               // (Ljava/time/temporal/Temporal;)Ljava/time/temporal/Temporal; A: $1
    function atZoneSameInstant(zone : JZoneId) : JZonedDateTime; cdecl;         // (Ljava/time/ZoneId;)Ljava/time/ZonedDateTime; A: $1
    function atZoneSimilarLocal(zone : JZoneId) : JZonedDateTime; cdecl;        // (Ljava/time/ZoneId;)Ljava/time/ZonedDateTime; A: $1
    function compareTo(other : JOffsetDateTime) : Integer; cdecl;               // (Ljava/time/OffsetDateTime;)I A: $1
    function equals(obj : JObject) : boolean; cdecl;                            // (Ljava/lang/Object;)Z A: $1
    function format(formatter : JDateTimeFormatter) : JString; cdecl;           // (Ljava/time/format/DateTimeFormatter;)Ljava/lang/String; A: $1
    function get(field : JTemporalField) : Integer; cdecl;                      // (Ljava/time/temporal/TemporalField;)I A: $1
    function getDayOfMonth : Integer; cdecl;                                    // ()I A: $1
    function getDayOfWeek : JDayOfWeek; cdecl;                                  // ()Ljava/time/DayOfWeek; A: $1
    function getDayOfYear : Integer; cdecl;                                     // ()I A: $1
    function getHour : Integer; cdecl;                                          // ()I A: $1
    function getLong(field : JTemporalField) : Int64; cdecl;                    // (Ljava/time/temporal/TemporalField;)J A: $1
    function getMinute : Integer; cdecl;                                        // ()I A: $1
    function getMonth : JMonth; cdecl;                                          // ()Ljava/time/Month; A: $1
    function getMonthValue : Integer; cdecl;                                    // ()I A: $1
    function getNano : Integer; cdecl;                                          // ()I A: $1
    function getOffset : JZoneOffset; cdecl;                                    // ()Ljava/time/ZoneOffset; A: $1
    function getSecond : Integer; cdecl;                                        // ()I A: $1
    function getYear : Integer; cdecl;                                          // ()I A: $1
    function hashCode : Integer; cdecl;                                         // ()I A: $1
    function isAfter(other : JOffsetDateTime) : boolean; cdecl;                 // (Ljava/time/OffsetDateTime;)Z A: $1
    function isBefore(other : JOffsetDateTime) : boolean; cdecl;                // (Ljava/time/OffsetDateTime;)Z A: $1
    function isEqual(other : JOffsetDateTime) : boolean; cdecl;                 // (Ljava/time/OffsetDateTime;)Z A: $1
    function isSupported(&unit : JTemporalUnit) : boolean; cdecl; overload;     // (Ljava/time/temporal/TemporalUnit;)Z A: $1
    function isSupported(field : JTemporalField) : boolean; cdecl; overload;    // (Ljava/time/temporal/TemporalField;)Z A: $1
    function minus(amountToSubtract : Int64; &unit : JTemporalUnit) : JOffsetDateTime; cdecl; overload;// (JLjava/time/temporal/TemporalUnit;)Ljava/time/OffsetDateTime; A: $1
    function minus(amountToSubtract : JTemporalAmount) : JOffsetDateTime; cdecl; overload;// (Ljava/time/temporal/TemporalAmount;)Ljava/time/OffsetDateTime; A: $1
    function minusDays(days : Int64) : JOffsetDateTime; cdecl;                  // (J)Ljava/time/OffsetDateTime; A: $1
    function minusHours(hours : Int64) : JOffsetDateTime; cdecl;                // (J)Ljava/time/OffsetDateTime; A: $1
    function minusMinutes(minutes : Int64) : JOffsetDateTime; cdecl;            // (J)Ljava/time/OffsetDateTime; A: $1
    function minusMonths(months : Int64) : JOffsetDateTime; cdecl;              // (J)Ljava/time/OffsetDateTime; A: $1
    function minusNanos(nanos : Int64) : JOffsetDateTime; cdecl;                // (J)Ljava/time/OffsetDateTime; A: $1
    function minusSeconds(seconds : Int64) : JOffsetDateTime; cdecl;            // (J)Ljava/time/OffsetDateTime; A: $1
    function minusWeeks(weeks : Int64) : JOffsetDateTime; cdecl;                // (J)Ljava/time/OffsetDateTime; A: $1
    function minusYears(years : Int64) : JOffsetDateTime; cdecl;                // (J)Ljava/time/OffsetDateTime; A: $1
    function plus(amountToAdd : Int64; &unit : JTemporalUnit) : JOffsetDateTime; cdecl; overload;// (JLjava/time/temporal/TemporalUnit;)Ljava/time/OffsetDateTime; A: $1
    function plus(amountToAdd : JTemporalAmount) : JOffsetDateTime; cdecl; overload;// (Ljava/time/temporal/TemporalAmount;)Ljava/time/OffsetDateTime; A: $1
    function plusDays(days : Int64) : JOffsetDateTime; cdecl;                   // (J)Ljava/time/OffsetDateTime; A: $1
    function plusHours(hours : Int64) : JOffsetDateTime; cdecl;                 // (J)Ljava/time/OffsetDateTime; A: $1
    function plusMinutes(minutes : Int64) : JOffsetDateTime; cdecl;             // (J)Ljava/time/OffsetDateTime; A: $1
    function plusMonths(months : Int64) : JOffsetDateTime; cdecl;               // (J)Ljava/time/OffsetDateTime; A: $1
    function plusNanos(nanos : Int64) : JOffsetDateTime; cdecl;                 // (J)Ljava/time/OffsetDateTime; A: $1
    function plusSeconds(seconds : Int64) : JOffsetDateTime; cdecl;             // (J)Ljava/time/OffsetDateTime; A: $1
    function plusWeeks(weeks : Int64) : JOffsetDateTime; cdecl;                 // (J)Ljava/time/OffsetDateTime; A: $1
    function plusYears(years : Int64) : JOffsetDateTime; cdecl;                 // (J)Ljava/time/OffsetDateTime; A: $1
    function query(query : JTemporalQuery) : JObject; cdecl;                    // (Ljava/time/temporal/TemporalQuery;)Ljava/lang/Object; A: $1
    function range(field : JTemporalField) : JValueRange; cdecl;                // (Ljava/time/temporal/TemporalField;)Ljava/time/temporal/ValueRange; A: $1
    function toEpochSecond : Int64; cdecl;                                      // ()J A: $1
    function toInstant : JInstant; cdecl;                                       // ()Ljava/time/Instant; A: $1
    function toLocalDate : JLocalDate; cdecl;                                   // ()Ljava/time/LocalDate; A: $1
    function toLocalDateTime : JLocalDateTime; cdecl;                           // ()Ljava/time/LocalDateTime; A: $1
    function toLocalTime : JLocalTime; cdecl;                                   // ()Ljava/time/LocalTime; A: $1
    function toOffsetTime : JOffsetTime; cdecl;                                 // ()Ljava/time/OffsetTime; A: $1
    function toString : JString; cdecl;                                         // ()Ljava/lang/String; A: $1
    function toZonedDateTime : JZonedDateTime; cdecl;                           // ()Ljava/time/ZonedDateTime; A: $1
    function truncatedTo(&unit : JTemporalUnit) : JOffsetDateTime; cdecl;       // (Ljava/time/temporal/TemporalUnit;)Ljava/time/OffsetDateTime; A: $1
    function withDayOfMonth(dayOfMonth : Integer) : JOffsetDateTime; cdecl;     // (I)Ljava/time/OffsetDateTime; A: $1
    function withDayOfYear(dayOfYear : Integer) : JOffsetDateTime; cdecl;       // (I)Ljava/time/OffsetDateTime; A: $1
    function withHour(hour : Integer) : JOffsetDateTime; cdecl;                 // (I)Ljava/time/OffsetDateTime; A: $1
    function withMinute(minute : Integer) : JOffsetDateTime; cdecl;             // (I)Ljava/time/OffsetDateTime; A: $1
    function withMonth(month : Integer) : JOffsetDateTime; cdecl;               // (I)Ljava/time/OffsetDateTime; A: $1
    function withNano(nanoOfSecond : Integer) : JOffsetDateTime; cdecl;         // (I)Ljava/time/OffsetDateTime; A: $1
    function withOffsetSameInstant(offset : JZoneOffset) : JOffsetDateTime; cdecl;// (Ljava/time/ZoneOffset;)Ljava/time/OffsetDateTime; A: $1
    function withOffsetSameLocal(offset : JZoneOffset) : JOffsetDateTime; cdecl;// (Ljava/time/ZoneOffset;)Ljava/time/OffsetDateTime; A: $1
    function withSecond(second : Integer) : JOffsetDateTime; cdecl;             // (I)Ljava/time/OffsetDateTime; A: $1
    function withYear(year : Integer) : JOffsetDateTime; cdecl;                 // (I)Ljava/time/OffsetDateTime; A: $1
  end;

  TJOffsetDateTime = class(TJavaGenericImport<JOffsetDateTimeClass, JOffsetDateTime>)
  end;


  // Merged from: .\java.time.ZonedDateTime.pas
  JZonedDateTimeClass = interface(JObjectClass)
    ['{C24A8F91-2EBF-4918-B1A4-51A92BBB0DF2}']
    function &of(date : JLocalDate; time : JLocalTime; zone : JZoneId) : JZonedDateTime; cdecl; overload;// (Ljava/time/LocalDate;Ljava/time/LocalTime;Ljava/time/ZoneId;)Ljava/time/ZonedDateTime; A: $9
    function &of(localDateTime : JLocalDateTime; zone : JZoneId) : JZonedDateTime; cdecl; overload;// (Ljava/time/LocalDateTime;Ljava/time/ZoneId;)Ljava/time/ZonedDateTime; A: $9
    function &of(year : Integer; month : Integer; dayOfMonth : Integer; hour : Integer; minute : Integer; second : Integer; nanoOfSecond : Integer; zone : JZoneId) : JZonedDateTime; cdecl; overload;// (IIIIIIILjava/time/ZoneId;)Ljava/time/ZonedDateTime; A: $9
    function &until(endExclusive : JTemporal; &unit : JTemporalUnit) : Int64; cdecl;// (Ljava/time/temporal/Temporal;Ljava/time/temporal/TemporalUnit;)J A: $1
    function &with(adjuster : JTemporalAdjuster) : JZonedDateTime; cdecl; overload;// (Ljava/time/temporal/TemporalAdjuster;)Ljava/time/ZonedDateTime; A: $1
    function &with(field : JTemporalField; newValue : Int64) : JZonedDateTime; cdecl; overload;// (Ljava/time/temporal/TemporalField;J)Ljava/time/ZonedDateTime; A: $1
    function equals(obj : JObject) : boolean; cdecl;                            // (Ljava/lang/Object;)Z A: $1
    function format(formatter : JDateTimeFormatter) : JString; cdecl;           // (Ljava/time/format/DateTimeFormatter;)Ljava/lang/String; A: $1
    function from(temporal : JTemporalAccessor) : JZonedDateTime; cdecl;        // (Ljava/time/temporal/TemporalAccessor;)Ljava/time/ZonedDateTime; A: $9
    function get(field : JTemporalField) : Integer; cdecl;                      // (Ljava/time/temporal/TemporalField;)I A: $1
    function getDayOfMonth : Integer; cdecl;                                    // ()I A: $1
    function getDayOfWeek : JDayOfWeek; cdecl;                                  // ()Ljava/time/DayOfWeek; A: $1
    function getDayOfYear : Integer; cdecl;                                     // ()I A: $1
    function getHour : Integer; cdecl;                                          // ()I A: $1
    function getLong(field : JTemporalField) : Int64; cdecl;                    // (Ljava/time/temporal/TemporalField;)J A: $1
    function getMinute : Integer; cdecl;                                        // ()I A: $1
    function getMonth : JMonth; cdecl;                                          // ()Ljava/time/Month; A: $1
    function getMonthValue : Integer; cdecl;                                    // ()I A: $1
    function getNano : Integer; cdecl;                                          // ()I A: $1
    function getOffset : JZoneOffset; cdecl;                                    // ()Ljava/time/ZoneOffset; A: $1
    function getSecond : Integer; cdecl;                                        // ()I A: $1
    function getYear : Integer; cdecl;                                          // ()I A: $1
    function getZone : JZoneId; cdecl;                                          // ()Ljava/time/ZoneId; A: $1
    function hashCode : Integer; cdecl;                                         // ()I A: $1
    function isSupported(&unit : JTemporalUnit) : boolean; cdecl; overload;     // (Ljava/time/temporal/TemporalUnit;)Z A: $1
    function isSupported(field : JTemporalField) : boolean; cdecl; overload;    // (Ljava/time/temporal/TemporalField;)Z A: $1
    function minus(amountToSubtract : Int64; &unit : JTemporalUnit) : JZonedDateTime; cdecl; overload;// (JLjava/time/temporal/TemporalUnit;)Ljava/time/ZonedDateTime; A: $1
    function minus(amountToSubtract : JTemporalAmount) : JZonedDateTime; cdecl; overload;// (Ljava/time/temporal/TemporalAmount;)Ljava/time/ZonedDateTime; A: $1
    function minusDays(days : Int64) : JZonedDateTime; cdecl;                   // (J)Ljava/time/ZonedDateTime; A: $1
    function minusHours(hours : Int64) : JZonedDateTime; cdecl;                 // (J)Ljava/time/ZonedDateTime; A: $1
    function minusMinutes(minutes : Int64) : JZonedDateTime; cdecl;             // (J)Ljava/time/ZonedDateTime; A: $1
    function minusMonths(months : Int64) : JZonedDateTime; cdecl;               // (J)Ljava/time/ZonedDateTime; A: $1
    function minusNanos(nanos : Int64) : JZonedDateTime; cdecl;                 // (J)Ljava/time/ZonedDateTime; A: $1
    function minusSeconds(seconds : Int64) : JZonedDateTime; cdecl;             // (J)Ljava/time/ZonedDateTime; A: $1
    function minusWeeks(weeks : Int64) : JZonedDateTime; cdecl;                 // (J)Ljava/time/ZonedDateTime; A: $1
    function minusYears(years : Int64) : JZonedDateTime; cdecl;                 // (J)Ljava/time/ZonedDateTime; A: $1
    function now : JZonedDateTime; cdecl; overload;                             // ()Ljava/time/ZonedDateTime; A: $9
    function now(clock : JClock) : JZonedDateTime; cdecl; overload;             // (Ljava/time/Clock;)Ljava/time/ZonedDateTime; A: $9
    function now(zone : JZoneId) : JZonedDateTime; cdecl; overload;             // (Ljava/time/ZoneId;)Ljava/time/ZonedDateTime; A: $9
    function ofInstant(instant : JInstant; zone : JZoneId) : JZonedDateTime; cdecl; overload;// (Ljava/time/Instant;Ljava/time/ZoneId;)Ljava/time/ZonedDateTime; A: $9
    function ofInstant(localDateTime : JLocalDateTime; offset : JZoneOffset; zone : JZoneId) : JZonedDateTime; cdecl; overload;// (Ljava/time/LocalDateTime;Ljava/time/ZoneOffset;Ljava/time/ZoneId;)Ljava/time/ZonedDateTime; A: $9
    function ofLocal(localDateTime : JLocalDateTime; zone : JZoneId; preferredOffset : JZoneOffset) : JZonedDateTime; cdecl;// (Ljava/time/LocalDateTime;Ljava/time/ZoneId;Ljava/time/ZoneOffset;)Ljava/time/ZonedDateTime; A: $9
    function ofStrict(localDateTime : JLocalDateTime; offset : JZoneOffset; zone : JZoneId) : JZonedDateTime; cdecl;// (Ljava/time/LocalDateTime;Ljava/time/ZoneOffset;Ljava/time/ZoneId;)Ljava/time/ZonedDateTime; A: $9
    function parse(text : JCharSequence) : JZonedDateTime; cdecl; overload;     // (Ljava/lang/CharSequence;)Ljava/time/ZonedDateTime; A: $9
    function parse(text : JCharSequence; formatter : JDateTimeFormatter) : JZonedDateTime; cdecl; overload;// (Ljava/lang/CharSequence;Ljava/time/format/DateTimeFormatter;)Ljava/time/ZonedDateTime; A: $9
    function plus(amountToAdd : Int64; &unit : JTemporalUnit) : JZonedDateTime; cdecl; overload;// (JLjava/time/temporal/TemporalUnit;)Ljava/time/ZonedDateTime; A: $1
    function plus(amountToAdd : JTemporalAmount) : JZonedDateTime; cdecl; overload;// (Ljava/time/temporal/TemporalAmount;)Ljava/time/ZonedDateTime; A: $1
    function plusDays(days : Int64) : JZonedDateTime; cdecl;                    // (J)Ljava/time/ZonedDateTime; A: $1
    function plusHours(hours : Int64) : JZonedDateTime; cdecl;                  // (J)Ljava/time/ZonedDateTime; A: $1
    function plusMinutes(minutes : Int64) : JZonedDateTime; cdecl;              // (J)Ljava/time/ZonedDateTime; A: $1
    function plusMonths(months : Int64) : JZonedDateTime; cdecl;                // (J)Ljava/time/ZonedDateTime; A: $1
    function plusNanos(nanos : Int64) : JZonedDateTime; cdecl;                  // (J)Ljava/time/ZonedDateTime; A: $1
    function plusSeconds(seconds : Int64) : JZonedDateTime; cdecl;              // (J)Ljava/time/ZonedDateTime; A: $1
    function plusWeeks(weeks : Int64) : JZonedDateTime; cdecl;                  // (J)Ljava/time/ZonedDateTime; A: $1
    function plusYears(years : Int64) : JZonedDateTime; cdecl;                  // (J)Ljava/time/ZonedDateTime; A: $1
    function query(query : JTemporalQuery) : JObject; cdecl;                    // (Ljava/time/temporal/TemporalQuery;)Ljava/lang/Object; A: $1
    function range(field : JTemporalField) : JValueRange; cdecl;                // (Ljava/time/temporal/TemporalField;)Ljava/time/temporal/ValueRange; A: $1
    function toLocalDate : JLocalDate; cdecl;                                   // ()Ljava/time/LocalDate; A: $1
    function toLocalDateTime : JLocalDateTime; cdecl;                           // ()Ljava/time/LocalDateTime; A: $1
    function toLocalTime : JLocalTime; cdecl;                                   // ()Ljava/time/LocalTime; A: $1
    function toOffsetDateTime : JOffsetDateTime; cdecl;                         // ()Ljava/time/OffsetDateTime; A: $1
    function toString : JString; cdecl;                                         // ()Ljava/lang/String; A: $1
    function truncatedTo(&unit : JTemporalUnit) : JZonedDateTime; cdecl;        // (Ljava/time/temporal/TemporalUnit;)Ljava/time/ZonedDateTime; A: $1
    function withDayOfMonth(dayOfMonth : Integer) : JZonedDateTime; cdecl;      // (I)Ljava/time/ZonedDateTime; A: $1
    function withDayOfYear(dayOfYear : Integer) : JZonedDateTime; cdecl;        // (I)Ljava/time/ZonedDateTime; A: $1
    function withEarlierOffsetAtOverlap : JZonedDateTime; cdecl;                // ()Ljava/time/ZonedDateTime; A: $1
    function withFixedOffsetZone : JZonedDateTime; cdecl;                       // ()Ljava/time/ZonedDateTime; A: $1
    function withHour(hour : Integer) : JZonedDateTime; cdecl;                  // (I)Ljava/time/ZonedDateTime; A: $1
    function withLaterOffsetAtOverlap : JZonedDateTime; cdecl;                  // ()Ljava/time/ZonedDateTime; A: $1
    function withMinute(minute : Integer) : JZonedDateTime; cdecl;              // (I)Ljava/time/ZonedDateTime; A: $1
    function withMonth(month : Integer) : JZonedDateTime; cdecl;                // (I)Ljava/time/ZonedDateTime; A: $1
    function withNano(nanoOfSecond : Integer) : JZonedDateTime; cdecl;          // (I)Ljava/time/ZonedDateTime; A: $1
    function withSecond(second : Integer) : JZonedDateTime; cdecl;              // (I)Ljava/time/ZonedDateTime; A: $1
    function withYear(year : Integer) : JZonedDateTime; cdecl;                  // (I)Ljava/time/ZonedDateTime; A: $1
    function withZoneSameInstant(zone : JZoneId) : JZonedDateTime; cdecl;       // (Ljava/time/ZoneId;)Ljava/time/ZonedDateTime; A: $1
    function withZoneSameLocal(zone : JZoneId) : JZonedDateTime; cdecl;         // (Ljava/time/ZoneId;)Ljava/time/ZonedDateTime; A: $1
  end;

  [JavaSignature('java/time/ZonedDateTime')]
  JZonedDateTime = interface(JObject)
    ['{4930C4C3-7E33-48CF-B691-D5F98AA8AB4A}']
    function &until(endExclusive : JTemporal; &unit : JTemporalUnit) : Int64; cdecl;// (Ljava/time/temporal/Temporal;Ljava/time/temporal/TemporalUnit;)J A: $1
    function &with(adjuster : JTemporalAdjuster) : JZonedDateTime; cdecl; overload;// (Ljava/time/temporal/TemporalAdjuster;)Ljava/time/ZonedDateTime; A: $1
    function &with(field : JTemporalField; newValue : Int64) : JZonedDateTime; cdecl; overload;// (Ljava/time/temporal/TemporalField;J)Ljava/time/ZonedDateTime; A: $1
    function equals(obj : JObject) : boolean; cdecl;                            // (Ljava/lang/Object;)Z A: $1
    function format(formatter : JDateTimeFormatter) : JString; cdecl;           // (Ljava/time/format/DateTimeFormatter;)Ljava/lang/String; A: $1
    function get(field : JTemporalField) : Integer; cdecl;                      // (Ljava/time/temporal/TemporalField;)I A: $1
    function getDayOfMonth : Integer; cdecl;                                    // ()I A: $1
    function getDayOfWeek : JDayOfWeek; cdecl;                                  // ()Ljava/time/DayOfWeek; A: $1
    function getDayOfYear : Integer; cdecl;                                     // ()I A: $1
    function getHour : Integer; cdecl;                                          // ()I A: $1
    function getLong(field : JTemporalField) : Int64; cdecl;                    // (Ljava/time/temporal/TemporalField;)J A: $1
    function getMinute : Integer; cdecl;                                        // ()I A: $1
    function getMonth : JMonth; cdecl;                                          // ()Ljava/time/Month; A: $1
    function getMonthValue : Integer; cdecl;                                    // ()I A: $1
    function getNano : Integer; cdecl;                                          // ()I A: $1
    function getOffset : JZoneOffset; cdecl;                                    // ()Ljava/time/ZoneOffset; A: $1
    function getSecond : Integer; cdecl;                                        // ()I A: $1
    function getYear : Integer; cdecl;                                          // ()I A: $1
    function getZone : JZoneId; cdecl;                                          // ()Ljava/time/ZoneId; A: $1
    function hashCode : Integer; cdecl;                                         // ()I A: $1
    function isSupported(&unit : JTemporalUnit) : boolean; cdecl; overload;     // (Ljava/time/temporal/TemporalUnit;)Z A: $1
    function isSupported(field : JTemporalField) : boolean; cdecl; overload;    // (Ljava/time/temporal/TemporalField;)Z A: $1
    function minus(amountToSubtract : Int64; &unit : JTemporalUnit) : JZonedDateTime; cdecl; overload;// (JLjava/time/temporal/TemporalUnit;)Ljava/time/ZonedDateTime; A: $1
    function minus(amountToSubtract : JTemporalAmount) : JZonedDateTime; cdecl; overload;// (Ljava/time/temporal/TemporalAmount;)Ljava/time/ZonedDateTime; A: $1
    function minusDays(days : Int64) : JZonedDateTime; cdecl;                   // (J)Ljava/time/ZonedDateTime; A: $1
    function minusHours(hours : Int64) : JZonedDateTime; cdecl;                 // (J)Ljava/time/ZonedDateTime; A: $1
    function minusMinutes(minutes : Int64) : JZonedDateTime; cdecl;             // (J)Ljava/time/ZonedDateTime; A: $1
    function minusMonths(months : Int64) : JZonedDateTime; cdecl;               // (J)Ljava/time/ZonedDateTime; A: $1
    function minusNanos(nanos : Int64) : JZonedDateTime; cdecl;                 // (J)Ljava/time/ZonedDateTime; A: $1
    function minusSeconds(seconds : Int64) : JZonedDateTime; cdecl;             // (J)Ljava/time/ZonedDateTime; A: $1
    function minusWeeks(weeks : Int64) : JZonedDateTime; cdecl;                 // (J)Ljava/time/ZonedDateTime; A: $1
    function minusYears(years : Int64) : JZonedDateTime; cdecl;                 // (J)Ljava/time/ZonedDateTime; A: $1
    function plus(amountToAdd : Int64; &unit : JTemporalUnit) : JZonedDateTime; cdecl; overload;// (JLjava/time/temporal/TemporalUnit;)Ljava/time/ZonedDateTime; A: $1
    function plus(amountToAdd : JTemporalAmount) : JZonedDateTime; cdecl; overload;// (Ljava/time/temporal/TemporalAmount;)Ljava/time/ZonedDateTime; A: $1
    function plusDays(days : Int64) : JZonedDateTime; cdecl;                    // (J)Ljava/time/ZonedDateTime; A: $1
    function plusHours(hours : Int64) : JZonedDateTime; cdecl;                  // (J)Ljava/time/ZonedDateTime; A: $1
    function plusMinutes(minutes : Int64) : JZonedDateTime; cdecl;              // (J)Ljava/time/ZonedDateTime; A: $1
    function plusMonths(months : Int64) : JZonedDateTime; cdecl;                // (J)Ljava/time/ZonedDateTime; A: $1
    function plusNanos(nanos : Int64) : JZonedDateTime; cdecl;                  // (J)Ljava/time/ZonedDateTime; A: $1
    function plusSeconds(seconds : Int64) : JZonedDateTime; cdecl;              // (J)Ljava/time/ZonedDateTime; A: $1
    function plusWeeks(weeks : Int64) : JZonedDateTime; cdecl;                  // (J)Ljava/time/ZonedDateTime; A: $1
    function plusYears(years : Int64) : JZonedDateTime; cdecl;                  // (J)Ljava/time/ZonedDateTime; A: $1
    function query(query : JTemporalQuery) : JObject; cdecl;                    // (Ljava/time/temporal/TemporalQuery;)Ljava/lang/Object; A: $1
    function range(field : JTemporalField) : JValueRange; cdecl;                // (Ljava/time/temporal/TemporalField;)Ljava/time/temporal/ValueRange; A: $1
    function toLocalDate : JLocalDate; cdecl;                                   // ()Ljava/time/LocalDate; A: $1
    function toLocalDateTime : JLocalDateTime; cdecl;                           // ()Ljava/time/LocalDateTime; A: $1
    function toLocalTime : JLocalTime; cdecl;                                   // ()Ljava/time/LocalTime; A: $1
    function toOffsetDateTime : JOffsetDateTime; cdecl;                         // ()Ljava/time/OffsetDateTime; A: $1
    function toString : JString; cdecl;                                         // ()Ljava/lang/String; A: $1
    function truncatedTo(&unit : JTemporalUnit) : JZonedDateTime; cdecl;        // (Ljava/time/temporal/TemporalUnit;)Ljava/time/ZonedDateTime; A: $1
    function withDayOfMonth(dayOfMonth : Integer) : JZonedDateTime; cdecl;      // (I)Ljava/time/ZonedDateTime; A: $1
    function withDayOfYear(dayOfYear : Integer) : JZonedDateTime; cdecl;        // (I)Ljava/time/ZonedDateTime; A: $1
    function withEarlierOffsetAtOverlap : JZonedDateTime; cdecl;                // ()Ljava/time/ZonedDateTime; A: $1
    function withFixedOffsetZone : JZonedDateTime; cdecl;                       // ()Ljava/time/ZonedDateTime; A: $1
    function withHour(hour : Integer) : JZonedDateTime; cdecl;                  // (I)Ljava/time/ZonedDateTime; A: $1
    function withLaterOffsetAtOverlap : JZonedDateTime; cdecl;                  // ()Ljava/time/ZonedDateTime; A: $1
    function withMinute(minute : Integer) : JZonedDateTime; cdecl;              // (I)Ljava/time/ZonedDateTime; A: $1
    function withMonth(month : Integer) : JZonedDateTime; cdecl;                // (I)Ljava/time/ZonedDateTime; A: $1
    function withNano(nanoOfSecond : Integer) : JZonedDateTime; cdecl;          // (I)Ljava/time/ZonedDateTime; A: $1
    function withSecond(second : Integer) : JZonedDateTime; cdecl;              // (I)Ljava/time/ZonedDateTime; A: $1
    function withYear(year : Integer) : JZonedDateTime; cdecl;                  // (I)Ljava/time/ZonedDateTime; A: $1
    function withZoneSameInstant(zone : JZoneId) : JZonedDateTime; cdecl;       // (Ljava/time/ZoneId;)Ljava/time/ZonedDateTime; A: $1
    function withZoneSameLocal(zone : JZoneId) : JZonedDateTime; cdecl;         // (Ljava/time/ZoneId;)Ljava/time/ZonedDateTime; A: $1
  end;

  TJZonedDateTime = class(TJavaGenericImport<JZonedDateTimeClass, JZonedDateTime>)
  end;


implementation

end.
