//
// Generated by JavaToPas v1.5 20171018 - 171207
////////////////////////////////////////////////////////////////////////////////
unit java.time.chrono.ChronoLocalDate;

interface

uses
  AndroidAPI.JNIBridge,
  Androidapi.JNI.JavaTypes,
  java.time.chrono.Era,
  java.time.Duration,
  java.time.temporal.ChronoField,
  java.time.format.TextStyle,
  java.time.format.ResolverStyle,
  java.time.format.FormatStyle,
  java.time.format.DecimalStyle,
  java.lang.Appendable,
  java.text.ParsePosition,
  java.text.Format,
  java.time.Month,
  java.time.DayOfWeek,
  java.time.chrono.IsoEra;

type
  JZoneOffsetTransition = interface; // merged
  JZoneId = interface; // merged
  JOffsetTime = interface; // merged
  JPeriod = interface; // merged
  JLocalDate = interface; // merged
  JIsoChronology = interface; // merged
  JZoneOffset = interface; // merged
  JZoneRules = interface; // merged
  JInstant = interface; // merged
  JClock = interface; // merged
  JChronoZonedDateTime = interface; // merged
  JZonedDateTime = interface; // merged
  JOffsetDateTime = interface; // merged
  JLocalTime = interface; // merged
  JLocalDateTime = interface; // merged
  JDateTimeFormatter = interface; // merged
  JChronoLocalDateTime = interface; // merged
  JChronoPeriod = interface; // merged
  JChronology = interface; // merged
  JChronoLocalDate = interface;

  JChronoLocalDateClass = interface(JObjectClass)
    ['{05186265-BFFA-481D-AF22-D54369739E1C}']
    function &until(JChronoLocalDateparam0 : JChronoLocalDate) : JChronoPeriod; cdecl; overload;// (Ljava/time/chrono/ChronoLocalDate;)Ljava/time/chrono/ChronoPeriod; A: $401
    function &until(JTemporalparam0 : JTemporal; JTemporalUnitparam1 : JTemporalUnit) : Int64; cdecl; overload;// (Ljava/time/temporal/Temporal;Ljava/time/temporal/TemporalUnit;)J A: $401
    function &with(adjuster : JTemporalAdjuster) : JChronoLocalDate; cdecl; overload;// (Ljava/time/temporal/TemporalAdjuster;)Ljava/time/chrono/ChronoLocalDate; A: $1
    function &with(field : JTemporalField; newValue : Int64) : JChronoLocalDate; cdecl; overload;// (Ljava/time/temporal/TemporalField;J)Ljava/time/chrono/ChronoLocalDate; A: $1
    function adjustInto(temporal : JTemporal) : JTemporal; cdecl;               // (Ljava/time/temporal/Temporal;)Ljava/time/temporal/Temporal; A: $1
    function atTime(localTime : JLocalTime) : JChronoLocalDateTime; cdecl;      // (Ljava/time/LocalTime;)Ljava/time/chrono/ChronoLocalDateTime; A: $1
    function compareTo(other : JChronoLocalDate) : Integer; cdecl;              // (Ljava/time/chrono/ChronoLocalDate;)I A: $1
    function equals(JObjectparam0 : JObject) : boolean; cdecl;                  // (Ljava/lang/Object;)Z A: $401
    function format(formatter : JDateTimeFormatter) : JString; cdecl;           // (Ljava/time/format/DateTimeFormatter;)Ljava/lang/String; A: $1
    function from(temporal : JTemporalAccessor) : JChronoLocalDate; cdecl;      // (Ljava/time/temporal/TemporalAccessor;)Ljava/time/chrono/ChronoLocalDate; A: $9
    function getChronology : JChronology; cdecl;                                // ()Ljava/time/chrono/Chronology; A: $401
    function getEra : JEra; cdecl;                                              // ()Ljava/time/chrono/Era; A: $1
    function hashCode : Integer; cdecl;                                         // ()I A: $401
    function isAfter(other : JChronoLocalDate) : boolean; cdecl;                // (Ljava/time/chrono/ChronoLocalDate;)Z A: $1
    function isBefore(other : JChronoLocalDate) : boolean; cdecl;               // (Ljava/time/chrono/ChronoLocalDate;)Z A: $1
    function isEqual(other : JChronoLocalDate) : boolean; cdecl;                // (Ljava/time/chrono/ChronoLocalDate;)Z A: $1
    function isLeapYear : boolean; cdecl;                                       // ()Z A: $1
    function isSupported(&unit : JTemporalUnit) : boolean; cdecl; overload;     // (Ljava/time/temporal/TemporalUnit;)Z A: $1
    function isSupported(field : JTemporalField) : boolean; cdecl; overload;    // (Ljava/time/temporal/TemporalField;)Z A: $1
    function lengthOfMonth : Integer; cdecl;                                    // ()I A: $401
    function lengthOfYear : Integer; cdecl;                                     // ()I A: $1
    function minus(amount : JTemporalAmount) : JChronoLocalDate; cdecl; overload;// (Ljava/time/temporal/TemporalAmount;)Ljava/time/chrono/ChronoLocalDate; A: $1
    function minus(amountToSubtract : Int64; &unit : JTemporalUnit) : JChronoLocalDate; cdecl; overload;// (JLjava/time/temporal/TemporalUnit;)Ljava/time/chrono/ChronoLocalDate; A: $1
    function plus(amount : JTemporalAmount) : JChronoLocalDate; cdecl; overload;// (Ljava/time/temporal/TemporalAmount;)Ljava/time/chrono/ChronoLocalDate; A: $1
    function plus(amountToAdd : Int64; &unit : JTemporalUnit) : JChronoLocalDate; cdecl; overload;// (JLjava/time/temporal/TemporalUnit;)Ljava/time/chrono/ChronoLocalDate; A: $1
    function query(query : JTemporalQuery) : JObject; cdecl;                    // (Ljava/time/temporal/TemporalQuery;)Ljava/lang/Object; A: $1
    function timeLineOrder : JComparator; cdecl;                                // ()Ljava/util/Comparator; A: $9
    function toEpochDay : Int64; cdecl;                                         // ()J A: $1
    function toString : JString; cdecl;                                         // ()Ljava/lang/String; A: $401
  end;

  [JavaSignature('java/time/chrono/ChronoLocalDate')]
  JChronoLocalDate = interface(JObject)
    ['{A1E371BE-1E80-4F2C-8D4B-EB1281D5F30F}']
    function &until(JChronoLocalDateparam0 : JChronoLocalDate) : JChronoPeriod; cdecl; overload;// (Ljava/time/chrono/ChronoLocalDate;)Ljava/time/chrono/ChronoPeriod; A: $401
    function &until(JTemporalparam0 : JTemporal; JTemporalUnitparam1 : JTemporalUnit) : Int64; cdecl; overload;// (Ljava/time/temporal/Temporal;Ljava/time/temporal/TemporalUnit;)J A: $401
    function &with(adjuster : JTemporalAdjuster) : JChronoLocalDate; cdecl; overload;// (Ljava/time/temporal/TemporalAdjuster;)Ljava/time/chrono/ChronoLocalDate; A: $1
    function &with(field : JTemporalField; newValue : Int64) : JChronoLocalDate; cdecl; overload;// (Ljava/time/temporal/TemporalField;J)Ljava/time/chrono/ChronoLocalDate; A: $1
    function adjustInto(temporal : JTemporal) : JTemporal; cdecl;               // (Ljava/time/temporal/Temporal;)Ljava/time/temporal/Temporal; A: $1
    function atTime(localTime : JLocalTime) : JChronoLocalDateTime; cdecl;      // (Ljava/time/LocalTime;)Ljava/time/chrono/ChronoLocalDateTime; A: $1
    function compareTo(other : JChronoLocalDate) : Integer; cdecl;              // (Ljava/time/chrono/ChronoLocalDate;)I A: $1
    function equals(JObjectparam0 : JObject) : boolean; cdecl;                  // (Ljava/lang/Object;)Z A: $401
    function format(formatter : JDateTimeFormatter) : JString; cdecl;           // (Ljava/time/format/DateTimeFormatter;)Ljava/lang/String; A: $1
    function getChronology : JChronology; cdecl;                                // ()Ljava/time/chrono/Chronology; A: $401
    function getEra : JEra; cdecl;                                              // ()Ljava/time/chrono/Era; A: $1
    function hashCode : Integer; cdecl;                                         // ()I A: $401
    function isAfter(other : JChronoLocalDate) : boolean; cdecl;                // (Ljava/time/chrono/ChronoLocalDate;)Z A: $1
    function isBefore(other : JChronoLocalDate) : boolean; cdecl;               // (Ljava/time/chrono/ChronoLocalDate;)Z A: $1
    function isEqual(other : JChronoLocalDate) : boolean; cdecl;                // (Ljava/time/chrono/ChronoLocalDate;)Z A: $1
    function isLeapYear : boolean; cdecl;                                       // ()Z A: $1
    function isSupported(&unit : JTemporalUnit) : boolean; cdecl; overload;     // (Ljava/time/temporal/TemporalUnit;)Z A: $1
    function isSupported(field : JTemporalField) : boolean; cdecl; overload;    // (Ljava/time/temporal/TemporalField;)Z A: $1
    function lengthOfMonth : Integer; cdecl;                                    // ()I A: $401
    function lengthOfYear : Integer; cdecl;                                     // ()I A: $1
    function minus(amount : JTemporalAmount) : JChronoLocalDate; cdecl; overload;// (Ljava/time/temporal/TemporalAmount;)Ljava/time/chrono/ChronoLocalDate; A: $1
    function minus(amountToSubtract : Int64; &unit : JTemporalUnit) : JChronoLocalDate; cdecl; overload;// (JLjava/time/temporal/TemporalUnit;)Ljava/time/chrono/ChronoLocalDate; A: $1
    function plus(amount : JTemporalAmount) : JChronoLocalDate; cdecl; overload;// (Ljava/time/temporal/TemporalAmount;)Ljava/time/chrono/ChronoLocalDate; A: $1
    function plus(amountToAdd : Int64; &unit : JTemporalUnit) : JChronoLocalDate; cdecl; overload;// (JLjava/time/temporal/TemporalUnit;)Ljava/time/chrono/ChronoLocalDate; A: $1
    function query(query : JTemporalQuery) : JObject; cdecl;                    // (Ljava/time/temporal/TemporalQuery;)Ljava/lang/Object; A: $1
    function toEpochDay : Int64; cdecl;                                         // ()J A: $1
    function toString : JString; cdecl;                                         // ()Ljava/lang/String; A: $401
  end;

  TJChronoLocalDate = class(TJavaGenericImport<JChronoLocalDateClass, JChronoLocalDate>)
  end;

  // Merged from: .\java.time.chrono.Chronology.pas
  JChronologyClass = interface(JObjectClass)
    ['{6630F24A-984F-43B2-8D36-1E74A46CCA1D}']
    function &of(id : JString) : JChronology; cdecl;                            // (Ljava/lang/String;)Ljava/time/chrono/Chronology; A: $9
    function compareTo(JChronologyparam0 : JChronology) : Integer; cdecl;       // (Ljava/time/chrono/Chronology;)I A: $401
    function date(Integerparam0 : Integer; Integerparam1 : Integer; Integerparam2 : Integer) : JChronoLocalDate; cdecl; overload;// (III)Ljava/time/chrono/ChronoLocalDate; A: $401
    function date(JTemporalAccessorparam0 : JTemporalAccessor) : JChronoLocalDate; cdecl; overload;// (Ljava/time/temporal/TemporalAccessor;)Ljava/time/chrono/ChronoLocalDate; A: $401
    function date(era : JEra; yearOfEra : Integer; month : Integer; dayOfMonth : Integer) : JChronoLocalDate; cdecl; overload;// (Ljava/time/chrono/Era;III)Ljava/time/chrono/ChronoLocalDate; A: $1
    function dateEpochDay(Int64param0 : Int64) : JChronoLocalDate; cdecl;       // (J)Ljava/time/chrono/ChronoLocalDate; A: $401
    function dateNow : JChronoLocalDate; cdecl; overload;                       // ()Ljava/time/chrono/ChronoLocalDate; A: $1
    function dateNow(clock : JClock) : JChronoLocalDate; cdecl; overload;       // (Ljava/time/Clock;)Ljava/time/chrono/ChronoLocalDate; A: $1
    function dateNow(zone : JZoneId) : JChronoLocalDate; cdecl; overload;       // (Ljava/time/ZoneId;)Ljava/time/chrono/ChronoLocalDate; A: $1
    function dateYearDay(Integerparam0 : Integer; Integerparam1 : Integer) : JChronoLocalDate; cdecl; overload;// (II)Ljava/time/chrono/ChronoLocalDate; A: $401
    function dateYearDay(era : JEra; yearOfEra : Integer; dayOfYear : Integer) : JChronoLocalDate; cdecl; overload;// (Ljava/time/chrono/Era;II)Ljava/time/chrono/ChronoLocalDate; A: $1
    function equals(JObjectparam0 : JObject) : boolean; cdecl;                  // (Ljava/lang/Object;)Z A: $401
    function eraOf(Integerparam0 : Integer) : JEra; cdecl;                      // (I)Ljava/time/chrono/Era; A: $401
    function eras : JList; cdecl;                                               // ()Ljava/util/List; A: $401
    function from(temporal : JTemporalAccessor) : JChronology; cdecl;           // (Ljava/time/temporal/TemporalAccessor;)Ljava/time/chrono/Chronology; A: $9
    function getAvailableChronologies : JSet; cdecl;                            // ()Ljava/util/Set; A: $9
    function getCalendarType : JString; cdecl;                                  // ()Ljava/lang/String; A: $401
    function getDisplayName(style : JTextStyle; locale : JLocale) : JString; cdecl;// (Ljava/time/format/TextStyle;Ljava/util/Locale;)Ljava/lang/String; A: $1
    function getId : JString; cdecl;                                            // ()Ljava/lang/String; A: $401
    function hashCode : Integer; cdecl;                                         // ()I A: $401
    function isLeapYear(Int64param0 : Int64) : boolean; cdecl;                  // (J)Z A: $401
    function localDateTime(temporal : JTemporalAccessor) : JChronoLocalDateTime; cdecl;// (Ljava/time/temporal/TemporalAccessor;)Ljava/time/chrono/ChronoLocalDateTime; A: $1
    function ofLocale(locale : JLocale) : JChronology; cdecl;                   // (Ljava/util/Locale;)Ljava/time/chrono/Chronology; A: $9
    function period(years : Integer; months : Integer; days : Integer) : JChronoPeriod; cdecl;// (III)Ljava/time/chrono/ChronoPeriod; A: $1
    function prolepticYear(JEraparam0 : JEra; Integerparam1 : Integer) : Integer; cdecl;// (Ljava/time/chrono/Era;I)I A: $401
    function range(JChronoFieldparam0 : JChronoField) : JValueRange; cdecl;     // (Ljava/time/temporal/ChronoField;)Ljava/time/temporal/ValueRange; A: $401
    function resolveDate(JMapparam0 : JMap; JResolverStyleparam1 : JResolverStyle) : JChronoLocalDate; cdecl;// (Ljava/util/Map;Ljava/time/format/ResolverStyle;)Ljava/time/chrono/ChronoLocalDate; A: $401
    function toString : JString; cdecl;                                         // ()Ljava/lang/String; A: $401
    function zonedDateTime(instant : JInstant; zone : JZoneId) : JChronoZonedDateTime; cdecl; overload;// (Ljava/time/Instant;Ljava/time/ZoneId;)Ljava/time/chrono/ChronoZonedDateTime; A: $1
    function zonedDateTime(temporal : JTemporalAccessor) : JChronoZonedDateTime; cdecl; overload;// (Ljava/time/temporal/TemporalAccessor;)Ljava/time/chrono/ChronoZonedDateTime; A: $1
  end;

  [JavaSignature('java/time/chrono/Chronology')]
  JChronology = interface(JObject)
    ['{626FB63F-4861-41CB-AFBF-F09D05ABB1F1}']
    function compareTo(JChronologyparam0 : JChronology) : Integer; cdecl;       // (Ljava/time/chrono/Chronology;)I A: $401
    function date(Integerparam0 : Integer; Integerparam1 : Integer; Integerparam2 : Integer) : JChronoLocalDate; cdecl; overload;// (III)Ljava/time/chrono/ChronoLocalDate; A: $401
    function date(JTemporalAccessorparam0 : JTemporalAccessor) : JChronoLocalDate; cdecl; overload;// (Ljava/time/temporal/TemporalAccessor;)Ljava/time/chrono/ChronoLocalDate; A: $401
    function date(era : JEra; yearOfEra : Integer; month : Integer; dayOfMonth : Integer) : JChronoLocalDate; cdecl; overload;// (Ljava/time/chrono/Era;III)Ljava/time/chrono/ChronoLocalDate; A: $1
    function dateEpochDay(Int64param0 : Int64) : JChronoLocalDate; cdecl;       // (J)Ljava/time/chrono/ChronoLocalDate; A: $401
    function dateNow : JChronoLocalDate; cdecl; overload;                       // ()Ljava/time/chrono/ChronoLocalDate; A: $1
    function dateNow(clock : JClock) : JChronoLocalDate; cdecl; overload;       // (Ljava/time/Clock;)Ljava/time/chrono/ChronoLocalDate; A: $1
    function dateNow(zone : JZoneId) : JChronoLocalDate; cdecl; overload;       // (Ljava/time/ZoneId;)Ljava/time/chrono/ChronoLocalDate; A: $1
    function dateYearDay(Integerparam0 : Integer; Integerparam1 : Integer) : JChronoLocalDate; cdecl; overload;// (II)Ljava/time/chrono/ChronoLocalDate; A: $401
    function dateYearDay(era : JEra; yearOfEra : Integer; dayOfYear : Integer) : JChronoLocalDate; cdecl; overload;// (Ljava/time/chrono/Era;II)Ljava/time/chrono/ChronoLocalDate; A: $1
    function equals(JObjectparam0 : JObject) : boolean; cdecl;                  // (Ljava/lang/Object;)Z A: $401
    function eraOf(Integerparam0 : Integer) : JEra; cdecl;                      // (I)Ljava/time/chrono/Era; A: $401
    function eras : JList; cdecl;                                               // ()Ljava/util/List; A: $401
    function getCalendarType : JString; cdecl;                                  // ()Ljava/lang/String; A: $401
    function getDisplayName(style : JTextStyle; locale : JLocale) : JString; cdecl;// (Ljava/time/format/TextStyle;Ljava/util/Locale;)Ljava/lang/String; A: $1
    function getId : JString; cdecl;                                            // ()Ljava/lang/String; A: $401
    function hashCode : Integer; cdecl;                                         // ()I A: $401
    function isLeapYear(Int64param0 : Int64) : boolean; cdecl;                  // (J)Z A: $401
    function localDateTime(temporal : JTemporalAccessor) : JChronoLocalDateTime; cdecl;// (Ljava/time/temporal/TemporalAccessor;)Ljava/time/chrono/ChronoLocalDateTime; A: $1
    function period(years : Integer; months : Integer; days : Integer) : JChronoPeriod; cdecl;// (III)Ljava/time/chrono/ChronoPeriod; A: $1
    function prolepticYear(JEraparam0 : JEra; Integerparam1 : Integer) : Integer; cdecl;// (Ljava/time/chrono/Era;I)I A: $401
    function range(JChronoFieldparam0 : JChronoField) : JValueRange; cdecl;     // (Ljava/time/temporal/ChronoField;)Ljava/time/temporal/ValueRange; A: $401
    function resolveDate(JMapparam0 : JMap; JResolverStyleparam1 : JResolverStyle) : JChronoLocalDate; cdecl;// (Ljava/util/Map;Ljava/time/format/ResolverStyle;)Ljava/time/chrono/ChronoLocalDate; A: $401
    function toString : JString; cdecl;                                         // ()Ljava/lang/String; A: $401
    function zonedDateTime(instant : JInstant; zone : JZoneId) : JChronoZonedDateTime; cdecl; overload;// (Ljava/time/Instant;Ljava/time/ZoneId;)Ljava/time/chrono/ChronoZonedDateTime; A: $1
    function zonedDateTime(temporal : JTemporalAccessor) : JChronoZonedDateTime; cdecl; overload;// (Ljava/time/temporal/TemporalAccessor;)Ljava/time/chrono/ChronoZonedDateTime; A: $1
  end;

  TJChronology = class(TJavaGenericImport<JChronologyClass, JChronology>)
  end;


  // Merged from: .\java.time.chrono.ChronoPeriod.pas
  JChronoPeriodClass = interface(JObjectClass)
    ['{BC87590B-C235-4081-A987-9CDAABE2A01F}']
    function addTo(JTemporalparam0 : JTemporal) : JTemporal; cdecl;             // (Ljava/time/temporal/Temporal;)Ljava/time/temporal/Temporal; A: $401
    function between(startDateInclusive : JChronoLocalDate; endDateExclusive : JChronoLocalDate) : JChronoPeriod; cdecl;// (Ljava/time/chrono/ChronoLocalDate;Ljava/time/chrono/ChronoLocalDate;)Ljava/time/chrono/ChronoPeriod; A: $9
    function equals(JObjectparam0 : JObject) : boolean; cdecl;                  // (Ljava/lang/Object;)Z A: $401
    function get(JTemporalUnitparam0 : JTemporalUnit) : Int64; cdecl;           // (Ljava/time/temporal/TemporalUnit;)J A: $401
    function getChronology : JChronology; cdecl;                                // ()Ljava/time/chrono/Chronology; A: $401
    function getUnits : JList; cdecl;                                           // ()Ljava/util/List; A: $401
    function hashCode : Integer; cdecl;                                         // ()I A: $401
    function isNegative : boolean; cdecl;                                       // ()Z A: $1
    function isZero : boolean; cdecl;                                           // ()Z A: $1
    function minus(JTemporalAmountparam0 : JTemporalAmount) : JChronoPeriod; cdecl;// (Ljava/time/temporal/TemporalAmount;)Ljava/time/chrono/ChronoPeriod; A: $401
    function multipliedBy(Integerparam0 : Integer) : JChronoPeriod; cdecl;      // (I)Ljava/time/chrono/ChronoPeriod; A: $401
    function negated : JChronoPeriod; cdecl;                                    // ()Ljava/time/chrono/ChronoPeriod; A: $1
    function normalized : JChronoPeriod; cdecl;                                 // ()Ljava/time/chrono/ChronoPeriod; A: $401
    function plus(JTemporalAmountparam0 : JTemporalAmount) : JChronoPeriod; cdecl;// (Ljava/time/temporal/TemporalAmount;)Ljava/time/chrono/ChronoPeriod; A: $401
    function subtractFrom(JTemporalparam0 : JTemporal) : JTemporal; cdecl;      // (Ljava/time/temporal/Temporal;)Ljava/time/temporal/Temporal; A: $401
    function toString : JString; cdecl;                                         // ()Ljava/lang/String; A: $401
  end;

  [JavaSignature('java/time/chrono/ChronoPeriod')]
  JChronoPeriod = interface(JObject)
    ['{4630F2EA-BC51-4B49-A203-BD2C759FDF6F}']
    function addTo(JTemporalparam0 : JTemporal) : JTemporal; cdecl;             // (Ljava/time/temporal/Temporal;)Ljava/time/temporal/Temporal; A: $401
    function equals(JObjectparam0 : JObject) : boolean; cdecl;                  // (Ljava/lang/Object;)Z A: $401
    function get(JTemporalUnitparam0 : JTemporalUnit) : Int64; cdecl;           // (Ljava/time/temporal/TemporalUnit;)J A: $401
    function getChronology : JChronology; cdecl;                                // ()Ljava/time/chrono/Chronology; A: $401
    function getUnits : JList; cdecl;                                           // ()Ljava/util/List; A: $401
    function hashCode : Integer; cdecl;                                         // ()I A: $401
    function isNegative : boolean; cdecl;                                       // ()Z A: $1
    function isZero : boolean; cdecl;                                           // ()Z A: $1
    function minus(JTemporalAmountparam0 : JTemporalAmount) : JChronoPeriod; cdecl;// (Ljava/time/temporal/TemporalAmount;)Ljava/time/chrono/ChronoPeriod; A: $401
    function multipliedBy(Integerparam0 : Integer) : JChronoPeriod; cdecl;      // (I)Ljava/time/chrono/ChronoPeriod; A: $401
    function negated : JChronoPeriod; cdecl;                                    // ()Ljava/time/chrono/ChronoPeriod; A: $1
    function normalized : JChronoPeriod; cdecl;                                 // ()Ljava/time/chrono/ChronoPeriod; A: $401
    function plus(JTemporalAmountparam0 : JTemporalAmount) : JChronoPeriod; cdecl;// (Ljava/time/temporal/TemporalAmount;)Ljava/time/chrono/ChronoPeriod; A: $401
    function subtractFrom(JTemporalparam0 : JTemporal) : JTemporal; cdecl;      // (Ljava/time/temporal/Temporal;)Ljava/time/temporal/Temporal; A: $401
    function toString : JString; cdecl;                                         // ()Ljava/lang/String; A: $401
  end;

  TJChronoPeriod = class(TJavaGenericImport<JChronoPeriodClass, JChronoPeriod>)
  end;


  // Merged from: .\java.time.chrono.ChronoLocalDateTime.pas
  JChronoLocalDateTimeClass = interface(JObjectClass)
    ['{6D1832C5-C653-46E1-8491-75ECCE5DFD5F}']
    function &with(JTemporalFieldparam0 : JTemporalField; Int64param1 : Int64) : JChronoLocalDateTime; cdecl; overload;// (Ljava/time/temporal/TemporalField;J)Ljava/time/chrono/ChronoLocalDateTime; A: $401
    function &with(adjuster : JTemporalAdjuster) : JChronoLocalDateTime; cdecl; overload;// (Ljava/time/temporal/TemporalAdjuster;)Ljava/time/chrono/ChronoLocalDateTime; A: $1
    function adjustInto(temporal : JTemporal) : JTemporal; cdecl;               // (Ljava/time/temporal/Temporal;)Ljava/time/temporal/Temporal; A: $1
    function atZone(JZoneIdparam0 : JZoneId) : JChronoZonedDateTime; cdecl;     // (Ljava/time/ZoneId;)Ljava/time/chrono/ChronoZonedDateTime; A: $401
    function compareTo(other : JChronoLocalDateTime) : Integer; cdecl;          // (Ljava/time/chrono/ChronoLocalDateTime;)I A: $1
    function equals(JObjectparam0 : JObject) : boolean; cdecl;                  // (Ljava/lang/Object;)Z A: $401
    function format(formatter : JDateTimeFormatter) : JString; cdecl;           // (Ljava/time/format/DateTimeFormatter;)Ljava/lang/String; A: $1
    function from(temporal : JTemporalAccessor) : JChronoLocalDateTime; cdecl;  // (Ljava/time/temporal/TemporalAccessor;)Ljava/time/chrono/ChronoLocalDateTime; A: $9
    function getChronology : JChronology; cdecl;                                // ()Ljava/time/chrono/Chronology; A: $1
    function hashCode : Integer; cdecl;                                         // ()I A: $401
    function isAfter(other : JChronoLocalDateTime) : boolean; cdecl;            // (Ljava/time/chrono/ChronoLocalDateTime;)Z A: $1
    function isBefore(other : JChronoLocalDateTime) : boolean; cdecl;           // (Ljava/time/chrono/ChronoLocalDateTime;)Z A: $1
    function isEqual(other : JChronoLocalDateTime) : boolean; cdecl;            // (Ljava/time/chrono/ChronoLocalDateTime;)Z A: $1
    function isSupported(&unit : JTemporalUnit) : boolean; cdecl; overload;     // (Ljava/time/temporal/TemporalUnit;)Z A: $1
    function isSupported(JTemporalFieldparam0 : JTemporalField) : boolean; cdecl; overload;// (Ljava/time/temporal/TemporalField;)Z A: $401
    function minus(amount : JTemporalAmount) : JChronoLocalDateTime; cdecl; overload;// (Ljava/time/temporal/TemporalAmount;)Ljava/time/chrono/ChronoLocalDateTime; A: $1
    function minus(amountToSubtract : Int64; &unit : JTemporalUnit) : JChronoLocalDateTime; cdecl; overload;// (JLjava/time/temporal/TemporalUnit;)Ljava/time/chrono/ChronoLocalDateTime; A: $1
    function plus(Int64param0 : Int64; JTemporalUnitparam1 : JTemporalUnit) : JChronoLocalDateTime; cdecl; overload;// (JLjava/time/temporal/TemporalUnit;)Ljava/time/chrono/ChronoLocalDateTime; A: $401
    function plus(amount : JTemporalAmount) : JChronoLocalDateTime; cdecl; overload;// (Ljava/time/temporal/TemporalAmount;)Ljava/time/chrono/ChronoLocalDateTime; A: $1
    function query(query : JTemporalQuery) : JObject; cdecl;                    // (Ljava/time/temporal/TemporalQuery;)Ljava/lang/Object; A: $1
    function timeLineOrder : JComparator; cdecl;                                // ()Ljava/util/Comparator; A: $9
    function toEpochSecond(offset : JZoneOffset) : Int64; cdecl;                // (Ljava/time/ZoneOffset;)J A: $1
    function toInstant(offset : JZoneOffset) : JInstant; cdecl;                 // (Ljava/time/ZoneOffset;)Ljava/time/Instant; A: $1
    function toLocalDate : JChronoLocalDate; cdecl;                             // ()Ljava/time/chrono/ChronoLocalDate; A: $401
    function toLocalTime : JLocalTime; cdecl;                                   // ()Ljava/time/LocalTime; A: $401
    function toString : JString; cdecl;                                         // ()Ljava/lang/String; A: $401
  end;

  [JavaSignature('java/time/chrono/ChronoLocalDateTime')]
  JChronoLocalDateTime = interface(JObject)
    ['{9A6F53BE-F6BB-4C48-8BB8-C616370ABFEF}']
    function &with(JTemporalFieldparam0 : JTemporalField; Int64param1 : Int64) : JChronoLocalDateTime; cdecl; overload;// (Ljava/time/temporal/TemporalField;J)Ljava/time/chrono/ChronoLocalDateTime; A: $401
    function &with(adjuster : JTemporalAdjuster) : JChronoLocalDateTime; cdecl; overload;// (Ljava/time/temporal/TemporalAdjuster;)Ljava/time/chrono/ChronoLocalDateTime; A: $1
    function adjustInto(temporal : JTemporal) : JTemporal; cdecl;               // (Ljava/time/temporal/Temporal;)Ljava/time/temporal/Temporal; A: $1
    function atZone(JZoneIdparam0 : JZoneId) : JChronoZonedDateTime; cdecl;     // (Ljava/time/ZoneId;)Ljava/time/chrono/ChronoZonedDateTime; A: $401
    function compareTo(other : JChronoLocalDateTime) : Integer; cdecl;          // (Ljava/time/chrono/ChronoLocalDateTime;)I A: $1
    function equals(JObjectparam0 : JObject) : boolean; cdecl;                  // (Ljava/lang/Object;)Z A: $401
    function format(formatter : JDateTimeFormatter) : JString; cdecl;           // (Ljava/time/format/DateTimeFormatter;)Ljava/lang/String; A: $1
    function getChronology : JChronology; cdecl;                                // ()Ljava/time/chrono/Chronology; A: $1
    function hashCode : Integer; cdecl;                                         // ()I A: $401
    function isAfter(other : JChronoLocalDateTime) : boolean; cdecl;            // (Ljava/time/chrono/ChronoLocalDateTime;)Z A: $1
    function isBefore(other : JChronoLocalDateTime) : boolean; cdecl;           // (Ljava/time/chrono/ChronoLocalDateTime;)Z A: $1
    function isEqual(other : JChronoLocalDateTime) : boolean; cdecl;            // (Ljava/time/chrono/ChronoLocalDateTime;)Z A: $1
    function isSupported(&unit : JTemporalUnit) : boolean; cdecl; overload;     // (Ljava/time/temporal/TemporalUnit;)Z A: $1
    function isSupported(JTemporalFieldparam0 : JTemporalField) : boolean; cdecl; overload;// (Ljava/time/temporal/TemporalField;)Z A: $401
    function minus(amount : JTemporalAmount) : JChronoLocalDateTime; cdecl; overload;// (Ljava/time/temporal/TemporalAmount;)Ljava/time/chrono/ChronoLocalDateTime; A: $1
    function minus(amountToSubtract : Int64; &unit : JTemporalUnit) : JChronoLocalDateTime; cdecl; overload;// (JLjava/time/temporal/TemporalUnit;)Ljava/time/chrono/ChronoLocalDateTime; A: $1
    function plus(Int64param0 : Int64; JTemporalUnitparam1 : JTemporalUnit) : JChronoLocalDateTime; cdecl; overload;// (JLjava/time/temporal/TemporalUnit;)Ljava/time/chrono/ChronoLocalDateTime; A: $401
    function plus(amount : JTemporalAmount) : JChronoLocalDateTime; cdecl; overload;// (Ljava/time/temporal/TemporalAmount;)Ljava/time/chrono/ChronoLocalDateTime; A: $1
    function query(query : JTemporalQuery) : JObject; cdecl;                    // (Ljava/time/temporal/TemporalQuery;)Ljava/lang/Object; A: $1
    function toEpochSecond(offset : JZoneOffset) : Int64; cdecl;                // (Ljava/time/ZoneOffset;)J A: $1
    function toInstant(offset : JZoneOffset) : JInstant; cdecl;                 // (Ljava/time/ZoneOffset;)Ljava/time/Instant; A: $1
    function toLocalDate : JChronoLocalDate; cdecl;                             // ()Ljava/time/chrono/ChronoLocalDate; A: $401
    function toLocalTime : JLocalTime; cdecl;                                   // ()Ljava/time/LocalTime; A: $401
    function toString : JString; cdecl;                                         // ()Ljava/lang/String; A: $401
  end;

  TJChronoLocalDateTime = class(TJavaGenericImport<JChronoLocalDateTimeClass, JChronoLocalDateTime>)
  end;


  // Merged from: .\java.time.format.DateTimeFormatter.pas
  JDateTimeFormatterClass = interface(JObjectClass)
    ['{C9D1ED23-2449-4671-8D78-545FD1A9C926}']
    function _GetBASIC_ISO_DATE : JDateTimeFormatter; cdecl;                    //  A: $19
    function _GetISO_DATE : JDateTimeFormatter; cdecl;                          //  A: $19
    function _GetISO_DATE_TIME : JDateTimeFormatter; cdecl;                     //  A: $19
    function _GetISO_INSTANT : JDateTimeFormatter; cdecl;                       //  A: $19
    function _GetISO_LOCAL_DATE : JDateTimeFormatter; cdecl;                    //  A: $19
    function _GetISO_LOCAL_DATE_TIME : JDateTimeFormatter; cdecl;               //  A: $19
    function _GetISO_LOCAL_TIME : JDateTimeFormatter; cdecl;                    //  A: $19
    function _GetISO_OFFSET_DATE : JDateTimeFormatter; cdecl;                   //  A: $19
    function _GetISO_OFFSET_DATE_TIME : JDateTimeFormatter; cdecl;              //  A: $19
    function _GetISO_OFFSET_TIME : JDateTimeFormatter; cdecl;                   //  A: $19
    function _GetISO_ORDINAL_DATE : JDateTimeFormatter; cdecl;                  //  A: $19
    function _GetISO_TIME : JDateTimeFormatter; cdecl;                          //  A: $19
    function _GetISO_WEEK_DATE : JDateTimeFormatter; cdecl;                     //  A: $19
    function _GetISO_ZONED_DATE_TIME : JDateTimeFormatter; cdecl;               //  A: $19
    function _GetRFC_1123_DATE_TIME : JDateTimeFormatter; cdecl;                //  A: $19
    function format(temporal : JTemporalAccessor) : JString; cdecl;             // (Ljava/time/temporal/TemporalAccessor;)Ljava/lang/String; A: $1
    function getChronology : JChronology; cdecl;                                // ()Ljava/time/chrono/Chronology; A: $1
    function getDecimalStyle : JDecimalStyle; cdecl;                            // ()Ljava/time/format/DecimalStyle; A: $1
    function getLocale : JLocale; cdecl;                                        // ()Ljava/util/Locale; A: $1
    function getResolverFields : JSet; cdecl;                                   // ()Ljava/util/Set; A: $1
    function getResolverStyle : JResolverStyle; cdecl;                          // ()Ljava/time/format/ResolverStyle; A: $1
    function getZone : JZoneId; cdecl;                                          // ()Ljava/time/ZoneId; A: $1
    function ofLocalizedDate(dateStyle : JFormatStyle) : JDateTimeFormatter; cdecl;// (Ljava/time/format/FormatStyle;)Ljava/time/format/DateTimeFormatter; A: $9
    function ofLocalizedDateTime(dateStyle : JFormatStyle; timeStyle : JFormatStyle) : JDateTimeFormatter; cdecl; overload;// (Ljava/time/format/FormatStyle;Ljava/time/format/FormatStyle;)Ljava/time/format/DateTimeFormatter; A: $9
    function ofLocalizedDateTime(dateTimeStyle : JFormatStyle) : JDateTimeFormatter; cdecl; overload;// (Ljava/time/format/FormatStyle;)Ljava/time/format/DateTimeFormatter; A: $9
    function ofLocalizedTime(timeStyle : JFormatStyle) : JDateTimeFormatter; cdecl;// (Ljava/time/format/FormatStyle;)Ljava/time/format/DateTimeFormatter; A: $9
    function ofPattern(pattern : JString) : JDateTimeFormatter; cdecl; overload;// (Ljava/lang/String;)Ljava/time/format/DateTimeFormatter; A: $9
    function ofPattern(pattern : JString; locale : JLocale) : JDateTimeFormatter; cdecl; overload;// (Ljava/lang/String;Ljava/util/Locale;)Ljava/time/format/DateTimeFormatter; A: $9
    function parse(text : JCharSequence) : JTemporalAccessor; cdecl; overload;  // (Ljava/lang/CharSequence;)Ljava/time/temporal/TemporalAccessor; A: $1
    function parse(text : JCharSequence; position : JParsePosition) : JTemporalAccessor; cdecl; overload;// (Ljava/lang/CharSequence;Ljava/text/ParsePosition;)Ljava/time/temporal/TemporalAccessor; A: $1
    function parse(text : JCharSequence; query : JTemporalQuery) : JObject; cdecl; overload;// (Ljava/lang/CharSequence;Ljava/time/temporal/TemporalQuery;)Ljava/lang/Object; A: $1
    function parseBest(text : JCharSequence; queries : TJavaArray<JTemporalQuery>) : JTemporalAccessor; cdecl;// (Ljava/lang/CharSequence;[Ljava/time/temporal/TemporalQuery;)Ljava/time/temporal/TemporalAccessor; A: $81
    function parseUnresolved(text : JCharSequence; position : JParsePosition) : JTemporalAccessor; cdecl;// (Ljava/lang/CharSequence;Ljava/text/ParsePosition;)Ljava/time/temporal/TemporalAccessor; A: $1
    function parsedExcessDays : JTemporalQuery; cdecl;                          // ()Ljava/time/temporal/TemporalQuery; A: $19
    function parsedLeapSecond : JTemporalQuery; cdecl;                          // ()Ljava/time/temporal/TemporalQuery; A: $19
    function toFormat : JFormat; cdecl; overload;                               // ()Ljava/text/Format; A: $1
    function toFormat(parseQuery : JTemporalQuery) : JFormat; cdecl; overload;  // (Ljava/time/temporal/TemporalQuery;)Ljava/text/Format; A: $1
    function toString : JString; cdecl;                                         // ()Ljava/lang/String; A: $1
    function withChronology(chrono : JChronology) : JDateTimeFormatter; cdecl;  // (Ljava/time/chrono/Chronology;)Ljava/time/format/DateTimeFormatter; A: $1
    function withDecimalStyle(decimalStyle : JDecimalStyle) : JDateTimeFormatter; cdecl;// (Ljava/time/format/DecimalStyle;)Ljava/time/format/DateTimeFormatter; A: $1
    function withLocale(locale : JLocale) : JDateTimeFormatter; cdecl;          // (Ljava/util/Locale;)Ljava/time/format/DateTimeFormatter; A: $1
    function withResolverFields(resolverFields : JSet) : JDateTimeFormatter; cdecl; overload;// (Ljava/util/Set;)Ljava/time/format/DateTimeFormatter; A: $1
    function withResolverFields(resolverFields : TJavaArray<JTemporalField>) : JDateTimeFormatter; cdecl; overload;// ([Ljava/time/temporal/TemporalField;)Ljava/time/format/DateTimeFormatter; A: $81
    function withResolverStyle(resolverStyle : JResolverStyle) : JDateTimeFormatter; cdecl;// (Ljava/time/format/ResolverStyle;)Ljava/time/format/DateTimeFormatter; A: $1
    function withZone(zone : JZoneId) : JDateTimeFormatter; cdecl;              // (Ljava/time/ZoneId;)Ljava/time/format/DateTimeFormatter; A: $1
    procedure formatTo(temporal : JTemporalAccessor; appendable : JAppendable) ; cdecl;// (Ljava/time/temporal/TemporalAccessor;Ljava/lang/Appendable;)V A: $1
    property BASIC_ISO_DATE : JDateTimeFormatter read _GetBASIC_ISO_DATE;       // Ljava/time/format/DateTimeFormatter; A: $19
    property ISO_DATE : JDateTimeFormatter read _GetISO_DATE;                   // Ljava/time/format/DateTimeFormatter; A: $19
    property ISO_DATE_TIME : JDateTimeFormatter read _GetISO_DATE_TIME;         // Ljava/time/format/DateTimeFormatter; A: $19
    property ISO_INSTANT : JDateTimeFormatter read _GetISO_INSTANT;             // Ljava/time/format/DateTimeFormatter; A: $19
    property ISO_LOCAL_DATE : JDateTimeFormatter read _GetISO_LOCAL_DATE;       // Ljava/time/format/DateTimeFormatter; A: $19
    property ISO_LOCAL_DATE_TIME : JDateTimeFormatter read _GetISO_LOCAL_DATE_TIME;// Ljava/time/format/DateTimeFormatter; A: $19
    property ISO_LOCAL_TIME : JDateTimeFormatter read _GetISO_LOCAL_TIME;       // Ljava/time/format/DateTimeFormatter; A: $19
    property ISO_OFFSET_DATE : JDateTimeFormatter read _GetISO_OFFSET_DATE;     // Ljava/time/format/DateTimeFormatter; A: $19
    property ISO_OFFSET_DATE_TIME : JDateTimeFormatter read _GetISO_OFFSET_DATE_TIME;// Ljava/time/format/DateTimeFormatter; A: $19
    property ISO_OFFSET_TIME : JDateTimeFormatter read _GetISO_OFFSET_TIME;     // Ljava/time/format/DateTimeFormatter; A: $19
    property ISO_ORDINAL_DATE : JDateTimeFormatter read _GetISO_ORDINAL_DATE;   // Ljava/time/format/DateTimeFormatter; A: $19
    property ISO_TIME : JDateTimeFormatter read _GetISO_TIME;                   // Ljava/time/format/DateTimeFormatter; A: $19
    property ISO_WEEK_DATE : JDateTimeFormatter read _GetISO_WEEK_DATE;         // Ljava/time/format/DateTimeFormatter; A: $19
    property ISO_ZONED_DATE_TIME : JDateTimeFormatter read _GetISO_ZONED_DATE_TIME;// Ljava/time/format/DateTimeFormatter; A: $19
    property RFC_1123_DATE_TIME : JDateTimeFormatter read _GetRFC_1123_DATE_TIME;// Ljava/time/format/DateTimeFormatter; A: $19
  end;

  [JavaSignature('java/time/format/DateTimeFormatter')]
  JDateTimeFormatter = interface(JObject)
    ['{F1E2A72D-4FD4-4DF8-B3AB-5337691F034E}']
    function format(temporal : JTemporalAccessor) : JString; cdecl;             // (Ljava/time/temporal/TemporalAccessor;)Ljava/lang/String; A: $1
    function getChronology : JChronology; cdecl;                                // ()Ljava/time/chrono/Chronology; A: $1
    function getDecimalStyle : JDecimalStyle; cdecl;                            // ()Ljava/time/format/DecimalStyle; A: $1
    function getLocale : JLocale; cdecl;                                        // ()Ljava/util/Locale; A: $1
    function getResolverFields : JSet; cdecl;                                   // ()Ljava/util/Set; A: $1
    function getResolverStyle : JResolverStyle; cdecl;                          // ()Ljava/time/format/ResolverStyle; A: $1
    function getZone : JZoneId; cdecl;                                          // ()Ljava/time/ZoneId; A: $1
    function parse(text : JCharSequence) : JTemporalAccessor; cdecl; overload;  // (Ljava/lang/CharSequence;)Ljava/time/temporal/TemporalAccessor; A: $1
    function parse(text : JCharSequence; position : JParsePosition) : JTemporalAccessor; cdecl; overload;// (Ljava/lang/CharSequence;Ljava/text/ParsePosition;)Ljava/time/temporal/TemporalAccessor; A: $1
    function parse(text : JCharSequence; query : JTemporalQuery) : JObject; cdecl; overload;// (Ljava/lang/CharSequence;Ljava/time/temporal/TemporalQuery;)Ljava/lang/Object; A: $1
    function parseUnresolved(text : JCharSequence; position : JParsePosition) : JTemporalAccessor; cdecl;// (Ljava/lang/CharSequence;Ljava/text/ParsePosition;)Ljava/time/temporal/TemporalAccessor; A: $1
    function toFormat : JFormat; cdecl; overload;                               // ()Ljava/text/Format; A: $1
    function toFormat(parseQuery : JTemporalQuery) : JFormat; cdecl; overload;  // (Ljava/time/temporal/TemporalQuery;)Ljava/text/Format; A: $1
    function toString : JString; cdecl;                                         // ()Ljava/lang/String; A: $1
    function withChronology(chrono : JChronology) : JDateTimeFormatter; cdecl;  // (Ljava/time/chrono/Chronology;)Ljava/time/format/DateTimeFormatter; A: $1
    function withDecimalStyle(decimalStyle : JDecimalStyle) : JDateTimeFormatter; cdecl;// (Ljava/time/format/DecimalStyle;)Ljava/time/format/DateTimeFormatter; A: $1
    function withLocale(locale : JLocale) : JDateTimeFormatter; cdecl;          // (Ljava/util/Locale;)Ljava/time/format/DateTimeFormatter; A: $1
    function withResolverFields(resolverFields : JSet) : JDateTimeFormatter; cdecl; overload;// (Ljava/util/Set;)Ljava/time/format/DateTimeFormatter; A: $1
    function withResolverStyle(resolverStyle : JResolverStyle) : JDateTimeFormatter; cdecl;// (Ljava/time/format/ResolverStyle;)Ljava/time/format/DateTimeFormatter; A: $1
    function withZone(zone : JZoneId) : JDateTimeFormatter; cdecl;              // (Ljava/time/ZoneId;)Ljava/time/format/DateTimeFormatter; A: $1
    procedure formatTo(temporal : JTemporalAccessor; appendable : JAppendable) ; cdecl;// (Ljava/time/temporal/TemporalAccessor;Ljava/lang/Appendable;)V A: $1
  end;

  TJDateTimeFormatter = class(TJavaGenericImport<JDateTimeFormatterClass, JDateTimeFormatter>)
  end;


  // Merged from: .\java.time.LocalDateTime.pas
  JLocalDateTimeClass = interface(JObjectClass)
    ['{6D6A209D-CC1D-4C8B-A249-00AF81FB8D6B}']
    function &of(date : JLocalDate; time : JLocalTime) : JLocalDateTime; cdecl; overload;// (Ljava/time/LocalDate;Ljava/time/LocalTime;)Ljava/time/LocalDateTime; A: $9
    function &of(year : Integer; month : Integer; dayOfMonth : Integer; hour : Integer; minute : Integer) : JLocalDateTime; cdecl; overload;// (IIIII)Ljava/time/LocalDateTime; A: $9
    function &of(year : Integer; month : Integer; dayOfMonth : Integer; hour : Integer; minute : Integer; second : Integer) : JLocalDateTime; cdecl; overload;// (IIIIII)Ljava/time/LocalDateTime; A: $9
    function &of(year : Integer; month : Integer; dayOfMonth : Integer; hour : Integer; minute : Integer; second : Integer; nanoOfSecond : Integer) : JLocalDateTime; cdecl; overload;// (IIIIIII)Ljava/time/LocalDateTime; A: $9
    function &of(year : Integer; month : JMonth; dayOfMonth : Integer; hour : Integer; minute : Integer) : JLocalDateTime; cdecl; overload;// (ILjava/time/Month;III)Ljava/time/LocalDateTime; A: $9
    function &of(year : Integer; month : JMonth; dayOfMonth : Integer; hour : Integer; minute : Integer; second : Integer) : JLocalDateTime; cdecl; overload;// (ILjava/time/Month;IIII)Ljava/time/LocalDateTime; A: $9
    function &of(year : Integer; month : JMonth; dayOfMonth : Integer; hour : Integer; minute : Integer; second : Integer; nanoOfSecond : Integer) : JLocalDateTime; cdecl; overload;// (ILjava/time/Month;IIIII)Ljava/time/LocalDateTime; A: $9
    function &until(endExclusive : JTemporal; &unit : JTemporalUnit) : Int64; cdecl;// (Ljava/time/temporal/Temporal;Ljava/time/temporal/TemporalUnit;)J A: $1
    function &with(adjuster : JTemporalAdjuster) : JLocalDateTime; cdecl; overload;// (Ljava/time/temporal/TemporalAdjuster;)Ljava/time/LocalDateTime; A: $1
    function &with(field : JTemporalField; newValue : Int64) : JLocalDateTime; cdecl; overload;// (Ljava/time/temporal/TemporalField;J)Ljava/time/LocalDateTime; A: $1
    function _GetMAX : JLocalDateTime; cdecl;                                   //  A: $19
    function _GetMIN : JLocalDateTime; cdecl;                                   //  A: $19
    function adjustInto(temporal : JTemporal) : JTemporal; cdecl;               // (Ljava/time/temporal/Temporal;)Ljava/time/temporal/Temporal; A: $1
    function atOffset(offset : JZoneOffset) : JOffsetDateTime; cdecl;           // (Ljava/time/ZoneOffset;)Ljava/time/OffsetDateTime; A: $1
    function atZone(zone : JZoneId) : JZonedDateTime; cdecl;                    // (Ljava/time/ZoneId;)Ljava/time/ZonedDateTime; A: $1
    function compareTo(other : JChronoLocalDateTime) : Integer; cdecl;          // (Ljava/time/chrono/ChronoLocalDateTime;)I A: $1
    function equals(obj : JObject) : boolean; cdecl;                            // (Ljava/lang/Object;)Z A: $1
    function format(formatter : JDateTimeFormatter) : JString; cdecl;           // (Ljava/time/format/DateTimeFormatter;)Ljava/lang/String; A: $1
    function from(temporal : JTemporalAccessor) : JLocalDateTime; cdecl;        // (Ljava/time/temporal/TemporalAccessor;)Ljava/time/LocalDateTime; A: $9
    function get(field : JTemporalField) : Integer; cdecl;                      // (Ljava/time/temporal/TemporalField;)I A: $1
    function getDayOfMonth : Integer; cdecl;                                    // ()I A: $1
    function getDayOfWeek : JDayOfWeek; cdecl;                                  // ()Ljava/time/DayOfWeek; A: $1
    function getDayOfYear : Integer; cdecl;                                     // ()I A: $1
    function getHour : Integer; cdecl;                                          // ()I A: $1
    function getLong(field : JTemporalField) : Int64; cdecl;                    // (Ljava/time/temporal/TemporalField;)J A: $1
    function getMinute : Integer; cdecl;                                        // ()I A: $1
    function getMonth : JMonth; cdecl;                                          // ()Ljava/time/Month; A: $1
    function getMonthValue : Integer; cdecl;                                    // ()I A: $1
    function getNano : Integer; cdecl;                                          // ()I A: $1
    function getSecond : Integer; cdecl;                                        // ()I A: $1
    function getYear : Integer; cdecl;                                          // ()I A: $1
    function hashCode : Integer; cdecl;                                         // ()I A: $1
    function isAfter(other : JChronoLocalDateTime) : boolean; cdecl;            // (Ljava/time/chrono/ChronoLocalDateTime;)Z A: $1
    function isBefore(other : JChronoLocalDateTime) : boolean; cdecl;           // (Ljava/time/chrono/ChronoLocalDateTime;)Z A: $1
    function isEqual(other : JChronoLocalDateTime) : boolean; cdecl;            // (Ljava/time/chrono/ChronoLocalDateTime;)Z A: $1
    function isSupported(&unit : JTemporalUnit) : boolean; cdecl; overload;     // (Ljava/time/temporal/TemporalUnit;)Z A: $1
    function isSupported(field : JTemporalField) : boolean; cdecl; overload;    // (Ljava/time/temporal/TemporalField;)Z A: $1
    function minus(amountToSubtract : Int64; &unit : JTemporalUnit) : JLocalDateTime; cdecl; overload;// (JLjava/time/temporal/TemporalUnit;)Ljava/time/LocalDateTime; A: $1
    function minus(amountToSubtract : JTemporalAmount) : JLocalDateTime; cdecl; overload;// (Ljava/time/temporal/TemporalAmount;)Ljava/time/LocalDateTime; A: $1
    function minusDays(days : Int64) : JLocalDateTime; cdecl;                   // (J)Ljava/time/LocalDateTime; A: $1
    function minusHours(hours : Int64) : JLocalDateTime; cdecl;                 // (J)Ljava/time/LocalDateTime; A: $1
    function minusMinutes(minutes : Int64) : JLocalDateTime; cdecl;             // (J)Ljava/time/LocalDateTime; A: $1
    function minusMonths(months : Int64) : JLocalDateTime; cdecl;               // (J)Ljava/time/LocalDateTime; A: $1
    function minusNanos(nanos : Int64) : JLocalDateTime; cdecl;                 // (J)Ljava/time/LocalDateTime; A: $1
    function minusSeconds(seconds : Int64) : JLocalDateTime; cdecl;             // (J)Ljava/time/LocalDateTime; A: $1
    function minusWeeks(weeks : Int64) : JLocalDateTime; cdecl;                 // (J)Ljava/time/LocalDateTime; A: $1
    function minusYears(years : Int64) : JLocalDateTime; cdecl;                 // (J)Ljava/time/LocalDateTime; A: $1
    function now : JLocalDateTime; cdecl; overload;                             // ()Ljava/time/LocalDateTime; A: $9
    function now(clock : JClock) : JLocalDateTime; cdecl; overload;             // (Ljava/time/Clock;)Ljava/time/LocalDateTime; A: $9
    function now(zone : JZoneId) : JLocalDateTime; cdecl; overload;             // (Ljava/time/ZoneId;)Ljava/time/LocalDateTime; A: $9
    function ofEpochSecond(epochSecond : Int64; nanoOfSecond : Integer; offset : JZoneOffset) : JLocalDateTime; cdecl;// (JILjava/time/ZoneOffset;)Ljava/time/LocalDateTime; A: $9
    function ofInstant(instant : JInstant; zone : JZoneId) : JLocalDateTime; cdecl;// (Ljava/time/Instant;Ljava/time/ZoneId;)Ljava/time/LocalDateTime; A: $9
    function parse(text : JCharSequence) : JLocalDateTime; cdecl; overload;     // (Ljava/lang/CharSequence;)Ljava/time/LocalDateTime; A: $9
    function parse(text : JCharSequence; formatter : JDateTimeFormatter) : JLocalDateTime; cdecl; overload;// (Ljava/lang/CharSequence;Ljava/time/format/DateTimeFormatter;)Ljava/time/LocalDateTime; A: $9
    function plus(amountToAdd : Int64; &unit : JTemporalUnit) : JLocalDateTime; cdecl; overload;// (JLjava/time/temporal/TemporalUnit;)Ljava/time/LocalDateTime; A: $1
    function plus(amountToAdd : JTemporalAmount) : JLocalDateTime; cdecl; overload;// (Ljava/time/temporal/TemporalAmount;)Ljava/time/LocalDateTime; A: $1
    function plusDays(days : Int64) : JLocalDateTime; cdecl;                    // (J)Ljava/time/LocalDateTime; A: $1
    function plusHours(hours : Int64) : JLocalDateTime; cdecl;                  // (J)Ljava/time/LocalDateTime; A: $1
    function plusMinutes(minutes : Int64) : JLocalDateTime; cdecl;              // (J)Ljava/time/LocalDateTime; A: $1
    function plusMonths(months : Int64) : JLocalDateTime; cdecl;                // (J)Ljava/time/LocalDateTime; A: $1
    function plusNanos(nanos : Int64) : JLocalDateTime; cdecl;                  // (J)Ljava/time/LocalDateTime; A: $1
    function plusSeconds(seconds : Int64) : JLocalDateTime; cdecl;              // (J)Ljava/time/LocalDateTime; A: $1
    function plusWeeks(weeks : Int64) : JLocalDateTime; cdecl;                  // (J)Ljava/time/LocalDateTime; A: $1
    function plusYears(years : Int64) : JLocalDateTime; cdecl;                  // (J)Ljava/time/LocalDateTime; A: $1
    function query(query : JTemporalQuery) : JObject; cdecl;                    // (Ljava/time/temporal/TemporalQuery;)Ljava/lang/Object; A: $1
    function range(field : JTemporalField) : JValueRange; cdecl;                // (Ljava/time/temporal/TemporalField;)Ljava/time/temporal/ValueRange; A: $1
    function toLocalDate : JLocalDate; cdecl;                                   // ()Ljava/time/LocalDate; A: $1
    function toLocalTime : JLocalTime; cdecl;                                   // ()Ljava/time/LocalTime; A: $1
    function toString : JString; cdecl;                                         // ()Ljava/lang/String; A: $1
    function truncatedTo(&unit : JTemporalUnit) : JLocalDateTime; cdecl;        // (Ljava/time/temporal/TemporalUnit;)Ljava/time/LocalDateTime; A: $1
    function withDayOfMonth(dayOfMonth : Integer) : JLocalDateTime; cdecl;      // (I)Ljava/time/LocalDateTime; A: $1
    function withDayOfYear(dayOfYear : Integer) : JLocalDateTime; cdecl;        // (I)Ljava/time/LocalDateTime; A: $1
    function withHour(hour : Integer) : JLocalDateTime; cdecl;                  // (I)Ljava/time/LocalDateTime; A: $1
    function withMinute(minute : Integer) : JLocalDateTime; cdecl;              // (I)Ljava/time/LocalDateTime; A: $1
    function withMonth(month : Integer) : JLocalDateTime; cdecl;                // (I)Ljava/time/LocalDateTime; A: $1
    function withNano(nanoOfSecond : Integer) : JLocalDateTime; cdecl;          // (I)Ljava/time/LocalDateTime; A: $1
    function withSecond(second : Integer) : JLocalDateTime; cdecl;              // (I)Ljava/time/LocalDateTime; A: $1
    function withYear(year : Integer) : JLocalDateTime; cdecl;                  // (I)Ljava/time/LocalDateTime; A: $1
    property MAX : JLocalDateTime read _GetMAX;                                 // Ljava/time/LocalDateTime; A: $19
    property MIN : JLocalDateTime read _GetMIN;                                 // Ljava/time/LocalDateTime; A: $19
  end;

  [JavaSignature('java/time/LocalDateTime')]
  JLocalDateTime = interface(JObject)
    ['{11E1D4C9-8B3B-4A72-84CE-85D4CC492C38}']
    function &until(endExclusive : JTemporal; &unit : JTemporalUnit) : Int64; cdecl;// (Ljava/time/temporal/Temporal;Ljava/time/temporal/TemporalUnit;)J A: $1
    function &with(adjuster : JTemporalAdjuster) : JLocalDateTime; cdecl; overload;// (Ljava/time/temporal/TemporalAdjuster;)Ljava/time/LocalDateTime; A: $1
    function &with(field : JTemporalField; newValue : Int64) : JLocalDateTime; cdecl; overload;// (Ljava/time/temporal/TemporalField;J)Ljava/time/LocalDateTime; A: $1
    function adjustInto(temporal : JTemporal) : JTemporal; cdecl;               // (Ljava/time/temporal/Temporal;)Ljava/time/temporal/Temporal; A: $1
    function atOffset(offset : JZoneOffset) : JOffsetDateTime; cdecl;           // (Ljava/time/ZoneOffset;)Ljava/time/OffsetDateTime; A: $1
    function atZone(zone : JZoneId) : JZonedDateTime; cdecl;                    // (Ljava/time/ZoneId;)Ljava/time/ZonedDateTime; A: $1
    function compareTo(other : JChronoLocalDateTime) : Integer; cdecl;          // (Ljava/time/chrono/ChronoLocalDateTime;)I A: $1
    function equals(obj : JObject) : boolean; cdecl;                            // (Ljava/lang/Object;)Z A: $1
    function format(formatter : JDateTimeFormatter) : JString; cdecl;           // (Ljava/time/format/DateTimeFormatter;)Ljava/lang/String; A: $1
    function get(field : JTemporalField) : Integer; cdecl;                      // (Ljava/time/temporal/TemporalField;)I A: $1
    function getDayOfMonth : Integer; cdecl;                                    // ()I A: $1
    function getDayOfWeek : JDayOfWeek; cdecl;                                  // ()Ljava/time/DayOfWeek; A: $1
    function getDayOfYear : Integer; cdecl;                                     // ()I A: $1
    function getHour : Integer; cdecl;                                          // ()I A: $1
    function getLong(field : JTemporalField) : Int64; cdecl;                    // (Ljava/time/temporal/TemporalField;)J A: $1
    function getMinute : Integer; cdecl;                                        // ()I A: $1
    function getMonth : JMonth; cdecl;                                          // ()Ljava/time/Month; A: $1
    function getMonthValue : Integer; cdecl;                                    // ()I A: $1
    function getNano : Integer; cdecl;                                          // ()I A: $1
    function getSecond : Integer; cdecl;                                        // ()I A: $1
    function getYear : Integer; cdecl;                                          // ()I A: $1
    function hashCode : Integer; cdecl;                                         // ()I A: $1
    function isAfter(other : JChronoLocalDateTime) : boolean; cdecl;            // (Ljava/time/chrono/ChronoLocalDateTime;)Z A: $1
    function isBefore(other : JChronoLocalDateTime) : boolean; cdecl;           // (Ljava/time/chrono/ChronoLocalDateTime;)Z A: $1
    function isEqual(other : JChronoLocalDateTime) : boolean; cdecl;            // (Ljava/time/chrono/ChronoLocalDateTime;)Z A: $1
    function isSupported(&unit : JTemporalUnit) : boolean; cdecl; overload;     // (Ljava/time/temporal/TemporalUnit;)Z A: $1
    function isSupported(field : JTemporalField) : boolean; cdecl; overload;    // (Ljava/time/temporal/TemporalField;)Z A: $1
    function minus(amountToSubtract : Int64; &unit : JTemporalUnit) : JLocalDateTime; cdecl; overload;// (JLjava/time/temporal/TemporalUnit;)Ljava/time/LocalDateTime; A: $1
    function minus(amountToSubtract : JTemporalAmount) : JLocalDateTime; cdecl; overload;// (Ljava/time/temporal/TemporalAmount;)Ljava/time/LocalDateTime; A: $1
    function minusDays(days : Int64) : JLocalDateTime; cdecl;                   // (J)Ljava/time/LocalDateTime; A: $1
    function minusHours(hours : Int64) : JLocalDateTime; cdecl;                 // (J)Ljava/time/LocalDateTime; A: $1
    function minusMinutes(minutes : Int64) : JLocalDateTime; cdecl;             // (J)Ljava/time/LocalDateTime; A: $1
    function minusMonths(months : Int64) : JLocalDateTime; cdecl;               // (J)Ljava/time/LocalDateTime; A: $1
    function minusNanos(nanos : Int64) : JLocalDateTime; cdecl;                 // (J)Ljava/time/LocalDateTime; A: $1
    function minusSeconds(seconds : Int64) : JLocalDateTime; cdecl;             // (J)Ljava/time/LocalDateTime; A: $1
    function minusWeeks(weeks : Int64) : JLocalDateTime; cdecl;                 // (J)Ljava/time/LocalDateTime; A: $1
    function minusYears(years : Int64) : JLocalDateTime; cdecl;                 // (J)Ljava/time/LocalDateTime; A: $1
    function plus(amountToAdd : Int64; &unit : JTemporalUnit) : JLocalDateTime; cdecl; overload;// (JLjava/time/temporal/TemporalUnit;)Ljava/time/LocalDateTime; A: $1
    function plus(amountToAdd : JTemporalAmount) : JLocalDateTime; cdecl; overload;// (Ljava/time/temporal/TemporalAmount;)Ljava/time/LocalDateTime; A: $1
    function plusDays(days : Int64) : JLocalDateTime; cdecl;                    // (J)Ljava/time/LocalDateTime; A: $1
    function plusHours(hours : Int64) : JLocalDateTime; cdecl;                  // (J)Ljava/time/LocalDateTime; A: $1
    function plusMinutes(minutes : Int64) : JLocalDateTime; cdecl;              // (J)Ljava/time/LocalDateTime; A: $1
    function plusMonths(months : Int64) : JLocalDateTime; cdecl;                // (J)Ljava/time/LocalDateTime; A: $1
    function plusNanos(nanos : Int64) : JLocalDateTime; cdecl;                  // (J)Ljava/time/LocalDateTime; A: $1
    function plusSeconds(seconds : Int64) : JLocalDateTime; cdecl;              // (J)Ljava/time/LocalDateTime; A: $1
    function plusWeeks(weeks : Int64) : JLocalDateTime; cdecl;                  // (J)Ljava/time/LocalDateTime; A: $1
    function plusYears(years : Int64) : JLocalDateTime; cdecl;                  // (J)Ljava/time/LocalDateTime; A: $1
    function query(query : JTemporalQuery) : JObject; cdecl;                    // (Ljava/time/temporal/TemporalQuery;)Ljava/lang/Object; A: $1
    function range(field : JTemporalField) : JValueRange; cdecl;                // (Ljava/time/temporal/TemporalField;)Ljava/time/temporal/ValueRange; A: $1
    function toLocalDate : JLocalDate; cdecl;                                   // ()Ljava/time/LocalDate; A: $1
    function toLocalTime : JLocalTime; cdecl;                                   // ()Ljava/time/LocalTime; A: $1
    function toString : JString; cdecl;                                         // ()Ljava/lang/String; A: $1
    function truncatedTo(&unit : JTemporalUnit) : JLocalDateTime; cdecl;        // (Ljava/time/temporal/TemporalUnit;)Ljava/time/LocalDateTime; A: $1
    function withDayOfMonth(dayOfMonth : Integer) : JLocalDateTime; cdecl;      // (I)Ljava/time/LocalDateTime; A: $1
    function withDayOfYear(dayOfYear : Integer) : JLocalDateTime; cdecl;        // (I)Ljava/time/LocalDateTime; A: $1
    function withHour(hour : Integer) : JLocalDateTime; cdecl;                  // (I)Ljava/time/LocalDateTime; A: $1
    function withMinute(minute : Integer) : JLocalDateTime; cdecl;              // (I)Ljava/time/LocalDateTime; A: $1
    function withMonth(month : Integer) : JLocalDateTime; cdecl;                // (I)Ljava/time/LocalDateTime; A: $1
    function withNano(nanoOfSecond : Integer) : JLocalDateTime; cdecl;          // (I)Ljava/time/LocalDateTime; A: $1
    function withSecond(second : Integer) : JLocalDateTime; cdecl;              // (I)Ljava/time/LocalDateTime; A: $1
    function withYear(year : Integer) : JLocalDateTime; cdecl;                  // (I)Ljava/time/LocalDateTime; A: $1
  end;

  TJLocalDateTime = class(TJavaGenericImport<JLocalDateTimeClass, JLocalDateTime>)
  end;

  // Merged from: .\java.time.LocalTime.pas
  JLocalTimeClass = interface(JObjectClass)
    ['{54E534ED-D897-4848-9A8D-67469271C23F}']
    function &of(hour : Integer; minute : Integer) : JLocalTime; cdecl; overload;// (II)Ljava/time/LocalTime; A: $9
    function &of(hour : Integer; minute : Integer; second : Integer) : JLocalTime; cdecl; overload;// (III)Ljava/time/LocalTime; A: $9
    function &of(hour : Integer; minute : Integer; second : Integer; nanoOfSecond : Integer) : JLocalTime; cdecl; overload;// (IIII)Ljava/time/LocalTime; A: $9
    function &until(endExclusive : JTemporal; &unit : JTemporalUnit) : Int64; cdecl;// (Ljava/time/temporal/Temporal;Ljava/time/temporal/TemporalUnit;)J A: $1
    function &with(adjuster : JTemporalAdjuster) : JLocalTime; cdecl; overload; // (Ljava/time/temporal/TemporalAdjuster;)Ljava/time/LocalTime; A: $1
    function &with(field : JTemporalField; newValue : Int64) : JLocalTime; cdecl; overload;// (Ljava/time/temporal/TemporalField;J)Ljava/time/LocalTime; A: $1
    function _GetMAX : JLocalTime; cdecl;                                       //  A: $19
    function _GetMIDNIGHT : JLocalTime; cdecl;                                  //  A: $19
    function _GetMIN : JLocalTime; cdecl;                                       //  A: $19
    function _GetNOON : JLocalTime; cdecl;                                      //  A: $19
    function adjustInto(temporal : JTemporal) : JTemporal; cdecl;               // (Ljava/time/temporal/Temporal;)Ljava/time/temporal/Temporal; A: $1
    function atDate(date : JLocalDate) : JLocalDateTime; cdecl;                 // (Ljava/time/LocalDate;)Ljava/time/LocalDateTime; A: $1
    function atOffset(offset : JZoneOffset) : JOffsetTime; cdecl;               // (Ljava/time/ZoneOffset;)Ljava/time/OffsetTime; A: $1
    function compareTo(other : JLocalTime) : Integer; cdecl;                    // (Ljava/time/LocalTime;)I A: $1
    function equals(obj : JObject) : boolean; cdecl;                            // (Ljava/lang/Object;)Z A: $1
    function format(formatter : JDateTimeFormatter) : JString; cdecl;           // (Ljava/time/format/DateTimeFormatter;)Ljava/lang/String; A: $1
    function from(temporal : JTemporalAccessor) : JLocalTime; cdecl;            // (Ljava/time/temporal/TemporalAccessor;)Ljava/time/LocalTime; A: $9
    function get(field : JTemporalField) : Integer; cdecl;                      // (Ljava/time/temporal/TemporalField;)I A: $1
    function getHour : Integer; cdecl;                                          // ()I A: $1
    function getLong(field : JTemporalField) : Int64; cdecl;                    // (Ljava/time/temporal/TemporalField;)J A: $1
    function getMinute : Integer; cdecl;                                        // ()I A: $1
    function getNano : Integer; cdecl;                                          // ()I A: $1
    function getSecond : Integer; cdecl;                                        // ()I A: $1
    function hashCode : Integer; cdecl;                                         // ()I A: $1
    function isAfter(other : JLocalTime) : boolean; cdecl;                      // (Ljava/time/LocalTime;)Z A: $1
    function isBefore(other : JLocalTime) : boolean; cdecl;                     // (Ljava/time/LocalTime;)Z A: $1
    function isSupported(&unit : JTemporalUnit) : boolean; cdecl; overload;     // (Ljava/time/temporal/TemporalUnit;)Z A: $1
    function isSupported(field : JTemporalField) : boolean; cdecl; overload;    // (Ljava/time/temporal/TemporalField;)Z A: $1
    function minus(amountToSubtract : Int64; &unit : JTemporalUnit) : JLocalTime; cdecl; overload;// (JLjava/time/temporal/TemporalUnit;)Ljava/time/LocalTime; A: $1
    function minus(amountToSubtract : JTemporalAmount) : JLocalTime; cdecl; overload;// (Ljava/time/temporal/TemporalAmount;)Ljava/time/LocalTime; A: $1
    function minusHours(hoursToSubtract : Int64) : JLocalTime; cdecl;           // (J)Ljava/time/LocalTime; A: $1
    function minusMinutes(minutesToSubtract : Int64) : JLocalTime; cdecl;       // (J)Ljava/time/LocalTime; A: $1
    function minusNanos(nanosToSubtract : Int64) : JLocalTime; cdecl;           // (J)Ljava/time/LocalTime; A: $1
    function minusSeconds(secondsToSubtract : Int64) : JLocalTime; cdecl;       // (J)Ljava/time/LocalTime; A: $1
    function now : JLocalTime; cdecl; overload;                                 // ()Ljava/time/LocalTime; A: $9
    function now(clock : JClock) : JLocalTime; cdecl; overload;                 // (Ljava/time/Clock;)Ljava/time/LocalTime; A: $9
    function now(zone : JZoneId) : JLocalTime; cdecl; overload;                 // (Ljava/time/ZoneId;)Ljava/time/LocalTime; A: $9
    function ofNanoOfDay(nanoOfDay : Int64) : JLocalTime; cdecl;                // (J)Ljava/time/LocalTime; A: $9
    function ofSecondOfDay(secondOfDay : Int64) : JLocalTime; cdecl;            // (J)Ljava/time/LocalTime; A: $9
    function parse(text : JCharSequence) : JLocalTime; cdecl; overload;         // (Ljava/lang/CharSequence;)Ljava/time/LocalTime; A: $9
    function parse(text : JCharSequence; formatter : JDateTimeFormatter) : JLocalTime; cdecl; overload;// (Ljava/lang/CharSequence;Ljava/time/format/DateTimeFormatter;)Ljava/time/LocalTime; A: $9
    function plus(amountToAdd : Int64; &unit : JTemporalUnit) : JLocalTime; cdecl; overload;// (JLjava/time/temporal/TemporalUnit;)Ljava/time/LocalTime; A: $1
    function plus(amountToAdd : JTemporalAmount) : JLocalTime; cdecl; overload; // (Ljava/time/temporal/TemporalAmount;)Ljava/time/LocalTime; A: $1
    function plusHours(hoursToAdd : Int64) : JLocalTime; cdecl;                 // (J)Ljava/time/LocalTime; A: $1
    function plusMinutes(minutesToAdd : Int64) : JLocalTime; cdecl;             // (J)Ljava/time/LocalTime; A: $1
    function plusNanos(nanosToAdd : Int64) : JLocalTime; cdecl;                 // (J)Ljava/time/LocalTime; A: $1
    function plusSeconds(secondstoAdd : Int64) : JLocalTime; cdecl;             // (J)Ljava/time/LocalTime; A: $1
    function query(query : JTemporalQuery) : JObject; cdecl;                    // (Ljava/time/temporal/TemporalQuery;)Ljava/lang/Object; A: $1
    function range(field : JTemporalField) : JValueRange; cdecl;                // (Ljava/time/temporal/TemporalField;)Ljava/time/temporal/ValueRange; A: $1
    function toNanoOfDay : Int64; cdecl;                                        // ()J A: $1
    function toSecondOfDay : Integer; cdecl;                                    // ()I A: $1
    function toString : JString; cdecl;                                         // ()Ljava/lang/String; A: $1
    function truncatedTo(&unit : JTemporalUnit) : JLocalTime; cdecl;            // (Ljava/time/temporal/TemporalUnit;)Ljava/time/LocalTime; A: $1
    function withHour(hour : Integer) : JLocalTime; cdecl;                      // (I)Ljava/time/LocalTime; A: $1
    function withMinute(minute : Integer) : JLocalTime; cdecl;                  // (I)Ljava/time/LocalTime; A: $1
    function withNano(nanoOfSecond : Integer) : JLocalTime; cdecl;              // (I)Ljava/time/LocalTime; A: $1
    function withSecond(second : Integer) : JLocalTime; cdecl;                  // (I)Ljava/time/LocalTime; A: $1
    property MAX : JLocalTime read _GetMAX;                                     // Ljava/time/LocalTime; A: $19
    property MIDNIGHT : JLocalTime read _GetMIDNIGHT;                           // Ljava/time/LocalTime; A: $19
    property MIN : JLocalTime read _GetMIN;                                     // Ljava/time/LocalTime; A: $19
    property NOON : JLocalTime read _GetNOON;                                   // Ljava/time/LocalTime; A: $19
  end;

  [JavaSignature('java/time/LocalTime')]
  JLocalTime = interface(JObject)
    ['{AB246EF2-7906-40A0-8C66-3F4A6D153C7D}']
    function &until(endExclusive : JTemporal; &unit : JTemporalUnit) : Int64; cdecl;// (Ljava/time/temporal/Temporal;Ljava/time/temporal/TemporalUnit;)J A: $1
    function &with(adjuster : JTemporalAdjuster) : JLocalTime; cdecl; overload; // (Ljava/time/temporal/TemporalAdjuster;)Ljava/time/LocalTime; A: $1
    function &with(field : JTemporalField; newValue : Int64) : JLocalTime; cdecl; overload;// (Ljava/time/temporal/TemporalField;J)Ljava/time/LocalTime; A: $1
    function adjustInto(temporal : JTemporal) : JTemporal; cdecl;               // (Ljava/time/temporal/Temporal;)Ljava/time/temporal/Temporal; A: $1
    function atDate(date : JLocalDate) : JLocalDateTime; cdecl;                 // (Ljava/time/LocalDate;)Ljava/time/LocalDateTime; A: $1
    function atOffset(offset : JZoneOffset) : JOffsetTime; cdecl;               // (Ljava/time/ZoneOffset;)Ljava/time/OffsetTime; A: $1
    function compareTo(other : JLocalTime) : Integer; cdecl;                    // (Ljava/time/LocalTime;)I A: $1
    function equals(obj : JObject) : boolean; cdecl;                            // (Ljava/lang/Object;)Z A: $1
    function format(formatter : JDateTimeFormatter) : JString; cdecl;           // (Ljava/time/format/DateTimeFormatter;)Ljava/lang/String; A: $1
    function get(field : JTemporalField) : Integer; cdecl;                      // (Ljava/time/temporal/TemporalField;)I A: $1
    function getHour : Integer; cdecl;                                          // ()I A: $1
    function getLong(field : JTemporalField) : Int64; cdecl;                    // (Ljava/time/temporal/TemporalField;)J A: $1
    function getMinute : Integer; cdecl;                                        // ()I A: $1
    function getNano : Integer; cdecl;                                          // ()I A: $1
    function getSecond : Integer; cdecl;                                        // ()I A: $1
    function hashCode : Integer; cdecl;                                         // ()I A: $1
    function isAfter(other : JLocalTime) : boolean; cdecl;                      // (Ljava/time/LocalTime;)Z A: $1
    function isBefore(other : JLocalTime) : boolean; cdecl;                     // (Ljava/time/LocalTime;)Z A: $1
    function isSupported(&unit : JTemporalUnit) : boolean; cdecl; overload;     // (Ljava/time/temporal/TemporalUnit;)Z A: $1
    function isSupported(field : JTemporalField) : boolean; cdecl; overload;    // (Ljava/time/temporal/TemporalField;)Z A: $1
    function minus(amountToSubtract : Int64; &unit : JTemporalUnit) : JLocalTime; cdecl; overload;// (JLjava/time/temporal/TemporalUnit;)Ljava/time/LocalTime; A: $1
    function minus(amountToSubtract : JTemporalAmount) : JLocalTime; cdecl; overload;// (Ljava/time/temporal/TemporalAmount;)Ljava/time/LocalTime; A: $1
    function minusHours(hoursToSubtract : Int64) : JLocalTime; cdecl;           // (J)Ljava/time/LocalTime; A: $1
    function minusMinutes(minutesToSubtract : Int64) : JLocalTime; cdecl;       // (J)Ljava/time/LocalTime; A: $1
    function minusNanos(nanosToSubtract : Int64) : JLocalTime; cdecl;           // (J)Ljava/time/LocalTime; A: $1
    function minusSeconds(secondsToSubtract : Int64) : JLocalTime; cdecl;       // (J)Ljava/time/LocalTime; A: $1
    function plus(amountToAdd : Int64; &unit : JTemporalUnit) : JLocalTime; cdecl; overload;// (JLjava/time/temporal/TemporalUnit;)Ljava/time/LocalTime; A: $1
    function plus(amountToAdd : JTemporalAmount) : JLocalTime; cdecl; overload; // (Ljava/time/temporal/TemporalAmount;)Ljava/time/LocalTime; A: $1
    function plusHours(hoursToAdd : Int64) : JLocalTime; cdecl;                 // (J)Ljava/time/LocalTime; A: $1
    function plusMinutes(minutesToAdd : Int64) : JLocalTime; cdecl;             // (J)Ljava/time/LocalTime; A: $1
    function plusNanos(nanosToAdd : Int64) : JLocalTime; cdecl;                 // (J)Ljava/time/LocalTime; A: $1
    function plusSeconds(secondstoAdd : Int64) : JLocalTime; cdecl;             // (J)Ljava/time/LocalTime; A: $1
    function query(query : JTemporalQuery) : JObject; cdecl;                    // (Ljava/time/temporal/TemporalQuery;)Ljava/lang/Object; A: $1
    function range(field : JTemporalField) : JValueRange; cdecl;                // (Ljava/time/temporal/TemporalField;)Ljava/time/temporal/ValueRange; A: $1
    function toNanoOfDay : Int64; cdecl;                                        // ()J A: $1
    function toSecondOfDay : Integer; cdecl;                                    // ()I A: $1
    function toString : JString; cdecl;                                         // ()Ljava/lang/String; A: $1
    function truncatedTo(&unit : JTemporalUnit) : JLocalTime; cdecl;            // (Ljava/time/temporal/TemporalUnit;)Ljava/time/LocalTime; A: $1
    function withHour(hour : Integer) : JLocalTime; cdecl;                      // (I)Ljava/time/LocalTime; A: $1
    function withMinute(minute : Integer) : JLocalTime; cdecl;                  // (I)Ljava/time/LocalTime; A: $1
    function withNano(nanoOfSecond : Integer) : JLocalTime; cdecl;              // (I)Ljava/time/LocalTime; A: $1
    function withSecond(second : Integer) : JLocalTime; cdecl;                  // (I)Ljava/time/LocalTime; A: $1
  end;

  TJLocalTime = class(TJavaGenericImport<JLocalTimeClass, JLocalTime>)
  end;


  // Merged from: .\java.time.OffsetDateTime.pas
  JOffsetDateTimeClass = interface(JObjectClass)
    ['{6C6420A3-323E-462E-A4A4-463C0C4D07A7}']
    function &of(date : JLocalDate; time : JLocalTime; offset : JZoneOffset) : JOffsetDateTime; cdecl; overload;// (Ljava/time/LocalDate;Ljava/time/LocalTime;Ljava/time/ZoneOffset;)Ljava/time/OffsetDateTime; A: $9
    function &of(dateTime : JLocalDateTime; offset : JZoneOffset) : JOffsetDateTime; cdecl; overload;// (Ljava/time/LocalDateTime;Ljava/time/ZoneOffset;)Ljava/time/OffsetDateTime; A: $9
    function &of(year : Integer; month : Integer; dayOfMonth : Integer; hour : Integer; minute : Integer; second : Integer; nanoOfSecond : Integer; offset : JZoneOffset) : JOffsetDateTime; cdecl; overload;// (IIIIIIILjava/time/ZoneOffset;)Ljava/time/OffsetDateTime; A: $9
    function &until(endExclusive : JTemporal; &unit : JTemporalUnit) : Int64; cdecl;// (Ljava/time/temporal/Temporal;Ljava/time/temporal/TemporalUnit;)J A: $1
    function &with(adjuster : JTemporalAdjuster) : JOffsetDateTime; cdecl; overload;// (Ljava/time/temporal/TemporalAdjuster;)Ljava/time/OffsetDateTime; A: $1
    function &with(field : JTemporalField; newValue : Int64) : JOffsetDateTime; cdecl; overload;// (Ljava/time/temporal/TemporalField;J)Ljava/time/OffsetDateTime; A: $1
    function _GetMAX : JOffsetDateTime; cdecl;                                  //  A: $19
    function _GetMIN : JOffsetDateTime; cdecl;                                  //  A: $19
    function adjustInto(temporal : JTemporal) : JTemporal; cdecl;               // (Ljava/time/temporal/Temporal;)Ljava/time/temporal/Temporal; A: $1
    function atZoneSameInstant(zone : JZoneId) : JZonedDateTime; cdecl;         // (Ljava/time/ZoneId;)Ljava/time/ZonedDateTime; A: $1
    function atZoneSimilarLocal(zone : JZoneId) : JZonedDateTime; cdecl;        // (Ljava/time/ZoneId;)Ljava/time/ZonedDateTime; A: $1
    function compareTo(other : JOffsetDateTime) : Integer; cdecl;               // (Ljava/time/OffsetDateTime;)I A: $1
    function equals(obj : JObject) : boolean; cdecl;                            // (Ljava/lang/Object;)Z A: $1
    function format(formatter : JDateTimeFormatter) : JString; cdecl;           // (Ljava/time/format/DateTimeFormatter;)Ljava/lang/String; A: $1
    function from(temporal : JTemporalAccessor) : JOffsetDateTime; cdecl;       // (Ljava/time/temporal/TemporalAccessor;)Ljava/time/OffsetDateTime; A: $9
    function get(field : JTemporalField) : Integer; cdecl;                      // (Ljava/time/temporal/TemporalField;)I A: $1
    function getDayOfMonth : Integer; cdecl;                                    // ()I A: $1
    function getDayOfWeek : JDayOfWeek; cdecl;                                  // ()Ljava/time/DayOfWeek; A: $1
    function getDayOfYear : Integer; cdecl;                                     // ()I A: $1
    function getHour : Integer; cdecl;                                          // ()I A: $1
    function getLong(field : JTemporalField) : Int64; cdecl;                    // (Ljava/time/temporal/TemporalField;)J A: $1
    function getMinute : Integer; cdecl;                                        // ()I A: $1
    function getMonth : JMonth; cdecl;                                          // ()Ljava/time/Month; A: $1
    function getMonthValue : Integer; cdecl;                                    // ()I A: $1
    function getNano : Integer; cdecl;                                          // ()I A: $1
    function getOffset : JZoneOffset; cdecl;                                    // ()Ljava/time/ZoneOffset; A: $1
    function getSecond : Integer; cdecl;                                        // ()I A: $1
    function getYear : Integer; cdecl;                                          // ()I A: $1
    function hashCode : Integer; cdecl;                                         // ()I A: $1
    function isAfter(other : JOffsetDateTime) : boolean; cdecl;                 // (Ljava/time/OffsetDateTime;)Z A: $1
    function isBefore(other : JOffsetDateTime) : boolean; cdecl;                // (Ljava/time/OffsetDateTime;)Z A: $1
    function isEqual(other : JOffsetDateTime) : boolean; cdecl;                 // (Ljava/time/OffsetDateTime;)Z A: $1
    function isSupported(&unit : JTemporalUnit) : boolean; cdecl; overload;     // (Ljava/time/temporal/TemporalUnit;)Z A: $1
    function isSupported(field : JTemporalField) : boolean; cdecl; overload;    // (Ljava/time/temporal/TemporalField;)Z A: $1
    function minus(amountToSubtract : Int64; &unit : JTemporalUnit) : JOffsetDateTime; cdecl; overload;// (JLjava/time/temporal/TemporalUnit;)Ljava/time/OffsetDateTime; A: $1
    function minus(amountToSubtract : JTemporalAmount) : JOffsetDateTime; cdecl; overload;// (Ljava/time/temporal/TemporalAmount;)Ljava/time/OffsetDateTime; A: $1
    function minusDays(days : Int64) : JOffsetDateTime; cdecl;                  // (J)Ljava/time/OffsetDateTime; A: $1
    function minusHours(hours : Int64) : JOffsetDateTime; cdecl;                // (J)Ljava/time/OffsetDateTime; A: $1
    function minusMinutes(minutes : Int64) : JOffsetDateTime; cdecl;            // (J)Ljava/time/OffsetDateTime; A: $1
    function minusMonths(months : Int64) : JOffsetDateTime; cdecl;              // (J)Ljava/time/OffsetDateTime; A: $1
    function minusNanos(nanos : Int64) : JOffsetDateTime; cdecl;                // (J)Ljava/time/OffsetDateTime; A: $1
    function minusSeconds(seconds : Int64) : JOffsetDateTime; cdecl;            // (J)Ljava/time/OffsetDateTime; A: $1
    function minusWeeks(weeks : Int64) : JOffsetDateTime; cdecl;                // (J)Ljava/time/OffsetDateTime; A: $1
    function minusYears(years : Int64) : JOffsetDateTime; cdecl;                // (J)Ljava/time/OffsetDateTime; A: $1
    function now : JOffsetDateTime; cdecl; overload;                            // ()Ljava/time/OffsetDateTime; A: $9
    function now(clock : JClock) : JOffsetDateTime; cdecl; overload;            // (Ljava/time/Clock;)Ljava/time/OffsetDateTime; A: $9
    function now(zone : JZoneId) : JOffsetDateTime; cdecl; overload;            // (Ljava/time/ZoneId;)Ljava/time/OffsetDateTime; A: $9
    function ofInstant(instant : JInstant; zone : JZoneId) : JOffsetDateTime; cdecl;// (Ljava/time/Instant;Ljava/time/ZoneId;)Ljava/time/OffsetDateTime; A: $9
    function parse(text : JCharSequence) : JOffsetDateTime; cdecl; overload;    // (Ljava/lang/CharSequence;)Ljava/time/OffsetDateTime; A: $9
    function parse(text : JCharSequence; formatter : JDateTimeFormatter) : JOffsetDateTime; cdecl; overload;// (Ljava/lang/CharSequence;Ljava/time/format/DateTimeFormatter;)Ljava/time/OffsetDateTime; A: $9
    function plus(amountToAdd : Int64; &unit : JTemporalUnit) : JOffsetDateTime; cdecl; overload;// (JLjava/time/temporal/TemporalUnit;)Ljava/time/OffsetDateTime; A: $1
    function plus(amountToAdd : JTemporalAmount) : JOffsetDateTime; cdecl; overload;// (Ljava/time/temporal/TemporalAmount;)Ljava/time/OffsetDateTime; A: $1
    function plusDays(days : Int64) : JOffsetDateTime; cdecl;                   // (J)Ljava/time/OffsetDateTime; A: $1
    function plusHours(hours : Int64) : JOffsetDateTime; cdecl;                 // (J)Ljava/time/OffsetDateTime; A: $1
    function plusMinutes(minutes : Int64) : JOffsetDateTime; cdecl;             // (J)Ljava/time/OffsetDateTime; A: $1
    function plusMonths(months : Int64) : JOffsetDateTime; cdecl;               // (J)Ljava/time/OffsetDateTime; A: $1
    function plusNanos(nanos : Int64) : JOffsetDateTime; cdecl;                 // (J)Ljava/time/OffsetDateTime; A: $1
    function plusSeconds(seconds : Int64) : JOffsetDateTime; cdecl;             // (J)Ljava/time/OffsetDateTime; A: $1
    function plusWeeks(weeks : Int64) : JOffsetDateTime; cdecl;                 // (J)Ljava/time/OffsetDateTime; A: $1
    function plusYears(years : Int64) : JOffsetDateTime; cdecl;                 // (J)Ljava/time/OffsetDateTime; A: $1
    function query(query : JTemporalQuery) : JObject; cdecl;                    // (Ljava/time/temporal/TemporalQuery;)Ljava/lang/Object; A: $1
    function range(field : JTemporalField) : JValueRange; cdecl;                // (Ljava/time/temporal/TemporalField;)Ljava/time/temporal/ValueRange; A: $1
    function timeLineOrder : JComparator; cdecl;                                // ()Ljava/util/Comparator; A: $9
    function toEpochSecond : Int64; cdecl;                                      // ()J A: $1
    function toInstant : JInstant; cdecl;                                       // ()Ljava/time/Instant; A: $1
    function toLocalDate : JLocalDate; cdecl;                                   // ()Ljava/time/LocalDate; A: $1
    function toLocalDateTime : JLocalDateTime; cdecl;                           // ()Ljava/time/LocalDateTime; A: $1
    function toLocalTime : JLocalTime; cdecl;                                   // ()Ljava/time/LocalTime; A: $1
    function toOffsetTime : JOffsetTime; cdecl;                                 // ()Ljava/time/OffsetTime; A: $1
    function toString : JString; cdecl;                                         // ()Ljava/lang/String; A: $1
    function toZonedDateTime : JZonedDateTime; cdecl;                           // ()Ljava/time/ZonedDateTime; A: $1
    function truncatedTo(&unit : JTemporalUnit) : JOffsetDateTime; cdecl;       // (Ljava/time/temporal/TemporalUnit;)Ljava/time/OffsetDateTime; A: $1
    function withDayOfMonth(dayOfMonth : Integer) : JOffsetDateTime; cdecl;     // (I)Ljava/time/OffsetDateTime; A: $1
    function withDayOfYear(dayOfYear : Integer) : JOffsetDateTime; cdecl;       // (I)Ljava/time/OffsetDateTime; A: $1
    function withHour(hour : Integer) : JOffsetDateTime; cdecl;                 // (I)Ljava/time/OffsetDateTime; A: $1
    function withMinute(minute : Integer) : JOffsetDateTime; cdecl;             // (I)Ljava/time/OffsetDateTime; A: $1
    function withMonth(month : Integer) : JOffsetDateTime; cdecl;               // (I)Ljava/time/OffsetDateTime; A: $1
    function withNano(nanoOfSecond : Integer) : JOffsetDateTime; cdecl;         // (I)Ljava/time/OffsetDateTime; A: $1
    function withOffsetSameInstant(offset : JZoneOffset) : JOffsetDateTime; cdecl;// (Ljava/time/ZoneOffset;)Ljava/time/OffsetDateTime; A: $1
    function withOffsetSameLocal(offset : JZoneOffset) : JOffsetDateTime; cdecl;// (Ljava/time/ZoneOffset;)Ljava/time/OffsetDateTime; A: $1
    function withSecond(second : Integer) : JOffsetDateTime; cdecl;             // (I)Ljava/time/OffsetDateTime; A: $1
    function withYear(year : Integer) : JOffsetDateTime; cdecl;                 // (I)Ljava/time/OffsetDateTime; A: $1
    property MAX : JOffsetDateTime read _GetMAX;                                // Ljava/time/OffsetDateTime; A: $19
    property MIN : JOffsetDateTime read _GetMIN;                                // Ljava/time/OffsetDateTime; A: $19
  end;

  [JavaSignature('java/time/OffsetDateTime')]
  JOffsetDateTime = interface(JObject)
    ['{0615C948-90E6-471D-9809-1941FFB2337D}']
    function &until(endExclusive : JTemporal; &unit : JTemporalUnit) : Int64; cdecl;// (Ljava/time/temporal/Temporal;Ljava/time/temporal/TemporalUnit;)J A: $1
    function &with(adjuster : JTemporalAdjuster) : JOffsetDateTime; cdecl; overload;// (Ljava/time/temporal/TemporalAdjuster;)Ljava/time/OffsetDateTime; A: $1
    function &with(field : JTemporalField; newValue : Int64) : JOffsetDateTime; cdecl; overload;// (Ljava/time/temporal/TemporalField;J)Ljava/time/OffsetDateTime; A: $1
    function adjustInto(temporal : JTemporal) : JTemporal; cdecl;               // (Ljava/time/temporal/Temporal;)Ljava/time/temporal/Temporal; A: $1
    function atZoneSameInstant(zone : JZoneId) : JZonedDateTime; cdecl;         // (Ljava/time/ZoneId;)Ljava/time/ZonedDateTime; A: $1
    function atZoneSimilarLocal(zone : JZoneId) : JZonedDateTime; cdecl;        // (Ljava/time/ZoneId;)Ljava/time/ZonedDateTime; A: $1
    function compareTo(other : JOffsetDateTime) : Integer; cdecl;               // (Ljava/time/OffsetDateTime;)I A: $1
    function equals(obj : JObject) : boolean; cdecl;                            // (Ljava/lang/Object;)Z A: $1
    function format(formatter : JDateTimeFormatter) : JString; cdecl;           // (Ljava/time/format/DateTimeFormatter;)Ljava/lang/String; A: $1
    function get(field : JTemporalField) : Integer; cdecl;                      // (Ljava/time/temporal/TemporalField;)I A: $1
    function getDayOfMonth : Integer; cdecl;                                    // ()I A: $1
    function getDayOfWeek : JDayOfWeek; cdecl;                                  // ()Ljava/time/DayOfWeek; A: $1
    function getDayOfYear : Integer; cdecl;                                     // ()I A: $1
    function getHour : Integer; cdecl;                                          // ()I A: $1
    function getLong(field : JTemporalField) : Int64; cdecl;                    // (Ljava/time/temporal/TemporalField;)J A: $1
    function getMinute : Integer; cdecl;                                        // ()I A: $1
    function getMonth : JMonth; cdecl;                                          // ()Ljava/time/Month; A: $1
    function getMonthValue : Integer; cdecl;                                    // ()I A: $1
    function getNano : Integer; cdecl;                                          // ()I A: $1
    function getOffset : JZoneOffset; cdecl;                                    // ()Ljava/time/ZoneOffset; A: $1
    function getSecond : Integer; cdecl;                                        // ()I A: $1
    function getYear : Integer; cdecl;                                          // ()I A: $1
    function hashCode : Integer; cdecl;                                         // ()I A: $1
    function isAfter(other : JOffsetDateTime) : boolean; cdecl;                 // (Ljava/time/OffsetDateTime;)Z A: $1
    function isBefore(other : JOffsetDateTime) : boolean; cdecl;                // (Ljava/time/OffsetDateTime;)Z A: $1
    function isEqual(other : JOffsetDateTime) : boolean; cdecl;                 // (Ljava/time/OffsetDateTime;)Z A: $1
    function isSupported(&unit : JTemporalUnit) : boolean; cdecl; overload;     // (Ljava/time/temporal/TemporalUnit;)Z A: $1
    function isSupported(field : JTemporalField) : boolean; cdecl; overload;    // (Ljava/time/temporal/TemporalField;)Z A: $1
    function minus(amountToSubtract : Int64; &unit : JTemporalUnit) : JOffsetDateTime; cdecl; overload;// (JLjava/time/temporal/TemporalUnit;)Ljava/time/OffsetDateTime; A: $1
    function minus(amountToSubtract : JTemporalAmount) : JOffsetDateTime; cdecl; overload;// (Ljava/time/temporal/TemporalAmount;)Ljava/time/OffsetDateTime; A: $1
    function minusDays(days : Int64) : JOffsetDateTime; cdecl;                  // (J)Ljava/time/OffsetDateTime; A: $1
    function minusHours(hours : Int64) : JOffsetDateTime; cdecl;                // (J)Ljava/time/OffsetDateTime; A: $1
    function minusMinutes(minutes : Int64) : JOffsetDateTime; cdecl;            // (J)Ljava/time/OffsetDateTime; A: $1
    function minusMonths(months : Int64) : JOffsetDateTime; cdecl;              // (J)Ljava/time/OffsetDateTime; A: $1
    function minusNanos(nanos : Int64) : JOffsetDateTime; cdecl;                // (J)Ljava/time/OffsetDateTime; A: $1
    function minusSeconds(seconds : Int64) : JOffsetDateTime; cdecl;            // (J)Ljava/time/OffsetDateTime; A: $1
    function minusWeeks(weeks : Int64) : JOffsetDateTime; cdecl;                // (J)Ljava/time/OffsetDateTime; A: $1
    function minusYears(years : Int64) : JOffsetDateTime; cdecl;                // (J)Ljava/time/OffsetDateTime; A: $1
    function plus(amountToAdd : Int64; &unit : JTemporalUnit) : JOffsetDateTime; cdecl; overload;// (JLjava/time/temporal/TemporalUnit;)Ljava/time/OffsetDateTime; A: $1
    function plus(amountToAdd : JTemporalAmount) : JOffsetDateTime; cdecl; overload;// (Ljava/time/temporal/TemporalAmount;)Ljava/time/OffsetDateTime; A: $1
    function plusDays(days : Int64) : JOffsetDateTime; cdecl;                   // (J)Ljava/time/OffsetDateTime; A: $1
    function plusHours(hours : Int64) : JOffsetDateTime; cdecl;                 // (J)Ljava/time/OffsetDateTime; A: $1
    function plusMinutes(minutes : Int64) : JOffsetDateTime; cdecl;             // (J)Ljava/time/OffsetDateTime; A: $1
    function plusMonths(months : Int64) : JOffsetDateTime; cdecl;               // (J)Ljava/time/OffsetDateTime; A: $1
    function plusNanos(nanos : Int64) : JOffsetDateTime; cdecl;                 // (J)Ljava/time/OffsetDateTime; A: $1
    function plusSeconds(seconds : Int64) : JOffsetDateTime; cdecl;             // (J)Ljava/time/OffsetDateTime; A: $1
    function plusWeeks(weeks : Int64) : JOffsetDateTime; cdecl;                 // (J)Ljava/time/OffsetDateTime; A: $1
    function plusYears(years : Int64) : JOffsetDateTime; cdecl;                 // (J)Ljava/time/OffsetDateTime; A: $1
    function query(query : JTemporalQuery) : JObject; cdecl;                    // (Ljava/time/temporal/TemporalQuery;)Ljava/lang/Object; A: $1
    function range(field : JTemporalField) : JValueRange; cdecl;                // (Ljava/time/temporal/TemporalField;)Ljava/time/temporal/ValueRange; A: $1
    function toEpochSecond : Int64; cdecl;                                      // ()J A: $1
    function toInstant : JInstant; cdecl;                                       // ()Ljava/time/Instant; A: $1
    function toLocalDate : JLocalDate; cdecl;                                   // ()Ljava/time/LocalDate; A: $1
    function toLocalDateTime : JLocalDateTime; cdecl;                           // ()Ljava/time/LocalDateTime; A: $1
    function toLocalTime : JLocalTime; cdecl;                                   // ()Ljava/time/LocalTime; A: $1
    function toOffsetTime : JOffsetTime; cdecl;                                 // ()Ljava/time/OffsetTime; A: $1
    function toString : JString; cdecl;                                         // ()Ljava/lang/String; A: $1
    function toZonedDateTime : JZonedDateTime; cdecl;                           // ()Ljava/time/ZonedDateTime; A: $1
    function truncatedTo(&unit : JTemporalUnit) : JOffsetDateTime; cdecl;       // (Ljava/time/temporal/TemporalUnit;)Ljava/time/OffsetDateTime; A: $1
    function withDayOfMonth(dayOfMonth : Integer) : JOffsetDateTime; cdecl;     // (I)Ljava/time/OffsetDateTime; A: $1
    function withDayOfYear(dayOfYear : Integer) : JOffsetDateTime; cdecl;       // (I)Ljava/time/OffsetDateTime; A: $1
    function withHour(hour : Integer) : JOffsetDateTime; cdecl;                 // (I)Ljava/time/OffsetDateTime; A: $1
    function withMinute(minute : Integer) : JOffsetDateTime; cdecl;             // (I)Ljava/time/OffsetDateTime; A: $1
    function withMonth(month : Integer) : JOffsetDateTime; cdecl;               // (I)Ljava/time/OffsetDateTime; A: $1
    function withNano(nanoOfSecond : Integer) : JOffsetDateTime; cdecl;         // (I)Ljava/time/OffsetDateTime; A: $1
    function withOffsetSameInstant(offset : JZoneOffset) : JOffsetDateTime; cdecl;// (Ljava/time/ZoneOffset;)Ljava/time/OffsetDateTime; A: $1
    function withOffsetSameLocal(offset : JZoneOffset) : JOffsetDateTime; cdecl;// (Ljava/time/ZoneOffset;)Ljava/time/OffsetDateTime; A: $1
    function withSecond(second : Integer) : JOffsetDateTime; cdecl;             // (I)Ljava/time/OffsetDateTime; A: $1
    function withYear(year : Integer) : JOffsetDateTime; cdecl;                 // (I)Ljava/time/OffsetDateTime; A: $1
  end;

  TJOffsetDateTime = class(TJavaGenericImport<JOffsetDateTimeClass, JOffsetDateTime>)
  end;


  // Merged from: .\java.time.ZonedDateTime.pas
  JZonedDateTimeClass = interface(JObjectClass)
    ['{C24A8F91-2EBF-4918-B1A4-51A92BBB0DF2}']
    function &of(date : JLocalDate; time : JLocalTime; zone : JZoneId) : JZonedDateTime; cdecl; overload;// (Ljava/time/LocalDate;Ljava/time/LocalTime;Ljava/time/ZoneId;)Ljava/time/ZonedDateTime; A: $9
    function &of(localDateTime : JLocalDateTime; zone : JZoneId) : JZonedDateTime; cdecl; overload;// (Ljava/time/LocalDateTime;Ljava/time/ZoneId;)Ljava/time/ZonedDateTime; A: $9
    function &of(year : Integer; month : Integer; dayOfMonth : Integer; hour : Integer; minute : Integer; second : Integer; nanoOfSecond : Integer; zone : JZoneId) : JZonedDateTime; cdecl; overload;// (IIIIIIILjava/time/ZoneId;)Ljava/time/ZonedDateTime; A: $9
    function &until(endExclusive : JTemporal; &unit : JTemporalUnit) : Int64; cdecl;// (Ljava/time/temporal/Temporal;Ljava/time/temporal/TemporalUnit;)J A: $1
    function &with(adjuster : JTemporalAdjuster) : JZonedDateTime; cdecl; overload;// (Ljava/time/temporal/TemporalAdjuster;)Ljava/time/ZonedDateTime; A: $1
    function &with(field : JTemporalField; newValue : Int64) : JZonedDateTime; cdecl; overload;// (Ljava/time/temporal/TemporalField;J)Ljava/time/ZonedDateTime; A: $1
    function equals(obj : JObject) : boolean; cdecl;                            // (Ljava/lang/Object;)Z A: $1
    function format(formatter : JDateTimeFormatter) : JString; cdecl;           // (Ljava/time/format/DateTimeFormatter;)Ljava/lang/String; A: $1
    function from(temporal : JTemporalAccessor) : JZonedDateTime; cdecl;        // (Ljava/time/temporal/TemporalAccessor;)Ljava/time/ZonedDateTime; A: $9
    function get(field : JTemporalField) : Integer; cdecl;                      // (Ljava/time/temporal/TemporalField;)I A: $1
    function getDayOfMonth : Integer; cdecl;                                    // ()I A: $1
    function getDayOfWeek : JDayOfWeek; cdecl;                                  // ()Ljava/time/DayOfWeek; A: $1
    function getDayOfYear : Integer; cdecl;                                     // ()I A: $1
    function getHour : Integer; cdecl;                                          // ()I A: $1
    function getLong(field : JTemporalField) : Int64; cdecl;                    // (Ljava/time/temporal/TemporalField;)J A: $1
    function getMinute : Integer; cdecl;                                        // ()I A: $1
    function getMonth : JMonth; cdecl;                                          // ()Ljava/time/Month; A: $1
    function getMonthValue : Integer; cdecl;                                    // ()I A: $1
    function getNano : Integer; cdecl;                                          // ()I A: $1
    function getOffset : JZoneOffset; cdecl;                                    // ()Ljava/time/ZoneOffset; A: $1
    function getSecond : Integer; cdecl;                                        // ()I A: $1
    function getYear : Integer; cdecl;                                          // ()I A: $1
    function getZone : JZoneId; cdecl;                                          // ()Ljava/time/ZoneId; A: $1
    function hashCode : Integer; cdecl;                                         // ()I A: $1
    function isSupported(&unit : JTemporalUnit) : boolean; cdecl; overload;     // (Ljava/time/temporal/TemporalUnit;)Z A: $1
    function isSupported(field : JTemporalField) : boolean; cdecl; overload;    // (Ljava/time/temporal/TemporalField;)Z A: $1
    function minus(amountToSubtract : Int64; &unit : JTemporalUnit) : JZonedDateTime; cdecl; overload;// (JLjava/time/temporal/TemporalUnit;)Ljava/time/ZonedDateTime; A: $1
    function minus(amountToSubtract : JTemporalAmount) : JZonedDateTime; cdecl; overload;// (Ljava/time/temporal/TemporalAmount;)Ljava/time/ZonedDateTime; A: $1
    function minusDays(days : Int64) : JZonedDateTime; cdecl;                   // (J)Ljava/time/ZonedDateTime; A: $1
    function minusHours(hours : Int64) : JZonedDateTime; cdecl;                 // (J)Ljava/time/ZonedDateTime; A: $1
    function minusMinutes(minutes : Int64) : JZonedDateTime; cdecl;             // (J)Ljava/time/ZonedDateTime; A: $1
    function minusMonths(months : Int64) : JZonedDateTime; cdecl;               // (J)Ljava/time/ZonedDateTime; A: $1
    function minusNanos(nanos : Int64) : JZonedDateTime; cdecl;                 // (J)Ljava/time/ZonedDateTime; A: $1
    function minusSeconds(seconds : Int64) : JZonedDateTime; cdecl;             // (J)Ljava/time/ZonedDateTime; A: $1
    function minusWeeks(weeks : Int64) : JZonedDateTime; cdecl;                 // (J)Ljava/time/ZonedDateTime; A: $1
    function minusYears(years : Int64) : JZonedDateTime; cdecl;                 // (J)Ljava/time/ZonedDateTime; A: $1
    function now : JZonedDateTime; cdecl; overload;                             // ()Ljava/time/ZonedDateTime; A: $9
    function now(clock : JClock) : JZonedDateTime; cdecl; overload;             // (Ljava/time/Clock;)Ljava/time/ZonedDateTime; A: $9
    function now(zone : JZoneId) : JZonedDateTime; cdecl; overload;             // (Ljava/time/ZoneId;)Ljava/time/ZonedDateTime; A: $9
    function ofInstant(instant : JInstant; zone : JZoneId) : JZonedDateTime; cdecl; overload;// (Ljava/time/Instant;Ljava/time/ZoneId;)Ljava/time/ZonedDateTime; A: $9
    function ofInstant(localDateTime : JLocalDateTime; offset : JZoneOffset; zone : JZoneId) : JZonedDateTime; cdecl; overload;// (Ljava/time/LocalDateTime;Ljava/time/ZoneOffset;Ljava/time/ZoneId;)Ljava/time/ZonedDateTime; A: $9
    function ofLocal(localDateTime : JLocalDateTime; zone : JZoneId; preferredOffset : JZoneOffset) : JZonedDateTime; cdecl;// (Ljava/time/LocalDateTime;Ljava/time/ZoneId;Ljava/time/ZoneOffset;)Ljava/time/ZonedDateTime; A: $9
    function ofStrict(localDateTime : JLocalDateTime; offset : JZoneOffset; zone : JZoneId) : JZonedDateTime; cdecl;// (Ljava/time/LocalDateTime;Ljava/time/ZoneOffset;Ljava/time/ZoneId;)Ljava/time/ZonedDateTime; A: $9
    function parse(text : JCharSequence) : JZonedDateTime; cdecl; overload;     // (Ljava/lang/CharSequence;)Ljava/time/ZonedDateTime; A: $9
    function parse(text : JCharSequence; formatter : JDateTimeFormatter) : JZonedDateTime; cdecl; overload;// (Ljava/lang/CharSequence;Ljava/time/format/DateTimeFormatter;)Ljava/time/ZonedDateTime; A: $9
    function plus(amountToAdd : Int64; &unit : JTemporalUnit) : JZonedDateTime; cdecl; overload;// (JLjava/time/temporal/TemporalUnit;)Ljava/time/ZonedDateTime; A: $1
    function plus(amountToAdd : JTemporalAmount) : JZonedDateTime; cdecl; overload;// (Ljava/time/temporal/TemporalAmount;)Ljava/time/ZonedDateTime; A: $1
    function plusDays(days : Int64) : JZonedDateTime; cdecl;                    // (J)Ljava/time/ZonedDateTime; A: $1
    function plusHours(hours : Int64) : JZonedDateTime; cdecl;                  // (J)Ljava/time/ZonedDateTime; A: $1
    function plusMinutes(minutes : Int64) : JZonedDateTime; cdecl;              // (J)Ljava/time/ZonedDateTime; A: $1
    function plusMonths(months : Int64) : JZonedDateTime; cdecl;                // (J)Ljava/time/ZonedDateTime; A: $1
    function plusNanos(nanos : Int64) : JZonedDateTime; cdecl;                  // (J)Ljava/time/ZonedDateTime; A: $1
    function plusSeconds(seconds : Int64) : JZonedDateTime; cdecl;              // (J)Ljava/time/ZonedDateTime; A: $1
    function plusWeeks(weeks : Int64) : JZonedDateTime; cdecl;                  // (J)Ljava/time/ZonedDateTime; A: $1
    function plusYears(years : Int64) : JZonedDateTime; cdecl;                  // (J)Ljava/time/ZonedDateTime; A: $1
    function query(query : JTemporalQuery) : JObject; cdecl;                    // (Ljava/time/temporal/TemporalQuery;)Ljava/lang/Object; A: $1
    function range(field : JTemporalField) : JValueRange; cdecl;                // (Ljava/time/temporal/TemporalField;)Ljava/time/temporal/ValueRange; A: $1
    function toLocalDate : JLocalDate; cdecl;                                   // ()Ljava/time/LocalDate; A: $1
    function toLocalDateTime : JLocalDateTime; cdecl;                           // ()Ljava/time/LocalDateTime; A: $1
    function toLocalTime : JLocalTime; cdecl;                                   // ()Ljava/time/LocalTime; A: $1
    function toOffsetDateTime : JOffsetDateTime; cdecl;                         // ()Ljava/time/OffsetDateTime; A: $1
    function toString : JString; cdecl;                                         // ()Ljava/lang/String; A: $1
    function truncatedTo(&unit : JTemporalUnit) : JZonedDateTime; cdecl;        // (Ljava/time/temporal/TemporalUnit;)Ljava/time/ZonedDateTime; A: $1
    function withDayOfMonth(dayOfMonth : Integer) : JZonedDateTime; cdecl;      // (I)Ljava/time/ZonedDateTime; A: $1
    function withDayOfYear(dayOfYear : Integer) : JZonedDateTime; cdecl;        // (I)Ljava/time/ZonedDateTime; A: $1
    function withEarlierOffsetAtOverlap : JZonedDateTime; cdecl;                // ()Ljava/time/ZonedDateTime; A: $1
    function withFixedOffsetZone : JZonedDateTime; cdecl;                       // ()Ljava/time/ZonedDateTime; A: $1
    function withHour(hour : Integer) : JZonedDateTime; cdecl;                  // (I)Ljava/time/ZonedDateTime; A: $1
    function withLaterOffsetAtOverlap : JZonedDateTime; cdecl;                  // ()Ljava/time/ZonedDateTime; A: $1
    function withMinute(minute : Integer) : JZonedDateTime; cdecl;              // (I)Ljava/time/ZonedDateTime; A: $1
    function withMonth(month : Integer) : JZonedDateTime; cdecl;                // (I)Ljava/time/ZonedDateTime; A: $1
    function withNano(nanoOfSecond : Integer) : JZonedDateTime; cdecl;          // (I)Ljava/time/ZonedDateTime; A: $1
    function withSecond(second : Integer) : JZonedDateTime; cdecl;              // (I)Ljava/time/ZonedDateTime; A: $1
    function withYear(year : Integer) : JZonedDateTime; cdecl;                  // (I)Ljava/time/ZonedDateTime; A: $1
    function withZoneSameInstant(zone : JZoneId) : JZonedDateTime; cdecl;       // (Ljava/time/ZoneId;)Ljava/time/ZonedDateTime; A: $1
    function withZoneSameLocal(zone : JZoneId) : JZonedDateTime; cdecl;         // (Ljava/time/ZoneId;)Ljava/time/ZonedDateTime; A: $1
  end;

  [JavaSignature('java/time/ZonedDateTime')]
  JZonedDateTime = interface(JObject)
    ['{4930C4C3-7E33-48CF-B691-D5F98AA8AB4A}']
    function &until(endExclusive : JTemporal; &unit : JTemporalUnit) : Int64; cdecl;// (Ljava/time/temporal/Temporal;Ljava/time/temporal/TemporalUnit;)J A: $1
    function &with(adjuster : JTemporalAdjuster) : JZonedDateTime; cdecl; overload;// (Ljava/time/temporal/TemporalAdjuster;)Ljava/time/ZonedDateTime; A: $1
    function &with(field : JTemporalField; newValue : Int64) : JZonedDateTime; cdecl; overload;// (Ljava/time/temporal/TemporalField;J)Ljava/time/ZonedDateTime; A: $1
    function equals(obj : JObject) : boolean; cdecl;                            // (Ljava/lang/Object;)Z A: $1
    function format(formatter : JDateTimeFormatter) : JString; cdecl;           // (Ljava/time/format/DateTimeFormatter;)Ljava/lang/String; A: $1
    function get(field : JTemporalField) : Integer; cdecl;                      // (Ljava/time/temporal/TemporalField;)I A: $1
    function getDayOfMonth : Integer; cdecl;                                    // ()I A: $1
    function getDayOfWeek : JDayOfWeek; cdecl;                                  // ()Ljava/time/DayOfWeek; A: $1
    function getDayOfYear : Integer; cdecl;                                     // ()I A: $1
    function getHour : Integer; cdecl;                                          // ()I A: $1
    function getLong(field : JTemporalField) : Int64; cdecl;                    // (Ljava/time/temporal/TemporalField;)J A: $1
    function getMinute : Integer; cdecl;                                        // ()I A: $1
    function getMonth : JMonth; cdecl;                                          // ()Ljava/time/Month; A: $1
    function getMonthValue : Integer; cdecl;                                    // ()I A: $1
    function getNano : Integer; cdecl;                                          // ()I A: $1
    function getOffset : JZoneOffset; cdecl;                                    // ()Ljava/time/ZoneOffset; A: $1
    function getSecond : Integer; cdecl;                                        // ()I A: $1
    function getYear : Integer; cdecl;                                          // ()I A: $1
    function getZone : JZoneId; cdecl;                                          // ()Ljava/time/ZoneId; A: $1
    function hashCode : Integer; cdecl;                                         // ()I A: $1
    function isSupported(&unit : JTemporalUnit) : boolean; cdecl; overload;     // (Ljava/time/temporal/TemporalUnit;)Z A: $1
    function isSupported(field : JTemporalField) : boolean; cdecl; overload;    // (Ljava/time/temporal/TemporalField;)Z A: $1
    function minus(amountToSubtract : Int64; &unit : JTemporalUnit) : JZonedDateTime; cdecl; overload;// (JLjava/time/temporal/TemporalUnit;)Ljava/time/ZonedDateTime; A: $1
    function minus(amountToSubtract : JTemporalAmount) : JZonedDateTime; cdecl; overload;// (Ljava/time/temporal/TemporalAmount;)Ljava/time/ZonedDateTime; A: $1
    function minusDays(days : Int64) : JZonedDateTime; cdecl;                   // (J)Ljava/time/ZonedDateTime; A: $1
    function minusHours(hours : Int64) : JZonedDateTime; cdecl;                 // (J)Ljava/time/ZonedDateTime; A: $1
    function minusMinutes(minutes : Int64) : JZonedDateTime; cdecl;             // (J)Ljava/time/ZonedDateTime; A: $1
    function minusMonths(months : Int64) : JZonedDateTime; cdecl;               // (J)Ljava/time/ZonedDateTime; A: $1
    function minusNanos(nanos : Int64) : JZonedDateTime; cdecl;                 // (J)Ljava/time/ZonedDateTime; A: $1
    function minusSeconds(seconds : Int64) : JZonedDateTime; cdecl;             // (J)Ljava/time/ZonedDateTime; A: $1
    function minusWeeks(weeks : Int64) : JZonedDateTime; cdecl;                 // (J)Ljava/time/ZonedDateTime; A: $1
    function minusYears(years : Int64) : JZonedDateTime; cdecl;                 // (J)Ljava/time/ZonedDateTime; A: $1
    function plus(amountToAdd : Int64; &unit : JTemporalUnit) : JZonedDateTime; cdecl; overload;// (JLjava/time/temporal/TemporalUnit;)Ljava/time/ZonedDateTime; A: $1
    function plus(amountToAdd : JTemporalAmount) : JZonedDateTime; cdecl; overload;// (Ljava/time/temporal/TemporalAmount;)Ljava/time/ZonedDateTime; A: $1
    function plusDays(days : Int64) : JZonedDateTime; cdecl;                    // (J)Ljava/time/ZonedDateTime; A: $1
    function plusHours(hours : Int64) : JZonedDateTime; cdecl;                  // (J)Ljava/time/ZonedDateTime; A: $1
    function plusMinutes(minutes : Int64) : JZonedDateTime; cdecl;              // (J)Ljava/time/ZonedDateTime; A: $1
    function plusMonths(months : Int64) : JZonedDateTime; cdecl;                // (J)Ljava/time/ZonedDateTime; A: $1
    function plusNanos(nanos : Int64) : JZonedDateTime; cdecl;                  // (J)Ljava/time/ZonedDateTime; A: $1
    function plusSeconds(seconds : Int64) : JZonedDateTime; cdecl;              // (J)Ljava/time/ZonedDateTime; A: $1
    function plusWeeks(weeks : Int64) : JZonedDateTime; cdecl;                  // (J)Ljava/time/ZonedDateTime; A: $1
    function plusYears(years : Int64) : JZonedDateTime; cdecl;                  // (J)Ljava/time/ZonedDateTime; A: $1
    function query(query : JTemporalQuery) : JObject; cdecl;                    // (Ljava/time/temporal/TemporalQuery;)Ljava/lang/Object; A: $1
    function range(field : JTemporalField) : JValueRange; cdecl;                // (Ljava/time/temporal/TemporalField;)Ljava/time/temporal/ValueRange; A: $1
    function toLocalDate : JLocalDate; cdecl;                                   // ()Ljava/time/LocalDate; A: $1
    function toLocalDateTime : JLocalDateTime; cdecl;                           // ()Ljava/time/LocalDateTime; A: $1
    function toLocalTime : JLocalTime; cdecl;                                   // ()Ljava/time/LocalTime; A: $1
    function toOffsetDateTime : JOffsetDateTime; cdecl;                         // ()Ljava/time/OffsetDateTime; A: $1
    function toString : JString; cdecl;                                         // ()Ljava/lang/String; A: $1
    function truncatedTo(&unit : JTemporalUnit) : JZonedDateTime; cdecl;        // (Ljava/time/temporal/TemporalUnit;)Ljava/time/ZonedDateTime; A: $1
    function withDayOfMonth(dayOfMonth : Integer) : JZonedDateTime; cdecl;      // (I)Ljava/time/ZonedDateTime; A: $1
    function withDayOfYear(dayOfYear : Integer) : JZonedDateTime; cdecl;        // (I)Ljava/time/ZonedDateTime; A: $1
    function withEarlierOffsetAtOverlap : JZonedDateTime; cdecl;                // ()Ljava/time/ZonedDateTime; A: $1
    function withFixedOffsetZone : JZonedDateTime; cdecl;                       // ()Ljava/time/ZonedDateTime; A: $1
    function withHour(hour : Integer) : JZonedDateTime; cdecl;                  // (I)Ljava/time/ZonedDateTime; A: $1
    function withLaterOffsetAtOverlap : JZonedDateTime; cdecl;                  // ()Ljava/time/ZonedDateTime; A: $1
    function withMinute(minute : Integer) : JZonedDateTime; cdecl;              // (I)Ljava/time/ZonedDateTime; A: $1
    function withMonth(month : Integer) : JZonedDateTime; cdecl;                // (I)Ljava/time/ZonedDateTime; A: $1
    function withNano(nanoOfSecond : Integer) : JZonedDateTime; cdecl;          // (I)Ljava/time/ZonedDateTime; A: $1
    function withSecond(second : Integer) : JZonedDateTime; cdecl;              // (I)Ljava/time/ZonedDateTime; A: $1
    function withYear(year : Integer) : JZonedDateTime; cdecl;                  // (I)Ljava/time/ZonedDateTime; A: $1
    function withZoneSameInstant(zone : JZoneId) : JZonedDateTime; cdecl;       // (Ljava/time/ZoneId;)Ljava/time/ZonedDateTime; A: $1
    function withZoneSameLocal(zone : JZoneId) : JZonedDateTime; cdecl;         // (Ljava/time/ZoneId;)Ljava/time/ZonedDateTime; A: $1
  end;

  TJZonedDateTime = class(TJavaGenericImport<JZonedDateTimeClass, JZonedDateTime>)
  end;



  // Merged from: .\java.time.chrono.ChronoZonedDateTime.pas
  JChronoZonedDateTimeClass = interface(JObjectClass)
    ['{FE562FD8-66F5-4C02-911E-71361BD947E2}']
    function &with(JTemporalFieldparam0 : JTemporalField; Int64param1 : Int64) : JChronoZonedDateTime; cdecl; overload;// (Ljava/time/temporal/TemporalField;J)Ljava/time/chrono/ChronoZonedDateTime; A: $401
    function &with(adjuster : JTemporalAdjuster) : JChronoZonedDateTime; cdecl; overload;// (Ljava/time/temporal/TemporalAdjuster;)Ljava/time/chrono/ChronoZonedDateTime; A: $1
    function compareTo(other : JChronoZonedDateTime) : Integer; cdecl;          // (Ljava/time/chrono/ChronoZonedDateTime;)I A: $1
    function equals(JObjectparam0 : JObject) : boolean; cdecl;                  // (Ljava/lang/Object;)Z A: $401
    function format(formatter : JDateTimeFormatter) : JString; cdecl;           // (Ljava/time/format/DateTimeFormatter;)Ljava/lang/String; A: $1
    function from(temporal : JTemporalAccessor) : JChronoZonedDateTime; cdecl;  // (Ljava/time/temporal/TemporalAccessor;)Ljava/time/chrono/ChronoZonedDateTime; A: $9
    function get(field : JTemporalField) : Integer; cdecl;                      // (Ljava/time/temporal/TemporalField;)I A: $1
    function getChronology : JChronology; cdecl;                                // ()Ljava/time/chrono/Chronology; A: $1
    function getLong(field : JTemporalField) : Int64; cdecl;                    // (Ljava/time/temporal/TemporalField;)J A: $1
    function getOffset : JZoneOffset; cdecl;                                    // ()Ljava/time/ZoneOffset; A: $401
    function getZone : JZoneId; cdecl;                                          // ()Ljava/time/ZoneId; A: $401
    function hashCode : Integer; cdecl;                                         // ()I A: $401
    function isAfter(other : JChronoZonedDateTime) : boolean; cdecl;            // (Ljava/time/chrono/ChronoZonedDateTime;)Z A: $1
    function isBefore(other : JChronoZonedDateTime) : boolean; cdecl;           // (Ljava/time/chrono/ChronoZonedDateTime;)Z A: $1
    function isEqual(other : JChronoZonedDateTime) : boolean; cdecl;            // (Ljava/time/chrono/ChronoZonedDateTime;)Z A: $1
    function isSupported(&unit : JTemporalUnit) : boolean; cdecl; overload;     // (Ljava/time/temporal/TemporalUnit;)Z A: $1
    function isSupported(JTemporalFieldparam0 : JTemporalField) : boolean; cdecl; overload;// (Ljava/time/temporal/TemporalField;)Z A: $401
    function minus(amount : JTemporalAmount) : JChronoZonedDateTime; cdecl; overload;// (Ljava/time/temporal/TemporalAmount;)Ljava/time/chrono/ChronoZonedDateTime; A: $1
    function minus(amountToSubtract : Int64; &unit : JTemporalUnit) : JChronoZonedDateTime; cdecl; overload;// (JLjava/time/temporal/TemporalUnit;)Ljava/time/chrono/ChronoZonedDateTime; A: $1
    function plus(Int64param0 : Int64; JTemporalUnitparam1 : JTemporalUnit) : JChronoZonedDateTime; cdecl; overload;// (JLjava/time/temporal/TemporalUnit;)Ljava/time/chrono/ChronoZonedDateTime; A: $401
    function plus(amount : JTemporalAmount) : JChronoZonedDateTime; cdecl; overload;// (Ljava/time/temporal/TemporalAmount;)Ljava/time/chrono/ChronoZonedDateTime; A: $1
    function query(query : JTemporalQuery) : JObject; cdecl;                    // (Ljava/time/temporal/TemporalQuery;)Ljava/lang/Object; A: $1
    function range(field : JTemporalField) : JValueRange; cdecl;                // (Ljava/time/temporal/TemporalField;)Ljava/time/temporal/ValueRange; A: $1
    function timeLineOrder : JComparator; cdecl;                                // ()Ljava/util/Comparator; A: $9
    function toEpochSecond : Int64; cdecl;                                      // ()J A: $1
    function toInstant : JInstant; cdecl;                                       // ()Ljava/time/Instant; A: $1
    function toLocalDate : JChronoLocalDate; cdecl;                             // ()Ljava/time/chrono/ChronoLocalDate; A: $1
    function toLocalDateTime : JChronoLocalDateTime; cdecl;                     // ()Ljava/time/chrono/ChronoLocalDateTime; A: $401
    function toLocalTime : JLocalTime; cdecl;                                   // ()Ljava/time/LocalTime; A: $1
    function toString : JString; cdecl;                                         // ()Ljava/lang/String; A: $401
    function withEarlierOffsetAtOverlap : JChronoZonedDateTime; cdecl;          // ()Ljava/time/chrono/ChronoZonedDateTime; A: $401
    function withLaterOffsetAtOverlap : JChronoZonedDateTime; cdecl;            // ()Ljava/time/chrono/ChronoZonedDateTime; A: $401
    function withZoneSameInstant(JZoneIdparam0 : JZoneId) : JChronoZonedDateTime; cdecl;// (Ljava/time/ZoneId;)Ljava/time/chrono/ChronoZonedDateTime; A: $401
    function withZoneSameLocal(JZoneIdparam0 : JZoneId) : JChronoZonedDateTime; cdecl;// (Ljava/time/ZoneId;)Ljava/time/chrono/ChronoZonedDateTime; A: $401
  end;

  [JavaSignature('java/time/chrono/ChronoZonedDateTime')]
  JChronoZonedDateTime = interface(JObject)
    ['{4C9B892E-EA70-45FA-B2C2-EE652FF5E9FB}']
    function &with(JTemporalFieldparam0 : JTemporalField; Int64param1 : Int64) : JChronoZonedDateTime; cdecl; overload;// (Ljava/time/temporal/TemporalField;J)Ljava/time/chrono/ChronoZonedDateTime; A: $401
    function &with(adjuster : JTemporalAdjuster) : JChronoZonedDateTime; cdecl; overload;// (Ljava/time/temporal/TemporalAdjuster;)Ljava/time/chrono/ChronoZonedDateTime; A: $1
    function compareTo(other : JChronoZonedDateTime) : Integer; cdecl;          // (Ljava/time/chrono/ChronoZonedDateTime;)I A: $1
    function equals(JObjectparam0 : JObject) : boolean; cdecl;                  // (Ljava/lang/Object;)Z A: $401
    function format(formatter : JDateTimeFormatter) : JString; cdecl;           // (Ljava/time/format/DateTimeFormatter;)Ljava/lang/String; A: $1
    function get(field : JTemporalField) : Integer; cdecl;                      // (Ljava/time/temporal/TemporalField;)I A: $1
    function getChronology : JChronology; cdecl;                                // ()Ljava/time/chrono/Chronology; A: $1
    function getLong(field : JTemporalField) : Int64; cdecl;                    // (Ljava/time/temporal/TemporalField;)J A: $1
    function getOffset : JZoneOffset; cdecl;                                    // ()Ljava/time/ZoneOffset; A: $401
    function getZone : JZoneId; cdecl;                                          // ()Ljava/time/ZoneId; A: $401
    function hashCode : Integer; cdecl;                                         // ()I A: $401
    function isAfter(other : JChronoZonedDateTime) : boolean; cdecl;            // (Ljava/time/chrono/ChronoZonedDateTime;)Z A: $1
    function isBefore(other : JChronoZonedDateTime) : boolean; cdecl;           // (Ljava/time/chrono/ChronoZonedDateTime;)Z A: $1
    function isEqual(other : JChronoZonedDateTime) : boolean; cdecl;            // (Ljava/time/chrono/ChronoZonedDateTime;)Z A: $1
    function isSupported(&unit : JTemporalUnit) : boolean; cdecl; overload;     // (Ljava/time/temporal/TemporalUnit;)Z A: $1
    function isSupported(JTemporalFieldparam0 : JTemporalField) : boolean; cdecl; overload;// (Ljava/time/temporal/TemporalField;)Z A: $401
    function minus(amount : JTemporalAmount) : JChronoZonedDateTime; cdecl; overload;// (Ljava/time/temporal/TemporalAmount;)Ljava/time/chrono/ChronoZonedDateTime; A: $1
    function minus(amountToSubtract : Int64; &unit : JTemporalUnit) : JChronoZonedDateTime; cdecl; overload;// (JLjava/time/temporal/TemporalUnit;)Ljava/time/chrono/ChronoZonedDateTime; A: $1
    function plus(Int64param0 : Int64; JTemporalUnitparam1 : JTemporalUnit) : JChronoZonedDateTime; cdecl; overload;// (JLjava/time/temporal/TemporalUnit;)Ljava/time/chrono/ChronoZonedDateTime; A: $401
    function plus(amount : JTemporalAmount) : JChronoZonedDateTime; cdecl; overload;// (Ljava/time/temporal/TemporalAmount;)Ljava/time/chrono/ChronoZonedDateTime; A: $1
    function query(query : JTemporalQuery) : JObject; cdecl;                    // (Ljava/time/temporal/TemporalQuery;)Ljava/lang/Object; A: $1
    function range(field : JTemporalField) : JValueRange; cdecl;                // (Ljava/time/temporal/TemporalField;)Ljava/time/temporal/ValueRange; A: $1
    function toEpochSecond : Int64; cdecl;                                      // ()J A: $1
    function toInstant : JInstant; cdecl;                                       // ()Ljava/time/Instant; A: $1
    function toLocalDate : JChronoLocalDate; cdecl;                             // ()Ljava/time/chrono/ChronoLocalDate; A: $1
    function toLocalDateTime : JChronoLocalDateTime; cdecl;                     // ()Ljava/time/chrono/ChronoLocalDateTime; A: $401
    function toLocalTime : JLocalTime; cdecl;                                   // ()Ljava/time/LocalTime; A: $1
    function toString : JString; cdecl;                                         // ()Ljava/lang/String; A: $401
    function withEarlierOffsetAtOverlap : JChronoZonedDateTime; cdecl;          // ()Ljava/time/chrono/ChronoZonedDateTime; A: $401
    function withLaterOffsetAtOverlap : JChronoZonedDateTime; cdecl;            // ()Ljava/time/chrono/ChronoZonedDateTime; A: $401
    function withZoneSameInstant(JZoneIdparam0 : JZoneId) : JChronoZonedDateTime; cdecl;// (Ljava/time/ZoneId;)Ljava/time/chrono/ChronoZonedDateTime; A: $401
    function withZoneSameLocal(JZoneIdparam0 : JZoneId) : JChronoZonedDateTime; cdecl;// (Ljava/time/ZoneId;)Ljava/time/chrono/ChronoZonedDateTime; A: $401
  end;

  TJChronoZonedDateTime = class(TJavaGenericImport<JChronoZonedDateTimeClass, JChronoZonedDateTime>)
  end;


  // Merged from: .\java.time.Clock.pas
  JClockClass = interface(JObjectClass)
    ['{3FCEBB89-36C9-4067-A84D-37F6330C703D}']
    function equals(obj : JObject) : boolean; cdecl;                            // (Ljava/lang/Object;)Z A: $1
    function fixed(fixedInstant : JInstant; zone : JZoneId) : JClock; cdecl;    // (Ljava/time/Instant;Ljava/time/ZoneId;)Ljava/time/Clock; A: $9
    function getZone : JZoneId; cdecl;                                          // ()Ljava/time/ZoneId; A: $401
    function hashCode : Integer; cdecl;                                         // ()I A: $1
    function instant : JInstant; cdecl;                                         // ()Ljava/time/Instant; A: $401
    function millis : Int64; cdecl;                                             // ()J A: $1
    function offset(baseClock : JClock; offsetDuration : JDuration) : JClock; cdecl;// (Ljava/time/Clock;Ljava/time/Duration;)Ljava/time/Clock; A: $9
    function system(zone : JZoneId) : JClock; cdecl;                            // (Ljava/time/ZoneId;)Ljava/time/Clock; A: $9
    function systemDefaultZone : JClock; cdecl;                                 // ()Ljava/time/Clock; A: $9
    function systemUTC : JClock; cdecl;                                         // ()Ljava/time/Clock; A: $9
    function tick(baseClock : JClock; tickDuration : JDuration) : JClock; cdecl;// (Ljava/time/Clock;Ljava/time/Duration;)Ljava/time/Clock; A: $9
    function tickMinutes(zone : JZoneId) : JClock; cdecl;                       // (Ljava/time/ZoneId;)Ljava/time/Clock; A: $9
    function tickSeconds(zone : JZoneId) : JClock; cdecl;                       // (Ljava/time/ZoneId;)Ljava/time/Clock; A: $9
    function withZone(JZoneIdparam0 : JZoneId) : JClock; cdecl;                 // (Ljava/time/ZoneId;)Ljava/time/Clock; A: $401
  end;

  [JavaSignature('java/time/Clock')]
  JClock = interface(JObject)
    ['{AAE5D48A-339B-4352-BF01-FD3E574DEFB7}']
    function equals(obj : JObject) : boolean; cdecl;                            // (Ljava/lang/Object;)Z A: $1
    function getZone : JZoneId; cdecl;                                          // ()Ljava/time/ZoneId; A: $401
    function hashCode : Integer; cdecl;                                         // ()I A: $1
    function instant : JInstant; cdecl;                                         // ()Ljava/time/Instant; A: $401
    function millis : Int64; cdecl;                                             // ()J A: $1
    function withZone(JZoneIdparam0 : JZoneId) : JClock; cdecl;                 // (Ljava/time/ZoneId;)Ljava/time/Clock; A: $401
  end;

  TJClock = class(TJavaGenericImport<JClockClass, JClock>)
  end;

  // Merged from: .\java.time.Instant.pas
  JInstantClass = interface(JObjectClass)
    ['{5F41E21F-EC27-4243-9FDB-B6907CE9A2DF}']
    function &until(endExclusive : JTemporal; &unit : JTemporalUnit) : Int64; cdecl;// (Ljava/time/temporal/Temporal;Ljava/time/temporal/TemporalUnit;)J A: $1
    function &with(adjuster : JTemporalAdjuster) : JInstant; cdecl; overload;   // (Ljava/time/temporal/TemporalAdjuster;)Ljava/time/Instant; A: $1
    function &with(field : JTemporalField; newValue : Int64) : JInstant; cdecl; overload;// (Ljava/time/temporal/TemporalField;J)Ljava/time/Instant; A: $1
    function _GetEPOCH : JInstant; cdecl;                                       //  A: $19
    function _GetMAX : JInstant; cdecl;                                         //  A: $19
    function _GetMIN : JInstant; cdecl;                                         //  A: $19
    function adjustInto(temporal : JTemporal) : JTemporal; cdecl;               // (Ljava/time/temporal/Temporal;)Ljava/time/temporal/Temporal; A: $1
    function atOffset(offset : JZoneOffset) : JOffsetDateTime; cdecl;           // (Ljava/time/ZoneOffset;)Ljava/time/OffsetDateTime; A: $1
    function atZone(zone : JZoneId) : JZonedDateTime; cdecl;                    // (Ljava/time/ZoneId;)Ljava/time/ZonedDateTime; A: $1
    function compareTo(otherInstant : JInstant) : Integer; cdecl;               // (Ljava/time/Instant;)I A: $1
    function equals(otherInstant : JObject) : boolean; cdecl;                   // (Ljava/lang/Object;)Z A: $1
    function from(temporal : JTemporalAccessor) : JInstant; cdecl;              // (Ljava/time/temporal/TemporalAccessor;)Ljava/time/Instant; A: $9
    function get(field : JTemporalField) : Integer; cdecl;                      // (Ljava/time/temporal/TemporalField;)I A: $1
    function getEpochSecond : Int64; cdecl;                                     // ()J A: $1
    function getLong(field : JTemporalField) : Int64; cdecl;                    // (Ljava/time/temporal/TemporalField;)J A: $1
    function getNano : Integer; cdecl;                                          // ()I A: $1
    function hashCode : Integer; cdecl;                                         // ()I A: $1
    function isAfter(otherInstant : JInstant) : boolean; cdecl;                 // (Ljava/time/Instant;)Z A: $1
    function isBefore(otherInstant : JInstant) : boolean; cdecl;                // (Ljava/time/Instant;)Z A: $1
    function isSupported(&unit : JTemporalUnit) : boolean; cdecl; overload;     // (Ljava/time/temporal/TemporalUnit;)Z A: $1
    function isSupported(field : JTemporalField) : boolean; cdecl; overload;    // (Ljava/time/temporal/TemporalField;)Z A: $1
    function minus(amountToSubtract : Int64; &unit : JTemporalUnit) : JInstant; cdecl; overload;// (JLjava/time/temporal/TemporalUnit;)Ljava/time/Instant; A: $1
    function minus(amountToSubtract : JTemporalAmount) : JInstant; cdecl; overload;// (Ljava/time/temporal/TemporalAmount;)Ljava/time/Instant; A: $1
    function minusMillis(millisToSubtract : Int64) : JInstant; cdecl;           // (J)Ljava/time/Instant; A: $1
    function minusNanos(nanosToSubtract : Int64) : JInstant; cdecl;             // (J)Ljava/time/Instant; A: $1
    function minusSeconds(secondsToSubtract : Int64) : JInstant; cdecl;         // (J)Ljava/time/Instant; A: $1
    function now : JInstant; cdecl; overload;                                   // ()Ljava/time/Instant; A: $9
    function now(clock : JClock) : JInstant; cdecl; overload;                   // (Ljava/time/Clock;)Ljava/time/Instant; A: $9
    function ofEpochMilli(epochMilli : Int64) : JInstant; cdecl;                // (J)Ljava/time/Instant; A: $9
    function ofEpochSecond(epochSecond : Int64) : JInstant; cdecl; overload;    // (J)Ljava/time/Instant; A: $9
    function ofEpochSecond(epochSecond : Int64; nanoAdjustment : Int64) : JInstant; cdecl; overload;// (JJ)Ljava/time/Instant; A: $9
    function parse(text : JCharSequence) : JInstant; cdecl;                     // (Ljava/lang/CharSequence;)Ljava/time/Instant; A: $9
    function plus(amountToAdd : Int64; &unit : JTemporalUnit) : JInstant; cdecl; overload;// (JLjava/time/temporal/TemporalUnit;)Ljava/time/Instant; A: $1
    function plus(amountToAdd : JTemporalAmount) : JInstant; cdecl; overload;   // (Ljava/time/temporal/TemporalAmount;)Ljava/time/Instant; A: $1
    function plusMillis(millisToAdd : Int64) : JInstant; cdecl;                 // (J)Ljava/time/Instant; A: $1
    function plusNanos(nanosToAdd : Int64) : JInstant; cdecl;                   // (J)Ljava/time/Instant; A: $1
    function plusSeconds(secondsToAdd : Int64) : JInstant; cdecl;               // (J)Ljava/time/Instant; A: $1
    function query(query : JTemporalQuery) : JObject; cdecl;                    // (Ljava/time/temporal/TemporalQuery;)Ljava/lang/Object; A: $1
    function range(field : JTemporalField) : JValueRange; cdecl;                // (Ljava/time/temporal/TemporalField;)Ljava/time/temporal/ValueRange; A: $1
    function toEpochMilli : Int64; cdecl;                                       // ()J A: $1
    function toString : JString; cdecl;                                         // ()Ljava/lang/String; A: $1
    function truncatedTo(&unit : JTemporalUnit) : JInstant; cdecl;              // (Ljava/time/temporal/TemporalUnit;)Ljava/time/Instant; A: $1
    property EPOCH : JInstant read _GetEPOCH;                                   // Ljava/time/Instant; A: $19
    property MAX : JInstant read _GetMAX;                                       // Ljava/time/Instant; A: $19
    property MIN : JInstant read _GetMIN;                                       // Ljava/time/Instant; A: $19
  end;

  [JavaSignature('java/time/Instant')]
  JInstant = interface(JObject)
    ['{98575DAA-4C5E-4C79-A693-EF21BD5DAD37}']
    function &until(endExclusive : JTemporal; &unit : JTemporalUnit) : Int64; cdecl;// (Ljava/time/temporal/Temporal;Ljava/time/temporal/TemporalUnit;)J A: $1
    function &with(adjuster : JTemporalAdjuster) : JInstant; cdecl; overload;   // (Ljava/time/temporal/TemporalAdjuster;)Ljava/time/Instant; A: $1
    function &with(field : JTemporalField; newValue : Int64) : JInstant; cdecl; overload;// (Ljava/time/temporal/TemporalField;J)Ljava/time/Instant; A: $1
    function adjustInto(temporal : JTemporal) : JTemporal; cdecl;               // (Ljava/time/temporal/Temporal;)Ljava/time/temporal/Temporal; A: $1
    function atOffset(offset : JZoneOffset) : JOffsetDateTime; cdecl;           // (Ljava/time/ZoneOffset;)Ljava/time/OffsetDateTime; A: $1
    function atZone(zone : JZoneId) : JZonedDateTime; cdecl;                    // (Ljava/time/ZoneId;)Ljava/time/ZonedDateTime; A: $1
    function compareTo(otherInstant : JInstant) : Integer; cdecl;               // (Ljava/time/Instant;)I A: $1
    function equals(otherInstant : JObject) : boolean; cdecl;                   // (Ljava/lang/Object;)Z A: $1
    function get(field : JTemporalField) : Integer; cdecl;                      // (Ljava/time/temporal/TemporalField;)I A: $1
    function getEpochSecond : Int64; cdecl;                                     // ()J A: $1
    function getLong(field : JTemporalField) : Int64; cdecl;                    // (Ljava/time/temporal/TemporalField;)J A: $1
    function getNano : Integer; cdecl;                                          // ()I A: $1
    function hashCode : Integer; cdecl;                                         // ()I A: $1
    function isAfter(otherInstant : JInstant) : boolean; cdecl;                 // (Ljava/time/Instant;)Z A: $1
    function isBefore(otherInstant : JInstant) : boolean; cdecl;                // (Ljava/time/Instant;)Z A: $1
    function isSupported(&unit : JTemporalUnit) : boolean; cdecl; overload;     // (Ljava/time/temporal/TemporalUnit;)Z A: $1
    function isSupported(field : JTemporalField) : boolean; cdecl; overload;    // (Ljava/time/temporal/TemporalField;)Z A: $1
    function minus(amountToSubtract : Int64; &unit : JTemporalUnit) : JInstant; cdecl; overload;// (JLjava/time/temporal/TemporalUnit;)Ljava/time/Instant; A: $1
    function minus(amountToSubtract : JTemporalAmount) : JInstant; cdecl; overload;// (Ljava/time/temporal/TemporalAmount;)Ljava/time/Instant; A: $1
    function minusMillis(millisToSubtract : Int64) : JInstant; cdecl;           // (J)Ljava/time/Instant; A: $1
    function minusNanos(nanosToSubtract : Int64) : JInstant; cdecl;             // (J)Ljava/time/Instant; A: $1
    function minusSeconds(secondsToSubtract : Int64) : JInstant; cdecl;         // (J)Ljava/time/Instant; A: $1
    function plus(amountToAdd : Int64; &unit : JTemporalUnit) : JInstant; cdecl; overload;// (JLjava/time/temporal/TemporalUnit;)Ljava/time/Instant; A: $1
    function plus(amountToAdd : JTemporalAmount) : JInstant; cdecl; overload;   // (Ljava/time/temporal/TemporalAmount;)Ljava/time/Instant; A: $1
    function plusMillis(millisToAdd : Int64) : JInstant; cdecl;                 // (J)Ljava/time/Instant; A: $1
    function plusNanos(nanosToAdd : Int64) : JInstant; cdecl;                   // (J)Ljava/time/Instant; A: $1
    function plusSeconds(secondsToAdd : Int64) : JInstant; cdecl;               // (J)Ljava/time/Instant; A: $1
    function query(query : JTemporalQuery) : JObject; cdecl;                    // (Ljava/time/temporal/TemporalQuery;)Ljava/lang/Object; A: $1
    function range(field : JTemporalField) : JValueRange; cdecl;                // (Ljava/time/temporal/TemporalField;)Ljava/time/temporal/ValueRange; A: $1
    function toEpochMilli : Int64; cdecl;                                       // ()J A: $1
    function toString : JString; cdecl;                                         // ()Ljava/lang/String; A: $1
    function truncatedTo(&unit : JTemporalUnit) : JInstant; cdecl;              // (Ljava/time/temporal/TemporalUnit;)Ljava/time/Instant; A: $1
  end;

  TJInstant = class(TJavaGenericImport<JInstantClass, JInstant>)
  end;


  // Merged from: .\java.time.zone.ZoneRules.pas
  JZoneRulesClass = interface(JObjectClass)
    ['{E21D783E-C43E-4A7C-9802-434F8AF0456E}']
    function &of(baseStandardOffset : JZoneOffset; baseWallOffset : JZoneOffset; standardOffsetTransitionList : JList; transitionList : JList; lastRules : JList) : JZoneRules; cdecl; overload;// (Ljava/time/ZoneOffset;Ljava/time/ZoneOffset;Ljava/util/List;Ljava/util/List;Ljava/util/List;)Ljava/time/zone/ZoneRules; A: $9
    function &of(offset : JZoneOffset) : JZoneRules; cdecl; overload;           // (Ljava/time/ZoneOffset;)Ljava/time/zone/ZoneRules; A: $9
    function equals(otherRules : JObject) : boolean; cdecl;                     // (Ljava/lang/Object;)Z A: $1
    function getDaylightSavings(instant : JInstant) : JDuration; cdecl;         // (Ljava/time/Instant;)Ljava/time/Duration; A: $1
    function getOffset(instant : JInstant) : JZoneOffset; cdecl; overload;      // (Ljava/time/Instant;)Ljava/time/ZoneOffset; A: $1
    function getOffset(localDateTime : JLocalDateTime) : JZoneOffset; cdecl; overload;// (Ljava/time/LocalDateTime;)Ljava/time/ZoneOffset; A: $1
    function getStandardOffset(instant : JInstant) : JZoneOffset; cdecl;        // (Ljava/time/Instant;)Ljava/time/ZoneOffset; A: $1
    function getTransition(localDateTime : JLocalDateTime) : JZoneOffsetTransition; cdecl;// (Ljava/time/LocalDateTime;)Ljava/time/zone/ZoneOffsetTransition; A: $1
    function getTransitionRules : JList; cdecl;                                 // ()Ljava/util/List; A: $1
    function getTransitions : JList; cdecl;                                     // ()Ljava/util/List; A: $1
    function getValidOffsets(localDateTime : JLocalDateTime) : JList; cdecl;    // (Ljava/time/LocalDateTime;)Ljava/util/List; A: $1
    function hashCode : Integer; cdecl;                                         // ()I A: $1
    function isDaylightSavings(instant : JInstant) : boolean; cdecl;            // (Ljava/time/Instant;)Z A: $1
    function isFixedOffset : boolean; cdecl;                                    // ()Z A: $1
    function isValidOffset(localDateTime : JLocalDateTime; offset : JZoneOffset) : boolean; cdecl;// (Ljava/time/LocalDateTime;Ljava/time/ZoneOffset;)Z A: $1
    function nextTransition(instant : JInstant) : JZoneOffsetTransition; cdecl; // (Ljava/time/Instant;)Ljava/time/zone/ZoneOffsetTransition; A: $1
    function previousTransition(instant : JInstant) : JZoneOffsetTransition; cdecl;// (Ljava/time/Instant;)Ljava/time/zone/ZoneOffsetTransition; A: $1
    function toString : JString; cdecl;                                         // ()Ljava/lang/String; A: $1
  end;

  [JavaSignature('java/time/zone/ZoneRules')]
  JZoneRules = interface(JObject)
    ['{980FB804-B0C2-4959-B60A-A99D9E8AD96F}']
    function equals(otherRules : JObject) : boolean; cdecl;                     // (Ljava/lang/Object;)Z A: $1
    function getDaylightSavings(instant : JInstant) : JDuration; cdecl;         // (Ljava/time/Instant;)Ljava/time/Duration; A: $1
    function getOffset(instant : JInstant) : JZoneOffset; cdecl; overload;      // (Ljava/time/Instant;)Ljava/time/ZoneOffset; A: $1
    function getOffset(localDateTime : JLocalDateTime) : JZoneOffset; cdecl; overload;// (Ljava/time/LocalDateTime;)Ljava/time/ZoneOffset; A: $1
    function getStandardOffset(instant : JInstant) : JZoneOffset; cdecl;        // (Ljava/time/Instant;)Ljava/time/ZoneOffset; A: $1
    function getTransition(localDateTime : JLocalDateTime) : JZoneOffsetTransition; cdecl;// (Ljava/time/LocalDateTime;)Ljava/time/zone/ZoneOffsetTransition; A: $1
    function getTransitionRules : JList; cdecl;                                 // ()Ljava/util/List; A: $1
    function getTransitions : JList; cdecl;                                     // ()Ljava/util/List; A: $1
    function getValidOffsets(localDateTime : JLocalDateTime) : JList; cdecl;    // (Ljava/time/LocalDateTime;)Ljava/util/List; A: $1
    function hashCode : Integer; cdecl;                                         // ()I A: $1
    function isDaylightSavings(instant : JInstant) : boolean; cdecl;            // (Ljava/time/Instant;)Z A: $1
    function isFixedOffset : boolean; cdecl;                                    // ()Z A: $1
    function isValidOffset(localDateTime : JLocalDateTime; offset : JZoneOffset) : boolean; cdecl;// (Ljava/time/LocalDateTime;Ljava/time/ZoneOffset;)Z A: $1
    function nextTransition(instant : JInstant) : JZoneOffsetTransition; cdecl; // (Ljava/time/Instant;)Ljava/time/zone/ZoneOffsetTransition; A: $1
    function previousTransition(instant : JInstant) : JZoneOffsetTransition; cdecl;// (Ljava/time/Instant;)Ljava/time/zone/ZoneOffsetTransition; A: $1
    function toString : JString; cdecl;                                         // ()Ljava/lang/String; A: $1
  end;

  TJZoneRules = class(TJavaGenericImport<JZoneRulesClass, JZoneRules>)
  end;

  // Merged from: .\java.time.ZoneOffset.pas
  JZoneOffsetClass = interface(JObjectClass)
    ['{46BAE883-A0FF-4E11-B39B-93B68487B978}']
    function &of(offsetId : JString) : JZoneOffset; cdecl;                      // (Ljava/lang/String;)Ljava/time/ZoneOffset; A: $9
    function _GetMAX : JZoneOffset; cdecl;                                      //  A: $19
    function _GetMIN : JZoneOffset; cdecl;                                      //  A: $19
    function _GetUTC : JZoneOffset; cdecl;                                      //  A: $19
    function adjustInto(temporal : JTemporal) : JTemporal; cdecl;               // (Ljava/time/temporal/Temporal;)Ljava/time/temporal/Temporal; A: $1
    function compareTo(other : JZoneOffset) : Integer; cdecl;                   // (Ljava/time/ZoneOffset;)I A: $1
    function equals(obj : JObject) : boolean; cdecl;                            // (Ljava/lang/Object;)Z A: $1
    function from(temporal : JTemporalAccessor) : JZoneOffset; cdecl;           // (Ljava/time/temporal/TemporalAccessor;)Ljava/time/ZoneOffset; A: $9
    function get(field : JTemporalField) : Integer; cdecl;                      // (Ljava/time/temporal/TemporalField;)I A: $1
    function getId : JString; cdecl;                                            // ()Ljava/lang/String; A: $1
    function getLong(field : JTemporalField) : Int64; cdecl;                    // (Ljava/time/temporal/TemporalField;)J A: $1
    function getRules : JZoneRules; cdecl;                                      // ()Ljava/time/zone/ZoneRules; A: $1
    function getTotalSeconds : Integer; cdecl;                                  // ()I A: $1
    function hashCode : Integer; cdecl;                                         // ()I A: $1
    function isSupported(field : JTemporalField) : boolean; cdecl;              // (Ljava/time/temporal/TemporalField;)Z A: $1
    function ofHours(hours : Integer) : JZoneOffset; cdecl;                     // (I)Ljava/time/ZoneOffset; A: $9
    function ofHoursMinutes(hours : Integer; minutes : Integer) : JZoneOffset; cdecl;// (II)Ljava/time/ZoneOffset; A: $9
    function ofHoursMinutesSeconds(hours : Integer; minutes : Integer; seconds : Integer) : JZoneOffset; cdecl;// (III)Ljava/time/ZoneOffset; A: $9
    function ofTotalSeconds(totalSeconds : Integer) : JZoneOffset; cdecl;       // (I)Ljava/time/ZoneOffset; A: $9
    function query(query : JTemporalQuery) : JObject; cdecl;                    // (Ljava/time/temporal/TemporalQuery;)Ljava/lang/Object; A: $1
    function range(field : JTemporalField) : JValueRange; cdecl;                // (Ljava/time/temporal/TemporalField;)Ljava/time/temporal/ValueRange; A: $1
    function toString : JString; cdecl;                                         // ()Ljava/lang/String; A: $1
    property MAX : JZoneOffset read _GetMAX;                                    // Ljava/time/ZoneOffset; A: $19
    property MIN : JZoneOffset read _GetMIN;                                    // Ljava/time/ZoneOffset; A: $19
    property UTC : JZoneOffset read _GetUTC;                                    // Ljava/time/ZoneOffset; A: $19
  end;

  [JavaSignature('java/time/ZoneOffset')]
  JZoneOffset = interface(JObject)
    ['{2E0194C0-ECBB-4688-8B41-B73676318EFF}']
    function adjustInto(temporal : JTemporal) : JTemporal; cdecl;               // (Ljava/time/temporal/Temporal;)Ljava/time/temporal/Temporal; A: $1
    function compareTo(other : JZoneOffset) : Integer; cdecl;                   // (Ljava/time/ZoneOffset;)I A: $1
    function equals(obj : JObject) : boolean; cdecl;                            // (Ljava/lang/Object;)Z A: $1
    function get(field : JTemporalField) : Integer; cdecl;                      // (Ljava/time/temporal/TemporalField;)I A: $1
    function getId : JString; cdecl;                                            // ()Ljava/lang/String; A: $1
    function getLong(field : JTemporalField) : Int64; cdecl;                    // (Ljava/time/temporal/TemporalField;)J A: $1
    function getRules : JZoneRules; cdecl;                                      // ()Ljava/time/zone/ZoneRules; A: $1
    function getTotalSeconds : Integer; cdecl;                                  // ()I A: $1
    function hashCode : Integer; cdecl;                                         // ()I A: $1
    function isSupported(field : JTemporalField) : boolean; cdecl;              // (Ljava/time/temporal/TemporalField;)Z A: $1
    function query(query : JTemporalQuery) : JObject; cdecl;                    // (Ljava/time/temporal/TemporalQuery;)Ljava/lang/Object; A: $1
    function range(field : JTemporalField) : JValueRange; cdecl;                // (Ljava/time/temporal/TemporalField;)Ljava/time/temporal/ValueRange; A: $1
    function toString : JString; cdecl;                                         // ()Ljava/lang/String; A: $1
  end;

  TJZoneOffset = class(TJavaGenericImport<JZoneOffsetClass, JZoneOffset>)
  end;




  // Merged from: .\java.time.chrono.IsoChronology.pas
  JIsoChronologyClass = interface(JObjectClass)
    ['{9EA22CF5-1203-4CEC-85ED-C8E081F4C11B}']
    function _GetINSTANCE : JIsoChronology; cdecl;                              //  A: $19
    function date(era : JEra; yearOfEra : Integer; month : Integer; dayOfMonth : Integer) : JLocalDate; cdecl; overload;// (Ljava/time/chrono/Era;III)Ljava/time/LocalDate; A: $1
    function date(prolepticYear : Integer; month : Integer; dayOfMonth : Integer) : JLocalDate; cdecl; overload;// (III)Ljava/time/LocalDate; A: $1
    function date(temporal : JTemporalAccessor) : JLocalDate; cdecl; overload;  // (Ljava/time/temporal/TemporalAccessor;)Ljava/time/LocalDate; A: $1
    function dateEpochDay(epochDay : Int64) : JLocalDate; cdecl;                // (J)Ljava/time/LocalDate; A: $1
    function dateNow : JLocalDate; cdecl; overload;                             // ()Ljava/time/LocalDate; A: $1
    function dateNow(clock : JClock) : JLocalDate; cdecl; overload;             // (Ljava/time/Clock;)Ljava/time/LocalDate; A: $1
    function dateNow(zone : JZoneId) : JLocalDate; cdecl; overload;             // (Ljava/time/ZoneId;)Ljava/time/LocalDate; A: $1
    function dateYearDay(era : JEra; yearOfEra : Integer; dayOfYear : Integer) : JLocalDate; cdecl; overload;// (Ljava/time/chrono/Era;II)Ljava/time/LocalDate; A: $1
    function dateYearDay(prolepticYear : Integer; dayOfYear : Integer) : JLocalDate; cdecl; overload;// (II)Ljava/time/LocalDate; A: $1
    function eraOf(eraValue : Integer) : JIsoEra; cdecl;                        // (I)Ljava/time/chrono/IsoEra; A: $1
    function eras : JList; cdecl;                                               // ()Ljava/util/List; A: $1
    function getCalendarType : JString; cdecl;                                  // ()Ljava/lang/String; A: $1
    function getId : JString; cdecl;                                            // ()Ljava/lang/String; A: $1
    function isLeapYear(prolepticYear : Int64) : boolean; cdecl;                // (J)Z A: $1
    function localDateTime(temporal : JTemporalAccessor) : JLocalDateTime; cdecl;// (Ljava/time/temporal/TemporalAccessor;)Ljava/time/LocalDateTime; A: $1
    function period(years : Integer; months : Integer; days : Integer) : JPeriod; cdecl;// (III)Ljava/time/Period; A: $1
    function prolepticYear(era : JEra; yearOfEra : Integer) : Integer; cdecl;   // (Ljava/time/chrono/Era;I)I A: $1
    function range(field : JChronoField) : JValueRange; cdecl;                  // (Ljava/time/temporal/ChronoField;)Ljava/time/temporal/ValueRange; A: $1
    function resolveDate(fieldValues : JMap; resolverStyle : JResolverStyle) : JLocalDate; cdecl;// (Ljava/util/Map;Ljava/time/format/ResolverStyle;)Ljava/time/LocalDate; A: $1
    function zonedDateTime(instant : JInstant; zone : JZoneId) : JZonedDateTime; cdecl; overload;// (Ljava/time/Instant;Ljava/time/ZoneId;)Ljava/time/ZonedDateTime; A: $1
    function zonedDateTime(temporal : JTemporalAccessor) : JZonedDateTime; cdecl; overload;// (Ljava/time/temporal/TemporalAccessor;)Ljava/time/ZonedDateTime; A: $1
    property INSTANCE : JIsoChronology read _GetINSTANCE;                       // Ljava/time/chrono/IsoChronology; A: $19
  end;

  [JavaSignature('java/time/chrono/IsoChronology')]
  JIsoChronology = interface(JObject)
    ['{FE47616D-D00F-4A25-9C3C-8DF0BC3D7794}']
    function date(era : JEra; yearOfEra : Integer; month : Integer; dayOfMonth : Integer) : JLocalDate; cdecl; overload;// (Ljava/time/chrono/Era;III)Ljava/time/LocalDate; A: $1
    function date(prolepticYear : Integer; month : Integer; dayOfMonth : Integer) : JLocalDate; cdecl; overload;// (III)Ljava/time/LocalDate; A: $1
    function date(temporal : JTemporalAccessor) : JLocalDate; cdecl; overload;  // (Ljava/time/temporal/TemporalAccessor;)Ljava/time/LocalDate; A: $1
    function dateEpochDay(epochDay : Int64) : JLocalDate; cdecl;                // (J)Ljava/time/LocalDate; A: $1
    function dateNow : JLocalDate; cdecl; overload;                             // ()Ljava/time/LocalDate; A: $1
    function dateNow(clock : JClock) : JLocalDate; cdecl; overload;             // (Ljava/time/Clock;)Ljava/time/LocalDate; A: $1
    function dateNow(zone : JZoneId) : JLocalDate; cdecl; overload;             // (Ljava/time/ZoneId;)Ljava/time/LocalDate; A: $1
    function dateYearDay(era : JEra; yearOfEra : Integer; dayOfYear : Integer) : JLocalDate; cdecl; overload;// (Ljava/time/chrono/Era;II)Ljava/time/LocalDate; A: $1
    function dateYearDay(prolepticYear : Integer; dayOfYear : Integer) : JLocalDate; cdecl; overload;// (II)Ljava/time/LocalDate; A: $1
    function eraOf(eraValue : Integer) : JIsoEra; cdecl;                        // (I)Ljava/time/chrono/IsoEra; A: $1
    function eras : JList; cdecl;                                               // ()Ljava/util/List; A: $1
    function getCalendarType : JString; cdecl;                                  // ()Ljava/lang/String; A: $1
    function getId : JString; cdecl;                                            // ()Ljava/lang/String; A: $1
    function isLeapYear(prolepticYear : Int64) : boolean; cdecl;                // (J)Z A: $1
    function localDateTime(temporal : JTemporalAccessor) : JLocalDateTime; cdecl;// (Ljava/time/temporal/TemporalAccessor;)Ljava/time/LocalDateTime; A: $1
    function period(years : Integer; months : Integer; days : Integer) : JPeriod; cdecl;// (III)Ljava/time/Period; A: $1
    function prolepticYear(era : JEra; yearOfEra : Integer) : Integer; cdecl;   // (Ljava/time/chrono/Era;I)I A: $1
    function range(field : JChronoField) : JValueRange; cdecl;                  // (Ljava/time/temporal/ChronoField;)Ljava/time/temporal/ValueRange; A: $1
    function resolveDate(fieldValues : JMap; resolverStyle : JResolverStyle) : JLocalDate; cdecl;// (Ljava/util/Map;Ljava/time/format/ResolverStyle;)Ljava/time/LocalDate; A: $1
    function zonedDateTime(instant : JInstant; zone : JZoneId) : JZonedDateTime; cdecl; overload;// (Ljava/time/Instant;Ljava/time/ZoneId;)Ljava/time/ZonedDateTime; A: $1
    function zonedDateTime(temporal : JTemporalAccessor) : JZonedDateTime; cdecl; overload;// (Ljava/time/temporal/TemporalAccessor;)Ljava/time/ZonedDateTime; A: $1
  end;

  TJIsoChronology = class(TJavaGenericImport<JIsoChronologyClass, JIsoChronology>)
  end;

  // Merged from: .\java.time.LocalDate.pas
  JLocalDateClass = interface(JObjectClass)
    ['{458062D9-0A90-442C-9362-7B164993DDB6}']
    function &of(year : Integer; month : Integer; dayOfMonth : Integer) : JLocalDate; cdecl; overload;// (III)Ljava/time/LocalDate; A: $9
    function &of(year : Integer; month : JMonth; dayOfMonth : Integer) : JLocalDate; cdecl; overload;// (ILjava/time/Month;I)Ljava/time/LocalDate; A: $9
    function &until(endDateExclusive : JChronoLocalDate) : JPeriod; cdecl; overload;// (Ljava/time/chrono/ChronoLocalDate;)Ljava/time/Period; A: $1
    function &until(endExclusive : JTemporal; &unit : JTemporalUnit) : Int64; cdecl; overload;// (Ljava/time/temporal/Temporal;Ljava/time/temporal/TemporalUnit;)J A: $1
    function &with(adjuster : JTemporalAdjuster) : JLocalDate; cdecl; overload; // (Ljava/time/temporal/TemporalAdjuster;)Ljava/time/LocalDate; A: $1
    function &with(field : JTemporalField; newValue : Int64) : JLocalDate; cdecl; overload;// (Ljava/time/temporal/TemporalField;J)Ljava/time/LocalDate; A: $1
    function _GetMAX : JLocalDate; cdecl;                                       //  A: $19
    function _GetMIN : JLocalDate; cdecl;                                       //  A: $19
    function adjustInto(temporal : JTemporal) : JTemporal; cdecl;               // (Ljava/time/temporal/Temporal;)Ljava/time/temporal/Temporal; A: $1
    function atStartOfDay : JLocalDateTime; cdecl; overload;                    // ()Ljava/time/LocalDateTime; A: $1
    function atStartOfDay(zone : JZoneId) : JZonedDateTime; cdecl; overload;    // (Ljava/time/ZoneId;)Ljava/time/ZonedDateTime; A: $1
    function atTime(hour : Integer; minute : Integer) : JLocalDateTime; cdecl; overload;// (II)Ljava/time/LocalDateTime; A: $1
    function atTime(hour : Integer; minute : Integer; second : Integer) : JLocalDateTime; cdecl; overload;// (III)Ljava/time/LocalDateTime; A: $1
    function atTime(hour : Integer; minute : Integer; second : Integer; nanoOfSecond : Integer) : JLocalDateTime; cdecl; overload;// (IIII)Ljava/time/LocalDateTime; A: $1
    function atTime(time : JLocalTime) : JLocalDateTime; cdecl; overload;       // (Ljava/time/LocalTime;)Ljava/time/LocalDateTime; A: $1
    function atTime(time : JOffsetTime) : JOffsetDateTime; cdecl; overload;     // (Ljava/time/OffsetTime;)Ljava/time/OffsetDateTime; A: $1
    function compareTo(other : JChronoLocalDate) : Integer; cdecl;              // (Ljava/time/chrono/ChronoLocalDate;)I A: $1
    function equals(obj : JObject) : boolean; cdecl;                            // (Ljava/lang/Object;)Z A: $1
    function format(formatter : JDateTimeFormatter) : JString; cdecl;           // (Ljava/time/format/DateTimeFormatter;)Ljava/lang/String; A: $1
    function from(temporal : JTemporalAccessor) : JLocalDate; cdecl;            // (Ljava/time/temporal/TemporalAccessor;)Ljava/time/LocalDate; A: $9
    function get(field : JTemporalField) : Integer; cdecl;                      // (Ljava/time/temporal/TemporalField;)I A: $1
    function getChronology : JIsoChronology; cdecl;                             // ()Ljava/time/chrono/IsoChronology; A: $1
    function getDayOfMonth : Integer; cdecl;                                    // ()I A: $1
    function getDayOfWeek : JDayOfWeek; cdecl;                                  // ()Ljava/time/DayOfWeek; A: $1
    function getDayOfYear : Integer; cdecl;                                     // ()I A: $1
    function getEra : JEra; cdecl;                                              // ()Ljava/time/chrono/Era; A: $1
    function getLong(field : JTemporalField) : Int64; cdecl;                    // (Ljava/time/temporal/TemporalField;)J A: $1
    function getMonth : JMonth; cdecl;                                          // ()Ljava/time/Month; A: $1
    function getMonthValue : Integer; cdecl;                                    // ()I A: $1
    function getYear : Integer; cdecl;                                          // ()I A: $1
    function hashCode : Integer; cdecl;                                         // ()I A: $1
    function isAfter(other : JChronoLocalDate) : boolean; cdecl;                // (Ljava/time/chrono/ChronoLocalDate;)Z A: $1
    function isBefore(other : JChronoLocalDate) : boolean; cdecl;               // (Ljava/time/chrono/ChronoLocalDate;)Z A: $1
    function isEqual(other : JChronoLocalDate) : boolean; cdecl;                // (Ljava/time/chrono/ChronoLocalDate;)Z A: $1
    function isLeapYear : boolean; cdecl;                                       // ()Z A: $1
    function isSupported(&unit : JTemporalUnit) : boolean; cdecl; overload;     // (Ljava/time/temporal/TemporalUnit;)Z A: $1
    function isSupported(field : JTemporalField) : boolean; cdecl; overload;    // (Ljava/time/temporal/TemporalField;)Z A: $1
    function lengthOfMonth : Integer; cdecl;                                    // ()I A: $1
    function lengthOfYear : Integer; cdecl;                                     // ()I A: $1
    function minus(amountToSubtract : Int64; &unit : JTemporalUnit) : JLocalDate; cdecl; overload;// (JLjava/time/temporal/TemporalUnit;)Ljava/time/LocalDate; A: $1
    function minus(amountToSubtract : JTemporalAmount) : JLocalDate; cdecl; overload;// (Ljava/time/temporal/TemporalAmount;)Ljava/time/LocalDate; A: $1
    function minusDays(daysToSubtract : Int64) : JLocalDate; cdecl;             // (J)Ljava/time/LocalDate; A: $1
    function minusMonths(monthsToSubtract : Int64) : JLocalDate; cdecl;         // (J)Ljava/time/LocalDate; A: $1
    function minusWeeks(weeksToSubtract : Int64) : JLocalDate; cdecl;           // (J)Ljava/time/LocalDate; A: $1
    function minusYears(yearsToSubtract : Int64) : JLocalDate; cdecl;           // (J)Ljava/time/LocalDate; A: $1
    function now : JLocalDate; cdecl; overload;                                 // ()Ljava/time/LocalDate; A: $9
    function now(clock : JClock) : JLocalDate; cdecl; overload;                 // (Ljava/time/Clock;)Ljava/time/LocalDate; A: $9
    function now(zone : JZoneId) : JLocalDate; cdecl; overload;                 // (Ljava/time/ZoneId;)Ljava/time/LocalDate; A: $9
    function ofEpochDay(epochDay : Int64) : JLocalDate; cdecl;                  // (J)Ljava/time/LocalDate; A: $9
    function ofYearDay(year : Integer; dayOfYear : Integer) : JLocalDate; cdecl;// (II)Ljava/time/LocalDate; A: $9
    function parse(text : JCharSequence) : JLocalDate; cdecl; overload;         // (Ljava/lang/CharSequence;)Ljava/time/LocalDate; A: $9
    function parse(text : JCharSequence; formatter : JDateTimeFormatter) : JLocalDate; cdecl; overload;// (Ljava/lang/CharSequence;Ljava/time/format/DateTimeFormatter;)Ljava/time/LocalDate; A: $9
    function plus(amountToAdd : Int64; &unit : JTemporalUnit) : JLocalDate; cdecl; overload;// (JLjava/time/temporal/TemporalUnit;)Ljava/time/LocalDate; A: $1
    function plus(amountToAdd : JTemporalAmount) : JLocalDate; cdecl; overload; // (Ljava/time/temporal/TemporalAmount;)Ljava/time/LocalDate; A: $1
    function plusDays(daysToAdd : Int64) : JLocalDate; cdecl;                   // (J)Ljava/time/LocalDate; A: $1
    function plusMonths(monthsToAdd : Int64) : JLocalDate; cdecl;               // (J)Ljava/time/LocalDate; A: $1
    function plusWeeks(weeksToAdd : Int64) : JLocalDate; cdecl;                 // (J)Ljava/time/LocalDate; A: $1
    function plusYears(yearsToAdd : Int64) : JLocalDate; cdecl;                 // (J)Ljava/time/LocalDate; A: $1
    function query(query : JTemporalQuery) : JObject; cdecl;                    // (Ljava/time/temporal/TemporalQuery;)Ljava/lang/Object; A: $1
    function range(field : JTemporalField) : JValueRange; cdecl;                // (Ljava/time/temporal/TemporalField;)Ljava/time/temporal/ValueRange; A: $1
    function toEpochDay : Int64; cdecl;                                         // ()J A: $1
    function toString : JString; cdecl;                                         // ()Ljava/lang/String; A: $1
    function withDayOfMonth(dayOfMonth : Integer) : JLocalDate; cdecl;          // (I)Ljava/time/LocalDate; A: $1
    function withDayOfYear(dayOfYear : Integer) : JLocalDate; cdecl;            // (I)Ljava/time/LocalDate; A: $1
    function withMonth(month : Integer) : JLocalDate; cdecl;                    // (I)Ljava/time/LocalDate; A: $1
    function withYear(year : Integer) : JLocalDate; cdecl;                      // (I)Ljava/time/LocalDate; A: $1
    property MAX : JLocalDate read _GetMAX;                                     // Ljava/time/LocalDate; A: $19
    property MIN : JLocalDate read _GetMIN;                                     // Ljava/time/LocalDate; A: $19
  end;

  [JavaSignature('java/time/LocalDate')]
  JLocalDate = interface(JObject)
    ['{566D8020-0569-427A-86F4-A327CB194020}']
    function &until(endDateExclusive : JChronoLocalDate) : JPeriod; cdecl; overload;// (Ljava/time/chrono/ChronoLocalDate;)Ljava/time/Period; A: $1
    function &until(endExclusive : JTemporal; &unit : JTemporalUnit) : Int64; cdecl; overload;// (Ljava/time/temporal/Temporal;Ljava/time/temporal/TemporalUnit;)J A: $1
    function &with(adjuster : JTemporalAdjuster) : JLocalDate; cdecl; overload; // (Ljava/time/temporal/TemporalAdjuster;)Ljava/time/LocalDate; A: $1
    function &with(field : JTemporalField; newValue : Int64) : JLocalDate; cdecl; overload;// (Ljava/time/temporal/TemporalField;J)Ljava/time/LocalDate; A: $1
    function adjustInto(temporal : JTemporal) : JTemporal; cdecl;               // (Ljava/time/temporal/Temporal;)Ljava/time/temporal/Temporal; A: $1
    function atStartOfDay : JLocalDateTime; cdecl; overload;                    // ()Ljava/time/LocalDateTime; A: $1
    function atStartOfDay(zone : JZoneId) : JZonedDateTime; cdecl; overload;    // (Ljava/time/ZoneId;)Ljava/time/ZonedDateTime; A: $1
    function atTime(hour : Integer; minute : Integer) : JLocalDateTime; cdecl; overload;// (II)Ljava/time/LocalDateTime; A: $1
    function atTime(hour : Integer; minute : Integer; second : Integer) : JLocalDateTime; cdecl; overload;// (III)Ljava/time/LocalDateTime; A: $1
    function atTime(hour : Integer; minute : Integer; second : Integer; nanoOfSecond : Integer) : JLocalDateTime; cdecl; overload;// (IIII)Ljava/time/LocalDateTime; A: $1
    function atTime(time : JLocalTime) : JLocalDateTime; cdecl; overload;       // (Ljava/time/LocalTime;)Ljava/time/LocalDateTime; A: $1
    function atTime(time : JOffsetTime) : JOffsetDateTime; cdecl; overload;     // (Ljava/time/OffsetTime;)Ljava/time/OffsetDateTime; A: $1
    function compareTo(other : JChronoLocalDate) : Integer; cdecl;              // (Ljava/time/chrono/ChronoLocalDate;)I A: $1
    function equals(obj : JObject) : boolean; cdecl;                            // (Ljava/lang/Object;)Z A: $1
    function format(formatter : JDateTimeFormatter) : JString; cdecl;           // (Ljava/time/format/DateTimeFormatter;)Ljava/lang/String; A: $1
    function get(field : JTemporalField) : Integer; cdecl;                      // (Ljava/time/temporal/TemporalField;)I A: $1
    function getChronology : JIsoChronology; cdecl;                             // ()Ljava/time/chrono/IsoChronology; A: $1
    function getDayOfMonth : Integer; cdecl;                                    // ()I A: $1
    function getDayOfWeek : JDayOfWeek; cdecl;                                  // ()Ljava/time/DayOfWeek; A: $1
    function getDayOfYear : Integer; cdecl;                                     // ()I A: $1
    function getEra : JEra; cdecl;                                              // ()Ljava/time/chrono/Era; A: $1
    function getLong(field : JTemporalField) : Int64; cdecl;                    // (Ljava/time/temporal/TemporalField;)J A: $1
    function getMonth : JMonth; cdecl;                                          // ()Ljava/time/Month; A: $1
    function getMonthValue : Integer; cdecl;                                    // ()I A: $1
    function getYear : Integer; cdecl;                                          // ()I A: $1
    function hashCode : Integer; cdecl;                                         // ()I A: $1
    function isAfter(other : JChronoLocalDate) : boolean; cdecl;                // (Ljava/time/chrono/ChronoLocalDate;)Z A: $1
    function isBefore(other : JChronoLocalDate) : boolean; cdecl;               // (Ljava/time/chrono/ChronoLocalDate;)Z A: $1
    function isEqual(other : JChronoLocalDate) : boolean; cdecl;                // (Ljava/time/chrono/ChronoLocalDate;)Z A: $1
    function isLeapYear : boolean; cdecl;                                       // ()Z A: $1
    function isSupported(&unit : JTemporalUnit) : boolean; cdecl; overload;     // (Ljava/time/temporal/TemporalUnit;)Z A: $1
    function isSupported(field : JTemporalField) : boolean; cdecl; overload;    // (Ljava/time/temporal/TemporalField;)Z A: $1
    function lengthOfMonth : Integer; cdecl;                                    // ()I A: $1
    function lengthOfYear : Integer; cdecl;                                     // ()I A: $1
    function minus(amountToSubtract : Int64; &unit : JTemporalUnit) : JLocalDate; cdecl; overload;// (JLjava/time/temporal/TemporalUnit;)Ljava/time/LocalDate; A: $1
    function minus(amountToSubtract : JTemporalAmount) : JLocalDate; cdecl; overload;// (Ljava/time/temporal/TemporalAmount;)Ljava/time/LocalDate; A: $1
    function minusDays(daysToSubtract : Int64) : JLocalDate; cdecl;             // (J)Ljava/time/LocalDate; A: $1
    function minusMonths(monthsToSubtract : Int64) : JLocalDate; cdecl;         // (J)Ljava/time/LocalDate; A: $1
    function minusWeeks(weeksToSubtract : Int64) : JLocalDate; cdecl;           // (J)Ljava/time/LocalDate; A: $1
    function minusYears(yearsToSubtract : Int64) : JLocalDate; cdecl;           // (J)Ljava/time/LocalDate; A: $1
    function plus(amountToAdd : Int64; &unit : JTemporalUnit) : JLocalDate; cdecl; overload;// (JLjava/time/temporal/TemporalUnit;)Ljava/time/LocalDate; A: $1
    function plus(amountToAdd : JTemporalAmount) : JLocalDate; cdecl; overload; // (Ljava/time/temporal/TemporalAmount;)Ljava/time/LocalDate; A: $1
    function plusDays(daysToAdd : Int64) : JLocalDate; cdecl;                   // (J)Ljava/time/LocalDate; A: $1
    function plusMonths(monthsToAdd : Int64) : JLocalDate; cdecl;               // (J)Ljava/time/LocalDate; A: $1
    function plusWeeks(weeksToAdd : Int64) : JLocalDate; cdecl;                 // (J)Ljava/time/LocalDate; A: $1
    function plusYears(yearsToAdd : Int64) : JLocalDate; cdecl;                 // (J)Ljava/time/LocalDate; A: $1
    function query(query : JTemporalQuery) : JObject; cdecl;                    // (Ljava/time/temporal/TemporalQuery;)Ljava/lang/Object; A: $1
    function range(field : JTemporalField) : JValueRange; cdecl;                // (Ljava/time/temporal/TemporalField;)Ljava/time/temporal/ValueRange; A: $1
    function toEpochDay : Int64; cdecl;                                         // ()J A: $1
    function toString : JString; cdecl;                                         // ()Ljava/lang/String; A: $1
    function withDayOfMonth(dayOfMonth : Integer) : JLocalDate; cdecl;          // (I)Ljava/time/LocalDate; A: $1
    function withDayOfYear(dayOfYear : Integer) : JLocalDate; cdecl;            // (I)Ljava/time/LocalDate; A: $1
    function withMonth(month : Integer) : JLocalDate; cdecl;                    // (I)Ljava/time/LocalDate; A: $1
    function withYear(year : Integer) : JLocalDate; cdecl;                      // (I)Ljava/time/LocalDate; A: $1
  end;

  TJLocalDate = class(TJavaGenericImport<JLocalDateClass, JLocalDate>)
  end;


  // Merged from: .\java.time.Period.pas
  JPeriodClass = interface(JObjectClass)
    ['{3160B471-EFC1-4533-BF23-48BEC1201A94}']
    function &of(years : Integer; months : Integer; days : Integer) : JPeriod; cdecl;// (III)Ljava/time/Period; A: $9
    function _GetZERO : JPeriod; cdecl;                                         //  A: $19
    function addTo(temporal : JTemporal) : JTemporal; cdecl;                    // (Ljava/time/temporal/Temporal;)Ljava/time/temporal/Temporal; A: $1
    function between(startDateInclusive : JLocalDate; endDateExclusive : JLocalDate) : JPeriod; cdecl;// (Ljava/time/LocalDate;Ljava/time/LocalDate;)Ljava/time/Period; A: $9
    function equals(obj : JObject) : boolean; cdecl;                            // (Ljava/lang/Object;)Z A: $1
    function from(amount : JTemporalAmount) : JPeriod; cdecl;                   // (Ljava/time/temporal/TemporalAmount;)Ljava/time/Period; A: $9
    function get(&unit : JTemporalUnit) : Int64; cdecl;                         // (Ljava/time/temporal/TemporalUnit;)J A: $1
    function getChronology : JIsoChronology; cdecl;                             // ()Ljava/time/chrono/IsoChronology; A: $1
    function getDays : Integer; cdecl;                                          // ()I A: $1
    function getMonths : Integer; cdecl;                                        // ()I A: $1
    function getUnits : JList; cdecl;                                           // ()Ljava/util/List; A: $1
    function getYears : Integer; cdecl;                                         // ()I A: $1
    function hashCode : Integer; cdecl;                                         // ()I A: $1
    function isNegative : boolean; cdecl;                                       // ()Z A: $1
    function isZero : boolean; cdecl;                                           // ()Z A: $1
    function minus(amountToSubtract : JTemporalAmount) : JPeriod; cdecl;        // (Ljava/time/temporal/TemporalAmount;)Ljava/time/Period; A: $1
    function minusDays(daysToSubtract : Int64) : JPeriod; cdecl;                // (J)Ljava/time/Period; A: $1
    function minusMonths(monthsToSubtract : Int64) : JPeriod; cdecl;            // (J)Ljava/time/Period; A: $1
    function minusYears(yearsToSubtract : Int64) : JPeriod; cdecl;              // (J)Ljava/time/Period; A: $1
    function multipliedBy(scalar : Integer) : JPeriod; cdecl;                   // (I)Ljava/time/Period; A: $1
    function negated : JPeriod; cdecl;                                          // ()Ljava/time/Period; A: $1
    function normalized : JPeriod; cdecl;                                       // ()Ljava/time/Period; A: $1
    function ofDays(days : Integer) : JPeriod; cdecl;                           // (I)Ljava/time/Period; A: $9
    function ofMonths(months : Integer) : JPeriod; cdecl;                       // (I)Ljava/time/Period; A: $9
    function ofWeeks(weeks : Integer) : JPeriod; cdecl;                         // (I)Ljava/time/Period; A: $9
    function ofYears(years : Integer) : JPeriod; cdecl;                         // (I)Ljava/time/Period; A: $9
    function parse(text : JCharSequence) : JPeriod; cdecl;                      // (Ljava/lang/CharSequence;)Ljava/time/Period; A: $9
    function plus(amountToAdd : JTemporalAmount) : JPeriod; cdecl;              // (Ljava/time/temporal/TemporalAmount;)Ljava/time/Period; A: $1
    function plusDays(daysToAdd : Int64) : JPeriod; cdecl;                      // (J)Ljava/time/Period; A: $1
    function plusMonths(monthsToAdd : Int64) : JPeriod; cdecl;                  // (J)Ljava/time/Period; A: $1
    function plusYears(yearsToAdd : Int64) : JPeriod; cdecl;                    // (J)Ljava/time/Period; A: $1
    function subtractFrom(temporal : JTemporal) : JTemporal; cdecl;             // (Ljava/time/temporal/Temporal;)Ljava/time/temporal/Temporal; A: $1
    function toString : JString; cdecl;                                         // ()Ljava/lang/String; A: $1
    function toTotalMonths : Int64; cdecl;                                      // ()J A: $1
    function withDays(days : Integer) : JPeriod; cdecl;                         // (I)Ljava/time/Period; A: $1
    function withMonths(months : Integer) : JPeriod; cdecl;                     // (I)Ljava/time/Period; A: $1
    function withYears(years : Integer) : JPeriod; cdecl;                       // (I)Ljava/time/Period; A: $1
    property ZERO : JPeriod read _GetZERO;                                      // Ljava/time/Period; A: $19
  end;

  [JavaSignature('java/time/Period')]
  JPeriod = interface(JObject)
    ['{AE01A187-79C0-4453-96E2-56E7A948A276}']
    function addTo(temporal : JTemporal) : JTemporal; cdecl;                    // (Ljava/time/temporal/Temporal;)Ljava/time/temporal/Temporal; A: $1
    function equals(obj : JObject) : boolean; cdecl;                            // (Ljava/lang/Object;)Z A: $1
    function get(&unit : JTemporalUnit) : Int64; cdecl;                         // (Ljava/time/temporal/TemporalUnit;)J A: $1
    function getChronology : JIsoChronology; cdecl;                             // ()Ljava/time/chrono/IsoChronology; A: $1
    function getDays : Integer; cdecl;                                          // ()I A: $1
    function getMonths : Integer; cdecl;                                        // ()I A: $1
    function getUnits : JList; cdecl;                                           // ()Ljava/util/List; A: $1
    function getYears : Integer; cdecl;                                         // ()I A: $1
    function hashCode : Integer; cdecl;                                         // ()I A: $1
    function isNegative : boolean; cdecl;                                       // ()Z A: $1
    function isZero : boolean; cdecl;                                           // ()Z A: $1
    function minus(amountToSubtract : JTemporalAmount) : JPeriod; cdecl;        // (Ljava/time/temporal/TemporalAmount;)Ljava/time/Period; A: $1
    function minusDays(daysToSubtract : Int64) : JPeriod; cdecl;                // (J)Ljava/time/Period; A: $1
    function minusMonths(monthsToSubtract : Int64) : JPeriod; cdecl;            // (J)Ljava/time/Period; A: $1
    function minusYears(yearsToSubtract : Int64) : JPeriod; cdecl;              // (J)Ljava/time/Period; A: $1
    function multipliedBy(scalar : Integer) : JPeriod; cdecl;                   // (I)Ljava/time/Period; A: $1
    function negated : JPeriod; cdecl;                                          // ()Ljava/time/Period; A: $1
    function normalized : JPeriod; cdecl;                                       // ()Ljava/time/Period; A: $1
    function plus(amountToAdd : JTemporalAmount) : JPeriod; cdecl;              // (Ljava/time/temporal/TemporalAmount;)Ljava/time/Period; A: $1
    function plusDays(daysToAdd : Int64) : JPeriod; cdecl;                      // (J)Ljava/time/Period; A: $1
    function plusMonths(monthsToAdd : Int64) : JPeriod; cdecl;                  // (J)Ljava/time/Period; A: $1
    function plusYears(yearsToAdd : Int64) : JPeriod; cdecl;                    // (J)Ljava/time/Period; A: $1
    function subtractFrom(temporal : JTemporal) : JTemporal; cdecl;             // (Ljava/time/temporal/Temporal;)Ljava/time/temporal/Temporal; A: $1
    function toString : JString; cdecl;                                         // ()Ljava/lang/String; A: $1
    function toTotalMonths : Int64; cdecl;                                      // ()J A: $1
    function withDays(days : Integer) : JPeriod; cdecl;                         // (I)Ljava/time/Period; A: $1
    function withMonths(months : Integer) : JPeriod; cdecl;                     // (I)Ljava/time/Period; A: $1
    function withYears(years : Integer) : JPeriod; cdecl;                       // (I)Ljava/time/Period; A: $1
  end;

  TJPeriod = class(TJavaGenericImport<JPeriodClass, JPeriod>)
  end;


  // Merged from: .\java.time.OffsetTime.pas
  JOffsetTimeClass = interface(JObjectClass)
    ['{FC979327-F64B-4161-9494-51AA6CAC513C}']
    function &of(hour : Integer; minute : Integer; second : Integer; nanoOfSecond : Integer; offset : JZoneOffset) : JOffsetTime; cdecl; overload;// (IIIILjava/time/ZoneOffset;)Ljava/time/OffsetTime; A: $9
    function &of(time : JLocalTime; offset : JZoneOffset) : JOffsetTime; cdecl; overload;// (Ljava/time/LocalTime;Ljava/time/ZoneOffset;)Ljava/time/OffsetTime; A: $9
    function &until(endExclusive : JTemporal; &unit : JTemporalUnit) : Int64; cdecl;// (Ljava/time/temporal/Temporal;Ljava/time/temporal/TemporalUnit;)J A: $1
    function &with(adjuster : JTemporalAdjuster) : JOffsetTime; cdecl; overload;// (Ljava/time/temporal/TemporalAdjuster;)Ljava/time/OffsetTime; A: $1
    function &with(field : JTemporalField; newValue : Int64) : JOffsetTime; cdecl; overload;// (Ljava/time/temporal/TemporalField;J)Ljava/time/OffsetTime; A: $1
    function _GetMAX : JOffsetTime; cdecl;                                      //  A: $19
    function _GetMIN : JOffsetTime; cdecl;                                      //  A: $19
    function adjustInto(temporal : JTemporal) : JTemporal; cdecl;               // (Ljava/time/temporal/Temporal;)Ljava/time/temporal/Temporal; A: $1
    function atDate(date : JLocalDate) : JOffsetDateTime; cdecl;                // (Ljava/time/LocalDate;)Ljava/time/OffsetDateTime; A: $1
    function compareTo(other : JOffsetTime) : Integer; cdecl;                   // (Ljava/time/OffsetTime;)I A: $1
    function equals(obj : JObject) : boolean; cdecl;                            // (Ljava/lang/Object;)Z A: $1
    function format(formatter : JDateTimeFormatter) : JString; cdecl;           // (Ljava/time/format/DateTimeFormatter;)Ljava/lang/String; A: $1
    function from(temporal : JTemporalAccessor) : JOffsetTime; cdecl;           // (Ljava/time/temporal/TemporalAccessor;)Ljava/time/OffsetTime; A: $9
    function get(field : JTemporalField) : Integer; cdecl;                      // (Ljava/time/temporal/TemporalField;)I A: $1
    function getHour : Integer; cdecl;                                          // ()I A: $1
    function getLong(field : JTemporalField) : Int64; cdecl;                    // (Ljava/time/temporal/TemporalField;)J A: $1
    function getMinute : Integer; cdecl;                                        // ()I A: $1
    function getNano : Integer; cdecl;                                          // ()I A: $1
    function getOffset : JZoneOffset; cdecl;                                    // ()Ljava/time/ZoneOffset; A: $1
    function getSecond : Integer; cdecl;                                        // ()I A: $1
    function hashCode : Integer; cdecl;                                         // ()I A: $1
    function isAfter(other : JOffsetTime) : boolean; cdecl;                     // (Ljava/time/OffsetTime;)Z A: $1
    function isBefore(other : JOffsetTime) : boolean; cdecl;                    // (Ljava/time/OffsetTime;)Z A: $1
    function isEqual(other : JOffsetTime) : boolean; cdecl;                     // (Ljava/time/OffsetTime;)Z A: $1
    function isSupported(&unit : JTemporalUnit) : boolean; cdecl; overload;     // (Ljava/time/temporal/TemporalUnit;)Z A: $1
    function isSupported(field : JTemporalField) : boolean; cdecl; overload;    // (Ljava/time/temporal/TemporalField;)Z A: $1
    function minus(amountToSubtract : Int64; &unit : JTemporalUnit) : JOffsetTime; cdecl; overload;// (JLjava/time/temporal/TemporalUnit;)Ljava/time/OffsetTime; A: $1
    function minus(amountToSubtract : JTemporalAmount) : JOffsetTime; cdecl; overload;// (Ljava/time/temporal/TemporalAmount;)Ljava/time/OffsetTime; A: $1
    function minusHours(hours : Int64) : JOffsetTime; cdecl;                    // (J)Ljava/time/OffsetTime; A: $1
    function minusMinutes(minutes : Int64) : JOffsetTime; cdecl;                // (J)Ljava/time/OffsetTime; A: $1
    function minusNanos(nanos : Int64) : JOffsetTime; cdecl;                    // (J)Ljava/time/OffsetTime; A: $1
    function minusSeconds(seconds : Int64) : JOffsetTime; cdecl;                // (J)Ljava/time/OffsetTime; A: $1
    function now : JOffsetTime; cdecl; overload;                                // ()Ljava/time/OffsetTime; A: $9
    function now(clock : JClock) : JOffsetTime; cdecl; overload;                // (Ljava/time/Clock;)Ljava/time/OffsetTime; A: $9
    function now(zone : JZoneId) : JOffsetTime; cdecl; overload;                // (Ljava/time/ZoneId;)Ljava/time/OffsetTime; A: $9
    function ofInstant(instant : JInstant; zone : JZoneId) : JOffsetTime; cdecl;// (Ljava/time/Instant;Ljava/time/ZoneId;)Ljava/time/OffsetTime; A: $9
    function parse(text : JCharSequence) : JOffsetTime; cdecl; overload;        // (Ljava/lang/CharSequence;)Ljava/time/OffsetTime; A: $9
    function parse(text : JCharSequence; formatter : JDateTimeFormatter) : JOffsetTime; cdecl; overload;// (Ljava/lang/CharSequence;Ljava/time/format/DateTimeFormatter;)Ljava/time/OffsetTime; A: $9
    function plus(amountToAdd : Int64; &unit : JTemporalUnit) : JOffsetTime; cdecl; overload;// (JLjava/time/temporal/TemporalUnit;)Ljava/time/OffsetTime; A: $1
    function plus(amountToAdd : JTemporalAmount) : JOffsetTime; cdecl; overload;// (Ljava/time/temporal/TemporalAmount;)Ljava/time/OffsetTime; A: $1
    function plusHours(hours : Int64) : JOffsetTime; cdecl;                     // (J)Ljava/time/OffsetTime; A: $1
    function plusMinutes(minutes : Int64) : JOffsetTime; cdecl;                 // (J)Ljava/time/OffsetTime; A: $1
    function plusNanos(nanos : Int64) : JOffsetTime; cdecl;                     // (J)Ljava/time/OffsetTime; A: $1
    function plusSeconds(seconds : Int64) : JOffsetTime; cdecl;                 // (J)Ljava/time/OffsetTime; A: $1
    function query(query : JTemporalQuery) : JObject; cdecl;                    // (Ljava/time/temporal/TemporalQuery;)Ljava/lang/Object; A: $1
    function range(field : JTemporalField) : JValueRange; cdecl;                // (Ljava/time/temporal/TemporalField;)Ljava/time/temporal/ValueRange; A: $1
    function toLocalTime : JLocalTime; cdecl;                                   // ()Ljava/time/LocalTime; A: $1
    function toString : JString; cdecl;                                         // ()Ljava/lang/String; A: $1
    function truncatedTo(&unit : JTemporalUnit) : JOffsetTime; cdecl;           // (Ljava/time/temporal/TemporalUnit;)Ljava/time/OffsetTime; A: $1
    function withHour(hour : Integer) : JOffsetTime; cdecl;                     // (I)Ljava/time/OffsetTime; A: $1
    function withMinute(minute : Integer) : JOffsetTime; cdecl;                 // (I)Ljava/time/OffsetTime; A: $1
    function withNano(nanoOfSecond : Integer) : JOffsetTime; cdecl;             // (I)Ljava/time/OffsetTime; A: $1
    function withOffsetSameInstant(offset : JZoneOffset) : JOffsetTime; cdecl;  // (Ljava/time/ZoneOffset;)Ljava/time/OffsetTime; A: $1
    function withOffsetSameLocal(offset : JZoneOffset) : JOffsetTime; cdecl;    // (Ljava/time/ZoneOffset;)Ljava/time/OffsetTime; A: $1
    function withSecond(second : Integer) : JOffsetTime; cdecl;                 // (I)Ljava/time/OffsetTime; A: $1
    property MAX : JOffsetTime read _GetMAX;                                    // Ljava/time/OffsetTime; A: $19
    property MIN : JOffsetTime read _GetMIN;                                    // Ljava/time/OffsetTime; A: $19
  end;

  [JavaSignature('java/time/OffsetTime')]
  JOffsetTime = interface(JObject)
    ['{A661E3FE-9BFC-452B-AB44-9275B0AEDD9A}']
    function &until(endExclusive : JTemporal; &unit : JTemporalUnit) : Int64; cdecl;// (Ljava/time/temporal/Temporal;Ljava/time/temporal/TemporalUnit;)J A: $1
    function &with(adjuster : JTemporalAdjuster) : JOffsetTime; cdecl; overload;// (Ljava/time/temporal/TemporalAdjuster;)Ljava/time/OffsetTime; A: $1
    function &with(field : JTemporalField; newValue : Int64) : JOffsetTime; cdecl; overload;// (Ljava/time/temporal/TemporalField;J)Ljava/time/OffsetTime; A: $1
    function adjustInto(temporal : JTemporal) : JTemporal; cdecl;               // (Ljava/time/temporal/Temporal;)Ljava/time/temporal/Temporal; A: $1
    function atDate(date : JLocalDate) : JOffsetDateTime; cdecl;                // (Ljava/time/LocalDate;)Ljava/time/OffsetDateTime; A: $1
    function compareTo(other : JOffsetTime) : Integer; cdecl;                   // (Ljava/time/OffsetTime;)I A: $1
    function equals(obj : JObject) : boolean; cdecl;                            // (Ljava/lang/Object;)Z A: $1
    function format(formatter : JDateTimeFormatter) : JString; cdecl;           // (Ljava/time/format/DateTimeFormatter;)Ljava/lang/String; A: $1
    function get(field : JTemporalField) : Integer; cdecl;                      // (Ljava/time/temporal/TemporalField;)I A: $1
    function getHour : Integer; cdecl;                                          // ()I A: $1
    function getLong(field : JTemporalField) : Int64; cdecl;                    // (Ljava/time/temporal/TemporalField;)J A: $1
    function getMinute : Integer; cdecl;                                        // ()I A: $1
    function getNano : Integer; cdecl;                                          // ()I A: $1
    function getOffset : JZoneOffset; cdecl;                                    // ()Ljava/time/ZoneOffset; A: $1
    function getSecond : Integer; cdecl;                                        // ()I A: $1
    function hashCode : Integer; cdecl;                                         // ()I A: $1
    function isAfter(other : JOffsetTime) : boolean; cdecl;                     // (Ljava/time/OffsetTime;)Z A: $1
    function isBefore(other : JOffsetTime) : boolean; cdecl;                    // (Ljava/time/OffsetTime;)Z A: $1
    function isEqual(other : JOffsetTime) : boolean; cdecl;                     // (Ljava/time/OffsetTime;)Z A: $1
    function isSupported(&unit : JTemporalUnit) : boolean; cdecl; overload;     // (Ljava/time/temporal/TemporalUnit;)Z A: $1
    function isSupported(field : JTemporalField) : boolean; cdecl; overload;    // (Ljava/time/temporal/TemporalField;)Z A: $1
    function minus(amountToSubtract : Int64; &unit : JTemporalUnit) : JOffsetTime; cdecl; overload;// (JLjava/time/temporal/TemporalUnit;)Ljava/time/OffsetTime; A: $1
    function minus(amountToSubtract : JTemporalAmount) : JOffsetTime; cdecl; overload;// (Ljava/time/temporal/TemporalAmount;)Ljava/time/OffsetTime; A: $1
    function minusHours(hours : Int64) : JOffsetTime; cdecl;                    // (J)Ljava/time/OffsetTime; A: $1
    function minusMinutes(minutes : Int64) : JOffsetTime; cdecl;                // (J)Ljava/time/OffsetTime; A: $1
    function minusNanos(nanos : Int64) : JOffsetTime; cdecl;                    // (J)Ljava/time/OffsetTime; A: $1
    function minusSeconds(seconds : Int64) : JOffsetTime; cdecl;                // (J)Ljava/time/OffsetTime; A: $1
    function plus(amountToAdd : Int64; &unit : JTemporalUnit) : JOffsetTime; cdecl; overload;// (JLjava/time/temporal/TemporalUnit;)Ljava/time/OffsetTime; A: $1
    function plus(amountToAdd : JTemporalAmount) : JOffsetTime; cdecl; overload;// (Ljava/time/temporal/TemporalAmount;)Ljava/time/OffsetTime; A: $1
    function plusHours(hours : Int64) : JOffsetTime; cdecl;                     // (J)Ljava/time/OffsetTime; A: $1
    function plusMinutes(minutes : Int64) : JOffsetTime; cdecl;                 // (J)Ljava/time/OffsetTime; A: $1
    function plusNanos(nanos : Int64) : JOffsetTime; cdecl;                     // (J)Ljava/time/OffsetTime; A: $1
    function plusSeconds(seconds : Int64) : JOffsetTime; cdecl;                 // (J)Ljava/time/OffsetTime; A: $1
    function query(query : JTemporalQuery) : JObject; cdecl;                    // (Ljava/time/temporal/TemporalQuery;)Ljava/lang/Object; A: $1
    function range(field : JTemporalField) : JValueRange; cdecl;                // (Ljava/time/temporal/TemporalField;)Ljava/time/temporal/ValueRange; A: $1
    function toLocalTime : JLocalTime; cdecl;                                   // ()Ljava/time/LocalTime; A: $1
    function toString : JString; cdecl;                                         // ()Ljava/lang/String; A: $1
    function truncatedTo(&unit : JTemporalUnit) : JOffsetTime; cdecl;           // (Ljava/time/temporal/TemporalUnit;)Ljava/time/OffsetTime; A: $1
    function withHour(hour : Integer) : JOffsetTime; cdecl;                     // (I)Ljava/time/OffsetTime; A: $1
    function withMinute(minute : Integer) : JOffsetTime; cdecl;                 // (I)Ljava/time/OffsetTime; A: $1
    function withNano(nanoOfSecond : Integer) : JOffsetTime; cdecl;             // (I)Ljava/time/OffsetTime; A: $1
    function withOffsetSameInstant(offset : JZoneOffset) : JOffsetTime; cdecl;  // (Ljava/time/ZoneOffset;)Ljava/time/OffsetTime; A: $1
    function withOffsetSameLocal(offset : JZoneOffset) : JOffsetTime; cdecl;    // (Ljava/time/ZoneOffset;)Ljava/time/OffsetTime; A: $1
    function withSecond(second : Integer) : JOffsetTime; cdecl;                 // (I)Ljava/time/OffsetTime; A: $1
  end;

  TJOffsetTime = class(TJavaGenericImport<JOffsetTimeClass, JOffsetTime>)
  end;



  // Merged from: .\java.time.ZoneId.pas
  JZoneIdClass = interface(JObjectClass)
    ['{3494B305-ADAA-43D0-BC58-A973FB75EF90}']
    function &of(zoneId : JString) : JZoneId; cdecl; overload;                  // (Ljava/lang/String;)Ljava/time/ZoneId; A: $9
    function &of(zoneId : JString; aliasMap : JMap) : JZoneId; cdecl; overload; // (Ljava/lang/String;Ljava/util/Map;)Ljava/time/ZoneId; A: $9
    function _GetSHORT_IDS : JMap; cdecl;                                       //  A: $19
    function equals(obj : JObject) : boolean; cdecl;                            // (Ljava/lang/Object;)Z A: $1
    function from(temporal : JTemporalAccessor) : JZoneId; cdecl;               // (Ljava/time/temporal/TemporalAccessor;)Ljava/time/ZoneId; A: $9
    function getAvailableZoneIds : JSet; cdecl;                                 // ()Ljava/util/Set; A: $9
    function getDisplayName(style : JTextStyle; locale : JLocale) : JString; cdecl;// (Ljava/time/format/TextStyle;Ljava/util/Locale;)Ljava/lang/String; A: $1
    function getId : JString; cdecl;                                            // ()Ljava/lang/String; A: $401
    function getRules : JZoneRules; cdecl;                                      // ()Ljava/time/zone/ZoneRules; A: $401
    function hashCode : Integer; cdecl;                                         // ()I A: $1
    function normalized : JZoneId; cdecl;                                       // ()Ljava/time/ZoneId; A: $1
    function ofOffset(prefix : JString; offset : JZoneOffset) : JZoneId; cdecl; // (Ljava/lang/String;Ljava/time/ZoneOffset;)Ljava/time/ZoneId; A: $9
    function systemDefault : JZoneId; cdecl;                                    // ()Ljava/time/ZoneId; A: $9
    function toString : JString; cdecl;                                         // ()Ljava/lang/String; A: $1
    property SHORT_IDS : JMap read _GetSHORT_IDS;                               // Ljava/util/Map; A: $19
  end;

  [JavaSignature('java/time/ZoneId')]
  JZoneId = interface(JObject)
    ['{5831DB43-C005-4ED1-8EF1-2A02DA048F81}']
    function equals(obj : JObject) : boolean; cdecl;                            // (Ljava/lang/Object;)Z A: $1
    function getDisplayName(style : JTextStyle; locale : JLocale) : JString; cdecl;// (Ljava/time/format/TextStyle;Ljava/util/Locale;)Ljava/lang/String; A: $1
    function getId : JString; cdecl;                                            // ()Ljava/lang/String; A: $401
    function getRules : JZoneRules; cdecl;                                      // ()Ljava/time/zone/ZoneRules; A: $401
    function hashCode : Integer; cdecl;                                         // ()I A: $1
    function normalized : JZoneId; cdecl;                                       // ()Ljava/time/ZoneId; A: $1
    function toString : JString; cdecl;                                         // ()Ljava/lang/String; A: $1
  end;

  TJZoneId = class(TJavaGenericImport<JZoneIdClass, JZoneId>)
  end;


  // Merged from: .\java.time.zone.ZoneOffsetTransition.pas
  JZoneOffsetTransitionClass = interface(JObjectClass)
    ['{F0000A77-7924-4C1B-B5F0-9DB9B531DE8F}']
    function &of(transition : JLocalDateTime; offsetBefore : JZoneOffset; offsetAfter : JZoneOffset) : JZoneOffsetTransition; cdecl;// (Ljava/time/LocalDateTime;Ljava/time/ZoneOffset;Ljava/time/ZoneOffset;)Ljava/time/zone/ZoneOffsetTransition; A: $9
    function compareTo(transition : JZoneOffsetTransition) : Integer; cdecl;    // (Ljava/time/zone/ZoneOffsetTransition;)I A: $1
    function equals(other : JObject) : boolean; cdecl;                          // (Ljava/lang/Object;)Z A: $1
    function getDateTimeAfter : JLocalDateTime; cdecl;                          // ()Ljava/time/LocalDateTime; A: $1
    function getDateTimeBefore : JLocalDateTime; cdecl;                         // ()Ljava/time/LocalDateTime; A: $1
    function getDuration : JDuration; cdecl;                                    // ()Ljava/time/Duration; A: $1
    function getInstant : JInstant; cdecl;                                      // ()Ljava/time/Instant; A: $1
    function getOffsetAfter : JZoneOffset; cdecl;                               // ()Ljava/time/ZoneOffset; A: $1
    function getOffsetBefore : JZoneOffset; cdecl;                              // ()Ljava/time/ZoneOffset; A: $1
    function hashCode : Integer; cdecl;                                         // ()I A: $1
    function isGap : boolean; cdecl;                                            // ()Z A: $1
    function isOverlap : boolean; cdecl;                                        // ()Z A: $1
    function isValidOffset(offset : JZoneOffset) : boolean; cdecl;              // (Ljava/time/ZoneOffset;)Z A: $1
    function toEpochSecond : Int64; cdecl;                                      // ()J A: $1
    function toString : JString; cdecl;                                         // ()Ljava/lang/String; A: $1
  end;

  [JavaSignature('java/time/zone/ZoneOffsetTransition')]
  JZoneOffsetTransition = interface(JObject)
    ['{C23056BA-759F-41F2-AF3A-3238E3265F93}']
    function compareTo(transition : JZoneOffsetTransition) : Integer; cdecl;    // (Ljava/time/zone/ZoneOffsetTransition;)I A: $1
    function equals(other : JObject) : boolean; cdecl;                          // (Ljava/lang/Object;)Z A: $1
    function getDateTimeAfter : JLocalDateTime; cdecl;                          // ()Ljava/time/LocalDateTime; A: $1
    function getDateTimeBefore : JLocalDateTime; cdecl;                         // ()Ljava/time/LocalDateTime; A: $1
    function getDuration : JDuration; cdecl;                                    // ()Ljava/time/Duration; A: $1
    function getInstant : JInstant; cdecl;                                      // ()Ljava/time/Instant; A: $1
    function getOffsetAfter : JZoneOffset; cdecl;                               // ()Ljava/time/ZoneOffset; A: $1
    function getOffsetBefore : JZoneOffset; cdecl;                              // ()Ljava/time/ZoneOffset; A: $1
    function hashCode : Integer; cdecl;                                         // ()I A: $1
    function isGap : boolean; cdecl;                                            // ()Z A: $1
    function isOverlap : boolean; cdecl;                                        // ()Z A: $1
    function isValidOffset(offset : JZoneOffset) : boolean; cdecl;              // (Ljava/time/ZoneOffset;)Z A: $1
    function toEpochSecond : Int64; cdecl;                                      // ()J A: $1
    function toString : JString; cdecl;                                         // ()Ljava/lang/String; A: $1
  end;

  TJZoneOffsetTransition = class(TJavaGenericImport<JZoneOffsetTransitionClass, JZoneOffsetTransition>)
  end;


implementation

end.
