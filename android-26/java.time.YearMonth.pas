//
// Generated by JavaToPas v1.5 20171018 - 171205
////////////////////////////////////////////////////////////////////////////////
unit java.time.YearMonth;

interface

uses
  AndroidAPI.JNIBridge,
  Androidapi.JNI.JavaTypes,
  java.time.Month,
  java.time.chrono.ChronoLocalDate,
  java.time.Duration;

type
  JYearMonth = interface;

  JYearMonthClass = interface(JObjectClass)
    ['{933CCFDC-5A45-4BFA-9239-4DDCD65694F7}']
    function &of(year : Integer; month : Integer) : JYearMonth; cdecl; overload;// (II)Ljava/time/YearMonth; A: $9
    function &of(year : Integer; month : JMonth) : JYearMonth; cdecl; overload; // (ILjava/time/Month;)Ljava/time/YearMonth; A: $9
    function &until(endExclusive : JTemporal; &unit : JTemporalUnit) : Int64; cdecl;// (Ljava/time/temporal/Temporal;Ljava/time/temporal/TemporalUnit;)J A: $1
    function &with(adjuster : JTemporalAdjuster) : JYearMonth; cdecl; overload; // (Ljava/time/temporal/TemporalAdjuster;)Ljava/time/YearMonth; A: $1
    function &with(field : JTemporalField; newValue : Int64) : JYearMonth; cdecl; overload;// (Ljava/time/temporal/TemporalField;J)Ljava/time/YearMonth; A: $1
    function adjustInto(temporal : JTemporal) : JTemporal; cdecl;               // (Ljava/time/temporal/Temporal;)Ljava/time/temporal/Temporal; A: $1
    function atDay(dayOfMonth : Integer) : JLocalDate; cdecl;                   // (I)Ljava/time/LocalDate; A: $1
    function atEndOfMonth : JLocalDate; cdecl;                                  // ()Ljava/time/LocalDate; A: $1
    function compareTo(other : JYearMonth) : Integer; cdecl;                    // (Ljava/time/YearMonth;)I A: $1
    function equals(obj : JObject) : boolean; cdecl;                            // (Ljava/lang/Object;)Z A: $1
    function format(formatter : JDateTimeFormatter) : JString; cdecl;           // (Ljava/time/format/DateTimeFormatter;)Ljava/lang/String; A: $1
    function from(temporal : JTemporalAccessor) : JYearMonth; cdecl;            // (Ljava/time/temporal/TemporalAccessor;)Ljava/time/YearMonth; A: $9
    function get(field : JTemporalField) : Integer; cdecl;                      // (Ljava/time/temporal/TemporalField;)I A: $1
    function getLong(field : JTemporalField) : Int64; cdecl;                    // (Ljava/time/temporal/TemporalField;)J A: $1
    function getMonth : JMonth; cdecl;                                          // ()Ljava/time/Month; A: $1
    function getMonthValue : Integer; cdecl;                                    // ()I A: $1
    function getYear : Integer; cdecl;                                          // ()I A: $1
    function hashCode : Integer; cdecl;                                         // ()I A: $1
    function isAfter(other : JYearMonth) : boolean; cdecl;                      // (Ljava/time/YearMonth;)Z A: $1
    function isBefore(other : JYearMonth) : boolean; cdecl;                     // (Ljava/time/YearMonth;)Z A: $1
    function isLeapYear : boolean; cdecl;                                       // ()Z A: $1
    function isSupported(&unit : JTemporalUnit) : boolean; cdecl; overload;     // (Ljava/time/temporal/TemporalUnit;)Z A: $1
    function isSupported(field : JTemporalField) : boolean; cdecl; overload;    // (Ljava/time/temporal/TemporalField;)Z A: $1
    function isValidDay(dayOfMonth : Integer) : boolean; cdecl;                 // (I)Z A: $1
    function lengthOfMonth : Integer; cdecl;                                    // ()I A: $1
    function lengthOfYear : Integer; cdecl;                                     // ()I A: $1
    function minus(amountToSubtract : Int64; &unit : JTemporalUnit) : JYearMonth; cdecl; overload;// (JLjava/time/temporal/TemporalUnit;)Ljava/time/YearMonth; A: $1
    function minus(amountToSubtract : JTemporalAmount) : JYearMonth; cdecl; overload;// (Ljava/time/temporal/TemporalAmount;)Ljava/time/YearMonth; A: $1
    function minusMonths(monthsToSubtract : Int64) : JYearMonth; cdecl;         // (J)Ljava/time/YearMonth; A: $1
    function minusYears(yearsToSubtract : Int64) : JYearMonth; cdecl;           // (J)Ljava/time/YearMonth; A: $1
    function now : JYearMonth; cdecl; overload;                                 // ()Ljava/time/YearMonth; A: $9
    function now(clock : JClock) : JYearMonth; cdecl; overload;                 // (Ljava/time/Clock;)Ljava/time/YearMonth; A: $9
    function now(zone : JZoneId) : JYearMonth; cdecl; overload;                 // (Ljava/time/ZoneId;)Ljava/time/YearMonth; A: $9
    function parse(text : JCharSequence) : JYearMonth; cdecl; overload;         // (Ljava/lang/CharSequence;)Ljava/time/YearMonth; A: $9
    function parse(text : JCharSequence; formatter : JDateTimeFormatter) : JYearMonth; cdecl; overload;// (Ljava/lang/CharSequence;Ljava/time/format/DateTimeFormatter;)Ljava/time/YearMonth; A: $9
    function plus(amountToAdd : Int64; &unit : JTemporalUnit) : JYearMonth; cdecl; overload;// (JLjava/time/temporal/TemporalUnit;)Ljava/time/YearMonth; A: $1
    function plus(amountToAdd : JTemporalAmount) : JYearMonth; cdecl; overload; // (Ljava/time/temporal/TemporalAmount;)Ljava/time/YearMonth; A: $1
    function plusMonths(monthsToAdd : Int64) : JYearMonth; cdecl;               // (J)Ljava/time/YearMonth; A: $1
    function plusYears(yearsToAdd : Int64) : JYearMonth; cdecl;                 // (J)Ljava/time/YearMonth; A: $1
    function query(query : JTemporalQuery) : JObject; cdecl;                    // (Ljava/time/temporal/TemporalQuery;)Ljava/lang/Object; A: $1
    function range(field : JTemporalField) : JValueRange; cdecl;                // (Ljava/time/temporal/TemporalField;)Ljava/time/temporal/ValueRange; A: $1
    function toString : JString; cdecl;                                         // ()Ljava/lang/String; A: $1
    function withMonth(month : Integer) : JYearMonth; cdecl;                    // (I)Ljava/time/YearMonth; A: $1
    function withYear(year : Integer) : JYearMonth; cdecl;                      // (I)Ljava/time/YearMonth; A: $1
  end;

  [JavaSignature('java/time/YearMonth')]
  JYearMonth = interface(JObject)
    ['{8B86DB60-F18A-4587-BF02-397015D5B7F1}']
    function &until(endExclusive : JTemporal; &unit : JTemporalUnit) : Int64; cdecl;// (Ljava/time/temporal/Temporal;Ljava/time/temporal/TemporalUnit;)J A: $1
    function &with(adjuster : JTemporalAdjuster) : JYearMonth; cdecl; overload; // (Ljava/time/temporal/TemporalAdjuster;)Ljava/time/YearMonth; A: $1
    function &with(field : JTemporalField; newValue : Int64) : JYearMonth; cdecl; overload;// (Ljava/time/temporal/TemporalField;J)Ljava/time/YearMonth; A: $1
    function adjustInto(temporal : JTemporal) : JTemporal; cdecl;               // (Ljava/time/temporal/Temporal;)Ljava/time/temporal/Temporal; A: $1
    function atDay(dayOfMonth : Integer) : JLocalDate; cdecl;                   // (I)Ljava/time/LocalDate; A: $1
    function atEndOfMonth : JLocalDate; cdecl;                                  // ()Ljava/time/LocalDate; A: $1
    function compareTo(other : JYearMonth) : Integer; cdecl;                    // (Ljava/time/YearMonth;)I A: $1
    function equals(obj : JObject) : boolean; cdecl;                            // (Ljava/lang/Object;)Z A: $1
    function format(formatter : JDateTimeFormatter) : JString; cdecl;           // (Ljava/time/format/DateTimeFormatter;)Ljava/lang/String; A: $1
    function get(field : JTemporalField) : Integer; cdecl;                      // (Ljava/time/temporal/TemporalField;)I A: $1
    function getLong(field : JTemporalField) : Int64; cdecl;                    // (Ljava/time/temporal/TemporalField;)J A: $1
    function getMonth : JMonth; cdecl;                                          // ()Ljava/time/Month; A: $1
    function getMonthValue : Integer; cdecl;                                    // ()I A: $1
    function getYear : Integer; cdecl;                                          // ()I A: $1
    function hashCode : Integer; cdecl;                                         // ()I A: $1
    function isAfter(other : JYearMonth) : boolean; cdecl;                      // (Ljava/time/YearMonth;)Z A: $1
    function isBefore(other : JYearMonth) : boolean; cdecl;                     // (Ljava/time/YearMonth;)Z A: $1
    function isLeapYear : boolean; cdecl;                                       // ()Z A: $1
    function isSupported(&unit : JTemporalUnit) : boolean; cdecl; overload;     // (Ljava/time/temporal/TemporalUnit;)Z A: $1
    function isSupported(field : JTemporalField) : boolean; cdecl; overload;    // (Ljava/time/temporal/TemporalField;)Z A: $1
    function isValidDay(dayOfMonth : Integer) : boolean; cdecl;                 // (I)Z A: $1
    function lengthOfMonth : Integer; cdecl;                                    // ()I A: $1
    function lengthOfYear : Integer; cdecl;                                     // ()I A: $1
    function minus(amountToSubtract : Int64; &unit : JTemporalUnit) : JYearMonth; cdecl; overload;// (JLjava/time/temporal/TemporalUnit;)Ljava/time/YearMonth; A: $1
    function minus(amountToSubtract : JTemporalAmount) : JYearMonth; cdecl; overload;// (Ljava/time/temporal/TemporalAmount;)Ljava/time/YearMonth; A: $1
    function minusMonths(monthsToSubtract : Int64) : JYearMonth; cdecl;         // (J)Ljava/time/YearMonth; A: $1
    function minusYears(yearsToSubtract : Int64) : JYearMonth; cdecl;           // (J)Ljava/time/YearMonth; A: $1
    function plus(amountToAdd : Int64; &unit : JTemporalUnit) : JYearMonth; cdecl; overload;// (JLjava/time/temporal/TemporalUnit;)Ljava/time/YearMonth; A: $1
    function plus(amountToAdd : JTemporalAmount) : JYearMonth; cdecl; overload; // (Ljava/time/temporal/TemporalAmount;)Ljava/time/YearMonth; A: $1
    function plusMonths(monthsToAdd : Int64) : JYearMonth; cdecl;               // (J)Ljava/time/YearMonth; A: $1
    function plusYears(yearsToAdd : Int64) : JYearMonth; cdecl;                 // (J)Ljava/time/YearMonth; A: $1
    function query(query : JTemporalQuery) : JObject; cdecl;                    // (Ljava/time/temporal/TemporalQuery;)Ljava/lang/Object; A: $1
    function range(field : JTemporalField) : JValueRange; cdecl;                // (Ljava/time/temporal/TemporalField;)Ljava/time/temporal/ValueRange; A: $1
    function toString : JString; cdecl;                                         // ()Ljava/lang/String; A: $1
    function withMonth(month : Integer) : JYearMonth; cdecl;                    // (I)Ljava/time/YearMonth; A: $1
    function withYear(year : Integer) : JYearMonth; cdecl;                      // (I)Ljava/time/YearMonth; A: $1
  end;

  TJYearMonth = class(TJavaGenericImport<JYearMonthClass, JYearMonth>)
  end;

implementation

end.
